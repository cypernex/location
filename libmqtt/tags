!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-transform	dist/Makefile	/^	tar --transform="s\/\\.\/paho-c-${VERSION}\/" -cf ${HOME}\/rpmbuild\/SOURCES\/v${VERSION}.tar.gz --exclude=.\/build.paho --exclude=.git --exclude=*.bz .\/ --gzip$/;"	m
ADDRESS	src/samples/MQTTAsync_publish.c	32;"	d	file:
ADDRESS	src/samples/MQTTAsync_subscribe.c	32;"	d	file:
ADDRESS	src/samples/MQTTClient_publish.c	22;"	d	file:
ADDRESS	src/samples/MQTTClient_publish_async.c	28;"	d	file:
ADDRESS	src/samples/MQTTClient_subscribe.c	22;"	d	file:
ADDRESS	test_package/test_package.c	6;"	d	file:
ADDRLEN	src/Socket.c	1028;"	d	file:
APPLINK_CLEARERR	test/openssl/applink.c	17;"	d	file:
APPLINK_CLOSE	test/openssl/applink.c	24;"	d	file:
APPLINK_FCLOSE	test/openssl/applink.c	10;"	d	file:
APPLINK_FEOF	test/openssl/applink.c	9;"	d	file:
APPLINK_FERROR	test/openssl/applink.c	16;"	d	file:
APPLINK_FFLUSH	test/openssl/applink.c	15;"	d	file:
APPLINK_FGETS	test/openssl/applink.c	5;"	d	file:
APPLINK_FILENO	test/openssl/applink.c	18;"	d	file:
APPLINK_FOPEN	test/openssl/applink.c	12;"	d	file:
APPLINK_FPRINTF	test/openssl/applink.c	4;"	d	file:
APPLINK_FREAD	test/openssl/applink.c	6;"	d	file:
APPLINK_FSEEK	test/openssl/applink.c	13;"	d	file:
APPLINK_FSETMOD	test/openssl/applink.c	8;"	d	file:
APPLINK_FTELL	test/openssl/applink.c	14;"	d	file:
APPLINK_FWRITE	test/openssl/applink.c	7;"	d	file:
APPLINK_LSEEK	test/openssl/applink.c	23;"	d	file:
APPLINK_MAX	test/openssl/applink.c	25;"	d	file:
APPLINK_OPEN	test/openssl/applink.c	20;"	d	file:
APPLINK_READ	test/openssl/applink.c	21;"	d	file:
APPLINK_STDERR	test/openssl/applink.c	3;"	d	file:
APPLINK_STDIN	test/openssl/applink.c	1;"	d	file:
APPLINK_STDOUT	test/openssl/applink.c	2;"	d	file:
APPLINK_WRITE	test/openssl/applink.c	22;"	d	file:
APPVEYOR_BUILD_FOLDER	cbuild.bat	/^set APPVEYOR_BUILD_FOLDER=%cd%$/;"	v
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	440;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	443;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	446;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	449;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	453;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	455;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	457;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	461;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	464;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	467;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	472;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	475;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	478;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	483;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	486;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	489;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	492;"	d	file:
ARRAY_SIZE	src/MQTTProperties.c	26;"	d	file:
ARRAY_SIZE	src/MQTTReasonCodes.c	25;"	d	file:
ARRAY_SIZE	src/MQTTVersion.c	172;"	d	file:
ARRAY_SIZE	src/Messages.c	33;"	d	file:
ARRAY_SIZE	src/SSLSocket.c	191;"	d	file:
ARRAY_SIZE	src/utf-8.c	37;"	d	file:
ARRAY_SIZE	test/sync_client_test.c	38;"	d	file:
ARRAY_SIZE	test/test1.c	39;"	d	file:
ARRAY_SIZE	test/test10.c	53;"	d	file:
ARRAY_SIZE	test/test11.c	40;"	d	file:
ARRAY_SIZE	test/test15.c	41;"	d	file:
ARRAY_SIZE	test/test2.c	39;"	d	file:
ARRAY_SIZE	test/test3.c	54;"	d	file:
ARRAY_SIZE	test/test4.c	39;"	d	file:
ARRAY_SIZE	test/test45.c	40;"	d	file:
ARRAY_SIZE	test/test5.c	40;"	d	file:
ARRAY_SIZE	test/test8.c	36;"	d	file:
ARRAY_SIZE	test/test9.c	43;"	d	file:
ARRAY_SIZE	test/test95.c	44;"	d	file:
ARRAY_SIZE	test/test_connect_destroy.c	38;"	d	file:
ARRAY_SIZE	test/test_issue373.c	43;"	d	file:
ARRAY_SIZE	test/test_mqtt4async.c	53;"	d	file:
ARRAY_SIZE	test/test_mqtt4sync.c	53;"	d	file:
ARRAY_SIZE	test/test_sync_session_present.c	38;"	d	file:
ARRAY_SIZE	test/thread.c	38;"	d	file:
ASYNC_SAMPLES	Makefile	/^ASYNC_SAMPLES = ${addprefix ${blddir}\/samples\/,${SAMPLE_FILES_A}}$/;"	m
ASYNC_SSL_TESTS	Makefile	/^ASYNC_SSL_TESTS = ${addprefix ${blddir}\/test\/,${TEST_FILES_AS}}$/;"	m
ASYNC_TESTS	Makefile	/^ASYNC_TESTS = ${addprefix ${blddir}\/test\/,${TEST_FILES_A}}$/;"	m
ASYNC_UTILS	Makefile	/^ASYNC_UTILS = ${addprefix ${blddir}\/samples\/,${UTIL_FILES_AS}}$/;"	m
AUTH	src/MQTTPacket.h	/^	PINGREQ, PINGRESP, DISCONNECT, AUTH$/;"	e	enum:msgTypes
AUTH	test/test10.c	/^	PINGREQ, PINGRESP, DISCONNECT, AUTH$/;"	e	enum:msgTypes	file:
Ack	src/MQTTPacket.h	/^} Ack;$/;"	t	typeref:struct:__anon47
Acks	test/MQTTV5.py	/^class Acks(Packets):$/;"	c
AsyncTestClient	test/test5.c	/^} AsyncTestClient;$/;"	t	typeref:struct:__anon110	file:
AsyncTestClient_initializer	test/test5.c	107;"	d	file:
Auths	test/MQTTV5.py	/^class Auths(Packets):$/;"	c
BASE64_H	src/Base64.h	18;"	d
BUILD_TIMESTAMP	build/VersionInfo.h	4;"	d
BUILD_TYPE	Makefile	/^BUILD_TYPE ?= debug$/;"	m
Base64_decode	src/Base64.c	/^b64_size_t Base64_decode( b64_data_t *out, b64_size_t out_len, const char *in, b64_size_t in_len )$/;"	f
Base64_decodeLength	src/Base64.c	/^b64_size_t Base64_decodeLength( const char *in, b64_size_t in_len )$/;"	f
Base64_encode	src/Base64.c	/^b64_size_t Base64_encode( char *out, b64_size_t out_len, const b64_data_t *in, b64_size_t in_len )$/;"	f
Base64_encodeDecode	src/Base64.c	/^static b64_size_t Base64_encodeDecode($/;"	f	file:
Base64_encodeLength	src/Base64.c	/^b64_size_t Base64_encodeLength( const b64_data_t *in, b64_size_t in_len )$/;"	f
Broker_recordFFDC	src/Heap.c	/^char* Broker_recordFFDC(char* symptoms)$/;"	f
BufferedSockets	test/mqttsas.py	/^class BufferedSockets:$/;"	c
CApath	src/MQTTAsync.h	/^	const char* CApath;$/;"	m	struct:__anon91
CApath	src/MQTTClient.h	/^	const char* CApath;$/;"	m	struct:__anon68
CC	Makefile	/^CC ?= gcc$/;"	m
CCFLAGS_SO	Makefile	/^CCFLAGS_SO = -g -fPIC $(CFLAGS) -D_GNU_SOURCE -Os -Wall -fvisibility=hidden -I$(blddir_work) -DPAHO_MQTT_EXPORTS=1$/;"	m
CLIENTID	src/samples/MQTTAsync_publish.c	33;"	d	file:
CLIENTID	src/samples/MQTTAsync_subscribe.c	33;"	d	file:
CLIENTID	src/samples/MQTTClient_publish.c	23;"	d	file:
CLIENTID	src/samples/MQTTClient_publish_async.c	29;"	d	file:
CLIENTID	src/samples/MQTTClient_subscribe.c	23;"	d	file:
CLIENTID	test_package/test_package.c	7;"	d	file:
CLIENTS_H	src/Clients.h	23;"	d
CLIENT_VERSION	build/VersionInfo.h	5;"	d
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/root\/work\/location\/paho.mqtt.c\/build$/;"	m
CMAKE_BINARY_DIR	build/src/Makefile	/^CMAKE_BINARY_DIR = \/root\/work\/location\/paho.mqtt.c\/build$/;"	m
CMAKE_BINARY_DIR	build/test/Makefile	/^CMAKE_BINARY_DIR = \/root\/work\/location\/paho.mqtt.c\/build$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/src/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/test/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/root\/work\/location\/paho.mqtt.c$/;"	m
CMAKE_SOURCE_DIR	build/src/Makefile	/^CMAKE_SOURCE_DIR = \/root\/work\/location\/paho.mqtt.c$/;"	m
CMAKE_SOURCE_DIR	build/test/Makefile	/^CMAKE_SOURCE_DIR = \/root\/work\/location\/paho.mqtt.c$/;"	m
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	123;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	153;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	166;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	176;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	179;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	224;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	242;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	275;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	306;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	309;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	312;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	256;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	116;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	154;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	162;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	189;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	204;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	215;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	226;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	277;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	291;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	169;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	205;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	217;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	246;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	264;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	269;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	278;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	283;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	292;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	297;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	127;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	142;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	148;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	191;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	206;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	220;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	234;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	255;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	270;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	279;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	298;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	238;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
CONNACK	src/MQTTPacket.h	/^	CONNECT = 1, CONNACK, PUBLISH, PUBACK, PUBREC, PUBREL,$/;"	e	enum:msgTypes
CONNACK	test/test10.c	/^	CONNECT = 1, CONNACK, PUBLISH, PUBACK, PUBREC, PUBREL,$/;"	e	enum:msgTypes	file:
CONNECT	src/MQTTPacket.h	/^	CONNECT = 1, CONNACK, PUBLISH, PUBACK, PUBREC, PUBREL,$/;"	e	enum:msgTypes
CONNECT	test/python/mqttasync_module.c	/^	CONNECT, PUBLISH, SUBSCRIBE, SUBSCRIBE_MANY, UNSUBSCRIBE$/;"	e	enum:msgTypes	file:
CONNECT	test/test10.c	/^	CONNECT = 1, CONNACK, PUBLISH, PUBACK, PUBREC, PUBREL,$/;"	e	enum:msgTypes	file:
C_DIALECT	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	575;"	d	file:
C_DIALECT	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	577;"	d	file:
C_DIALECT	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	580;"	d	file:
C_DIALECT	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	582;"	d	file:
C_DIALECT	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	584;"	d	file:
CallbackEntry	test/python/mqttasync_module.c	/^} CallbackEntry;$/;"	t	typeref:struct:__anon114	file:
CallbackEntry	test/python/mqttclient_module.c	/^} CallbackEntry;$/;"	t	typeref:struct:__anon117	file:
ClientState	src/MQTTAsync.c	/^static ClientStates ClientState =$/;"	v	file:
ClientState	src/MQTTClient.c	/^static ClientStates ClientState =$/;"	v	file:
ClientStates	src/Clients.h	/^} ClientStates;$/;"	t	typeref:struct:__anon20
Clients	src/Clients.h	/^} Clients;$/;"	t	typeref:struct:__anon19
Clients	test/sync_client_test.c	/^} Clients;$/;"	t	typeref:struct:__anon103	file:
Clients	test/test3.c	/^} Clients;$/;"	t	typeref:struct:__anon128	file:
Connack	src/MQTTPacket.h	/^} Connack;$/;"	t	typeref:struct:__anon39
Connacks	test/MQTTV311.py	/^class Connacks(Packets):$/;"	c
Connacks	test/MQTTV3112.py	/^class Connacks(Packets):$/;"	c
Connacks	test/MQTTV5.py	/^class Connacks(Packets):$/;"	c
Connect	src/MQTTPacket.h	/^} Connect;$/;"	t	typeref:struct:__anon35
ConnectedEntry	test/python/mqttasync_module.c	/^} ConnectedEntry;$/;"	t	typeref:struct:__anon115	file:
Connects	test/MQTTV311.py	/^class Connects(Packets):$/;"	c
Connects	test/MQTTV3112.py	/^class Connects(Packets):$/;"	c
Connects	test/MQTTV5.py	/^class Connects(Packets):$/;"	c
DEC	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	496;"	d	file:
DIFF_TIME_TYPE	src/MQTTTime.h	41;"	d
DISCONNECT	src/MQTTPacket.h	/^	PINGREQ, PINGRESP, DISCONNECT, AUTH$/;"	e	enum:msgTypes
DISCONNECT	test/test10.c	/^	PINGREQ, PINGRESP, DISCONNECT, AUTH$/;"	e	enum:msgTypes	file:
DISCONNECTING	src/Clients.h	112;"	d
DOXYGEN_COMMAND	Makefile	/^DOXYGEN_COMMAND = doxygen$/;"	m
Disconnects	test/MQTTV311.py	/^class Disconnects(Packets):$/;"	c
Disconnects	test/MQTTV3112.py	/^class Disconnects(Packets):$/;"	c
Disconnects	test/MQTTV5.py	/^class Disconnects(Packets):$/;"	c
DllMain	src/MQTTAsync.c	/^BOOL APIENTRY DllMain(HANDLE hModule,$/;"	f
DllMain	src/MQTTClient.c	/^BOOL APIENTRY DllMain(HANDLE hModule,$/;"	f
EAGAIN	src/Socket.h	30;"	d
EAGAIN	src/Socket.h	31;"	d
EAGAIN	test/sync_client_test.c	30;"	d	file:
EAGAIN	test/test_mqtt4async.c	44;"	d	file:
EAGAIN	test/test_mqtt4sync.c	44;"	d	file:
ECONNRESET	src/Socket.h	40;"	d
ECONNRESET	src/Socket.h	41;"	d
ECONNRESET	test/sync_client_test.c	35;"	d	file:
ECONNRESET	test/test_mqtt4async.c	49;"	d	file:
ECONNRESET	test/test_mqtt4sync.c	49;"	d	file:
EINPROGRESS	src/Socket.h	34;"	d
EINPROGRESS	src/Socket.h	35;"	d
EINPROGRESS	test/sync_client_test.c	32;"	d	file:
EINPROGRESS	test/test_mqtt4async.c	46;"	d	file:
EINPROGRESS	test/test_mqtt4sync.c	46;"	d	file:
EINTR	src/Socket.h	32;"	d
EINTR	src/Socket.h	33;"	d
EINTR	test/sync_client_test.c	31;"	d	file:
EINTR	test/test_mqtt4async.c	45;"	d	file:
EINTR	test/test_mqtt4sync.c	45;"	d	file:
ELAPSED_TIME_TYPE	src/MQTTTime.h	40;"	d
END_GROUP	Makefile	/^END_GROUP = -Wl,--end-group$/;"	m
END_GROUP	Makefile	/^END_GROUP =$/;"	m
ENOTCONN	src/Socket.h	38;"	d
ENOTCONN	src/Socket.h	39;"	d
ENOTCONN	test/sync_client_test.c	34;"	d	file:
ENOTCONN	test/test_mqtt4async.c	48;"	d	file:
ENOTCONN	test/test_mqtt4sync.c	48;"	d	file:
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/src/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/test/Makefile	/^EQUALS = =$/;"	m
ETIMEDOUT	src/Socket.h	42;"	d
ETIMEDOUT	src/Socket.h	43;"	d
ETIMEDOUT	src/Thread.h	37;"	d
ETIMEDOUT	src/Thread.h	38;"	d
EWOULDBLOCK	src/Socket.h	36;"	d
EWOULDBLOCK	src/Socket.h	37;"	d
EWOULDBLOCK	test/sync_client_test.c	33;"	d	file:
EWOULDBLOCK	test/test_mqtt4async.c	47;"	d	file:
EWOULDBLOCK	test/test_mqtt4sync.c	47;"	d	file:
EXPORTDECLARATIONS_H	src/MQTTExportDeclarations.h	18;"	d
EXTRA_LIB	Makefile	/^EXTRA_LIB = -ldl$/;"	m
FLAGS_EXE	Makefile	/^FLAGS_EXE = $(LDFLAGS) -I ${srcdir} ${START_GROUP} -lpthread ${GAI_LIB} ${END_GROUP} -L ${blddir}$/;"	m
FLAGS_EXES	Makefile	/^FLAGS_EXES = $(LDFLAGS) -I ${srcdir} ${START_GROUP} -lpthread ${GAI_LIB} -lssl -lcrypto ${END_GROUP} -L ${blddir}$/;"	m
FUNC_ENTRY	src/StackTrace.h	29;"	d
FUNC_ENTRY	src/StackTrace.h	43;"	d
FUNC_ENTRY	src/StackTrace.h	55;"	d
FUNC_ENTRY_MAX	src/StackTrace.h	32;"	d
FUNC_ENTRY_MAX	src/StackTrace.h	46;"	d
FUNC_ENTRY_MAX	src/StackTrace.h	58;"	d
FUNC_ENTRY_MED	src/StackTrace.h	31;"	d
FUNC_ENTRY_MED	src/StackTrace.h	45;"	d
FUNC_ENTRY_MED	src/StackTrace.h	57;"	d
FUNC_ENTRY_NOLOG	src/StackTrace.h	30;"	d
FUNC_ENTRY_NOLOG	src/StackTrace.h	44;"	d
FUNC_ENTRY_NOLOG	src/StackTrace.h	56;"	d
FUNC_EXIT	src/StackTrace.h	33;"	d
FUNC_EXIT	src/StackTrace.h	47;"	d
FUNC_EXIT	src/StackTrace.h	59;"	d
FUNC_EXIT_MAX	src/StackTrace.h	36;"	d
FUNC_EXIT_MAX	src/StackTrace.h	50;"	d
FUNC_EXIT_MAX	src/StackTrace.h	62;"	d
FUNC_EXIT_MAX_RC	src/StackTrace.h	39;"	d
FUNC_EXIT_MAX_RC	src/StackTrace.h	53;"	d
FUNC_EXIT_MAX_RC	src/StackTrace.h	65;"	d
FUNC_EXIT_MED	src/StackTrace.h	35;"	d
FUNC_EXIT_MED	src/StackTrace.h	49;"	d
FUNC_EXIT_MED	src/StackTrace.h	61;"	d
FUNC_EXIT_MED_RC	src/StackTrace.h	38;"	d
FUNC_EXIT_MED_RC	src/StackTrace.h	52;"	d
FUNC_EXIT_MED_RC	src/StackTrace.h	64;"	d
FUNC_EXIT_NOLOG	src/StackTrace.h	34;"	d
FUNC_EXIT_NOLOG	src/StackTrace.h	48;"	d
FUNC_EXIT_NOLOG	src/StackTrace.h	60;"	d
FUNC_EXIT_RC	src/StackTrace.h	37;"	d
FUNC_EXIT_RC	src/StackTrace.h	51;"	d
FUNC_EXIT_RC	src/StackTrace.h	63;"	d
FindString	src/MQTTVersion.c	/^char* FindString(char* filename, const char* eyecatcher_input)$/;"	f
FixedHeaders	test/MQTTV311.py	/^class FixedHeaders:$/;"	c
FixedHeaders	test/MQTTV3112.py	/^class FixedHeaders:$/;"	c
FixedHeaders	test/MQTTV5.py	/^class FixedHeaders(object):$/;"	c
GAI_LIB	Makefile	/^GAI_LIB = $/;"	m
GAI_LIB	Makefile	/^GAI_LIB = -lanl$/;"	m
GETTIMEOFDAY	src/Log.c	44;"	d	file:
HEADERS	Makefile	/^HEADERS = $(srcdir)\/*.h$/;"	m
HEADERS_A	Makefile	/^HEADERS_A = $(HEADERS)$/;"	m
HEADERS_C	Makefile	/^HEADERS_C = $(filter-out $(srcdir)\/MQTTAsync.h, $(HEADERS))$/;"	m
HEAP_H	src/Heap.h	20;"	d
HEX	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	507;"	d	file:
HTTP_PROTOCOL	src/WebSocket.c	93;"	d	file:
Header	src/MQTTPacket.h	/^} Header;$/;"	t	typeref:union:__anon32
HeapDump	src/Heap.c	/^int HeapDump(FILE* file)$/;"	f
HeapDumpString	src/Heap.c	/^int HeapDumpString(FILE* file, char* str)$/;"	f
HeapScan	src/Heap.c	/^static void HeapScan(enum LOG_LEVELS log_level)$/;"	f	file:
Heap_findItem	src/Heap.c	/^void* Heap_findItem(void* p)$/;"	f
Heap_get_info	src/Heap.c	/^heap_info* Heap_get_info(void)$/;"	f
Heap_initialize	src/Heap.c	/^int Heap_initialize(void)$/;"	f
Heap_roundup	src/Heap.c	/^static size_t Heap_roundup(size_t size)$/;"	f	file:
Heap_terminate	src/Heap.c	/^void Heap_terminate(void)$/;"	f
Heap_unlink	src/Heap.c	/^void Heap_unlink(char* file, int line, void* p)$/;"	f
ID_VOID_MAIN	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
INET6_ADDRSTRLEN	src/Socket.h	83;"	d
INSTALL	Makefile	/^INSTALL = install$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA =  $(INSTALL) -m 644$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = $(INSTALL)$/;"	m
INVALID_LEVEL	src/Log.h	/^	INVALID_LEVEL = -1,$/;"	e	enum:LOG_LEVELS
INVALID_SOCKET	src/Socket.h	48;"	d
InitMutexesOnce	src/MQTTAsync.c	/^BOOL CALLBACK InitMutexesOnce ($/;"	f
InitOnceFunction	src/MQTTClient.c	/^BOOL CALLBACK InitOnceFunction ($/;"	f
Internal_heap_unlink	src/Heap.c	/^static int Internal_heap_unlink(char* file, int line, void* p)$/;"	f	file:
LDCONFIG	Makefile	/^LDCONFIG = echo$/;"	m
LDCONFIG	Makefile	/^LDCONFIG ?= \/sbin\/ldconfig$/;"	m
LDFLAGS_A	Makefile	/^LDFLAGS_A = $(LDFLAGS) -shared -Wl,-init,$(MQTTASYNC_INIT) $(START_GROUP) -lpthread $(GAI_LIB) $(END_GROUP)$/;"	m
LDFLAGS_AS	Makefile	/^LDFLAGS_AS = $(LDFLAGS) -shared $(START_GROUP) -lpthread $(GAI_LIB) $(EXTRA_LIB) -lssl -lcrypto $(END_GROUP) -Wl,-init,$(MQTTASYNC_INIT)$/;"	m
LDFLAGS_C	Makefile	/^LDFLAGS_C = $(LDFLAGS) -shared -Wl,-init,$(MQTTCLIENT_INIT) $(START_GROUP) -lpthread $(GAI_LIB) $(END_GROUP)$/;"	m
LDFLAGS_CS	Makefile	/^LDFLAGS_CS = $(LDFLAGS) -shared $(START_GROUP) -lpthread $(GAI_LIB) $(EXTRA_LIB) -lssl -lcrypto $(END_GROUP) -Wl,-init,$(MQTTCLIENT_INIT)$/;"	m
LEFT	src/Tree.c	95;"	d	file:
LIBMQTT_API	src/MQTTExportDeclarations.h	22;"	d
LIBMQTT_API	src/MQTTExportDeclarations.h	24;"	d
LIBMQTT_API	src/MQTTExportDeclarations.h	26;"	d
LIBMQTT_API	src/MQTTExportDeclarations.h	30;"	d
LIBMQTT_API	src/MQTTExportDeclarations.h	32;"	d
LINKEDLIST_H	src/LinkedList.h	20;"	d
LOCAL_C_INCLUDES	android/Android.mk	/^LOCAL_C_INCLUDES:= $(libpaho-mqtt3_c_includes)$/;"	m
LOCAL_EXPORT_C_INCLUDE_DIRS	android/Android.mk	/^LOCAL_EXPORT_C_INCLUDE_DIRS := $(LOCAL_PATH)\/$(libpaho-mqtt3_lib_path)$/;"	m
LOCAL_EXPORT_C_INCLUDE_DIRS	android/Android.mk	/^LOCAL_EXPORT_C_INCLUDE_DIRS := $(LOCAL_PATH)\/${libpaho-mqtt3_lib_path}$/;"	m
LOCAL_MODULE	android/Android.mk	/^LOCAL_MODULE    := libpaho-mqtt3a$/;"	m
LOCAL_MODULE	android/Android.mk	/^LOCAL_MODULE    := libpaho-mqtt3as$/;"	m
LOCAL_MODULE	android/Android.mk	/^LOCAL_MODULE    := libpaho-mqtt3c$/;"	m
LOCAL_MODULE	android/Android.mk	/^LOCAL_MODULE    := libpaho-mqtt3cs$/;"	m
LOCAL_PATH	android/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_SHARED_LIBRARIES	android/Android.mk	/^LOCAL_SHARED_LIBRARIES := libcrypto libssl libdl$/;"	m
LOCAL_SHARED_LIBRARIES	android/Android.mk	/^LOCAL_SHARED_LIBRARIES := libdl$/;"	m
LOCAL_SRC_FILES	android/Android.mk	/^LOCAL_SRC_FILES := $(libpaho-mqtt3_local_src_c_files_common) $(libpaho-mqtt3_local_src_c_files_a)$/;"	m
LOCAL_SRC_FILES	android/Android.mk	/^LOCAL_SRC_FILES := $(libpaho-mqtt3_local_src_c_files_common) $(libpaho-mqtt3_local_src_c_files_as)$/;"	m
LOCAL_SRC_FILES	android/Android.mk	/^LOCAL_SRC_FILES := $(libpaho-mqtt3_local_src_c_files_common) $(libpaho-mqtt3_local_src_c_files_c)$/;"	m
LOCAL_SRC_FILES	android/Android.mk	/^LOCAL_SRC_FILES := $(libpaho-mqtt3_local_src_c_files_common) $(libpaho-mqtt3_local_src_c_files_cs)$/;"	m
LOGA_ALWAYS	test/test6.c	171;"	d	file:
LOGA_DEBUG	test/sync_client_test.c	203;"	d	file:
LOGA_DEBUG	test/test1.c	144;"	d	file:
LOGA_DEBUG	test/test10.c	158;"	d	file:
LOGA_DEBUG	test/test11.c	120;"	d	file:
LOGA_DEBUG	test/test15.c	146;"	d	file:
LOGA_DEBUG	test/test2.c	135;"	d	file:
LOGA_DEBUG	test/test3.c	48;"	d	file:
LOGA_DEBUG	test/test4.c	119;"	d	file:
LOGA_DEBUG	test/test45.c	120;"	d	file:
LOGA_DEBUG	test/test5.c	227;"	d	file:
LOGA_DEBUG	test/test6.c	170;"	d	file:
LOGA_DEBUG	test/test8.c	95;"	d	file:
LOGA_DEBUG	test/test9.c	99;"	d	file:
LOGA_DEBUG	test/test95.c	100;"	d	file:
LOGA_DEBUG	test/test_connect_destroy.c	134;"	d	file:
LOGA_DEBUG	test/test_issue373.c	103;"	d	file:
LOGA_DEBUG	test/test_mqtt4async.c	137;"	d	file:
LOGA_DEBUG	test/test_mqtt4sync.c	137;"	d	file:
LOGA_DEBUG	test/test_sync_session_present.c	188;"	d	file:
LOGA_DEBUG	test/thread.c	84;"	d	file:
LOGA_INFO	test/sync_client_test.c	204;"	d	file:
LOGA_INFO	test/test1.c	145;"	d	file:
LOGA_INFO	test/test10.c	159;"	d	file:
LOGA_INFO	test/test11.c	121;"	d	file:
LOGA_INFO	test/test15.c	147;"	d	file:
LOGA_INFO	test/test2.c	136;"	d	file:
LOGA_INFO	test/test3.c	49;"	d	file:
LOGA_INFO	test/test4.c	120;"	d	file:
LOGA_INFO	test/test45.c	121;"	d	file:
LOGA_INFO	test/test5.c	228;"	d	file:
LOGA_INFO	test/test6.c	172;"	d	file:
LOGA_INFO	test/test8.c	96;"	d	file:
LOGA_INFO	test/test9.c	100;"	d	file:
LOGA_INFO	test/test95.c	101;"	d	file:
LOGA_INFO	test/test_connect_destroy.c	135;"	d	file:
LOGA_INFO	test/test_issue373.c	104;"	d	file:
LOGA_INFO	test/test_mqtt4async.c	138;"	d	file:
LOGA_INFO	test/test_mqtt4sync.c	138;"	d	file:
LOGA_INFO	test/test_sync_session_present.c	189;"	d	file:
LOGA_INFO	test/thread.c	85;"	d	file:
LOG_ERROR	src/Log.h	/^	LOG_ERROR,$/;"	e	enum:LOG_LEVELS
LOG_FATAL	src/Log.h	/^	LOG_FATAL,$/;"	e	enum:LOG_LEVELS
LOG_H	src/Log.h	19;"	d
LOG_LEVELS	src/Log.h	/^enum LOG_LEVELS {$/;"	g
LOG_PROTOCOL	src/Log.h	64;"	d
LOG_SEVERE	src/Log.h	/^	LOG_SEVERE,$/;"	e	enum:LOG_LEVELS
List	src/LinkedList.h	/^} List;$/;"	t	typeref:struct:__anon53
ListAppend	src/LinkedList.c	/^ListElement* ListAppend(List* aList, void* content, size_t size)$/;"	f
ListAppendNoMalloc	src/LinkedList.c	/^void ListAppendNoMalloc(List* aList, void* content, ListElement* newel, size_t size)$/;"	f
ListDetach	src/LinkedList.c	/^int ListDetach(List* aList, void* content)$/;"	f
ListDetachHead	src/LinkedList.c	/^void* ListDetachHead(List* aList)$/;"	f
ListDetachItem	src/LinkedList.c	/^int ListDetachItem(List* aList, void* content, int(*callback)(void*, void*))$/;"	f
ListElement	src/LinkedList.h	/^} ListElement;$/;"	t	typeref:struct:ListElementStruct
ListElementStruct	src/LinkedList.h	/^typedef struct ListElementStruct$/;"	s
ListEmpty	src/LinkedList.c	/^void ListEmpty(List* aList)$/;"	f
ListFind	src/LinkedList.c	/^ListElement* ListFind(List* aList, void* content)$/;"	f
ListFindItem	src/LinkedList.c	/^ListElement* ListFindItem(List* aList, void* content, int(*callback)(void*, void*))$/;"	f
ListFree	src/LinkedList.c	/^void ListFree(List* aList)$/;"	f
ListFreeNoContent	src/LinkedList.c	/^void ListFreeNoContent(List* aList)$/;"	f
ListInitialize	src/LinkedList.c	/^List* ListInitialize(void)$/;"	f
ListInsert	src/LinkedList.c	/^ListElement* ListInsert(List* aList, void* content, size_t size, ListElement* index)$/;"	f
ListNextElement	src/LinkedList.c	/^ListElement* ListNextElement(List* aList, ListElement** pos)$/;"	f
ListPopTail	src/LinkedList.c	/^void* ListPopTail(List* aList)$/;"	f
ListPrevElement	src/LinkedList.c	/^ListElement* ListPrevElement(List* aList, ListElement** pos)$/;"	f
ListRemove	src/LinkedList.c	/^int ListRemove(List* aList, void* content)$/;"	f
ListRemoveHead	src/LinkedList.c	/^int ListRemoveHead(List* aList)$/;"	f
ListRemoveItem	src/LinkedList.c	/^int ListRemoveItem(List* aList, void* content, int(*callback)(void*, void*))$/;"	f
ListUnlink	src/LinkedList.c	/^static int ListUnlink(List* aList, void* content, int(*callback)(void*, void*), int freeContent)$/;"	f	file:
ListZero	src/LinkedList.c	/^void ListZero(List* newl)$/;"	f
Log	src/Heap.c	/^void Log(enum LOG_LEVELS log_level, int msgno, char* format, ...)$/;"	f
Log	src/Log.c	/^void Log(enum LOG_LEVELS log_level, int msgno, const char *format, ...)$/;"	f
Log_formatTraceEntry	src/Log.c	/^static char* Log_formatTraceEntry(traceEntry* cur_entry)$/;"	f	file:
Log_initialize	src/Log.c	/^int Log_initialize(Log_nameValue* info)$/;"	f
Log_nameValue	src/Log.h	/^} Log_nameValue;$/;"	t	typeref:struct:__anon26
Log_output	src/Log.c	/^static void Log_output(enum LOG_LEVELS log_level, const char *msg)$/;"	f	file:
Log_posttrace	src/Log.c	/^static void Log_posttrace(enum LOG_LEVELS log_level, traceEntry* cur_entry)$/;"	f	file:
Log_pretrace	src/Log.c	/^static traceEntry* Log_pretrace(void)$/;"	f	file:
Log_setTraceCallback	src/Log.c	/^void Log_setTraceCallback(Log_traceCallback* callback)$/;"	f
Log_setTraceLevel	src/Log.c	/^void Log_setTraceLevel(enum LOG_LEVELS level)$/;"	f
Log_stackTrace	src/Log.c	/^void Log_stackTrace(enum LOG_LEVELS log_level, int msgno, int thread_id, int current_depth, const char* name, int line, int* rc)$/;"	f
Log_terminate	src/Log.c	/^void Log_terminate(void)$/;"	f
Log_trace	src/Log.c	/^static void Log_trace(enum LOG_LEVELS log_level, const char *buf)$/;"	f	file:
Log_traceCallback	src/Log.h	/^typedef void Log_traceCallback(enum LOG_LEVELS level, const char *message);$/;"	t
MACHINETYPE	Makefile	/^	MACHINETYPE ?= $(PROCESSOR_ARCHITECTURE)$/;"	m
MACHINETYPE	Makefile	/^	MACHINETYPE ?= $(shell uname -m)$/;"	m
MAJOR_VERSION	Makefile	/^MAJOR_VERSION := $(shell cat version.major)$/;"	m
MAXHOSTNAMELEN	src/Socket.h	28;"	d
MAXHOSTNAMELEN	test/sync_client_test.c	29;"	d	file:
MAXHOSTNAMELEN	test/test3.c	30;"	d	file:
MAXHOSTNAMELEN	test/test5.c	31;"	d	file:
MAXHOSTNAMELEN	test/test_mqtt4async.c	43;"	d	file:
MAXHOSTNAMELEN	test/test_mqtt4sync.c	43;"	d	file:
MAXMSGS	test/test5.c	317;"	d	file:
MAXMSGS	test/test9.c	194;"	d	file:
MAXMSGS	test/test95.c	195;"	d	file:
MAX_CLIENTID_LEN	src/MQTTProtocol.h	26;"	d
MAX_CLIENTID_LEN	src/MQTTProtocolClient.h	32;"	d
MAX_FUNCTION_NAME_LENGTH	src/Log.c	74;"	d	file:
MAX_FUNCTION_NAME_LENGTH	src/StackTrace.c	43;"	d	file:
MAX_INFO_STRINGS	src/MQTTAsync.c	4602;"	d	file:
MAX_INFO_STRINGS	src/MQTTClient.c	2862;"	d	file:
MAX_MSG_ID	src/MQTTProtocol.h	25;"	d
MAX_MSG_ID	src/MQTTProtocolClient.h	31;"	d
MAX_NO_OF_BUFFERS	src/MQTTPersistence.c	609;"	d	file:
MAX_NO_OF_REMAINING_LENGTH_BYTES	src/MQTTPacket.c	1017;"	d	file:
MAX_NO_OF_REMAINING_LENGTH_BYTES	src/MQTTPacket.c	331;"	d	file:
MAX_PACKETID	test/MQTTV5.py	/^MAX_PACKETID = 2**16-1$/;"	v
MAX_PACKET_SIZE	test/MQTTV5.py	/^MAX_PACKET_SIZE = 2**28-1$/;"	v
MAX_STACK_DEPTH	src/StackTrace.c	42;"	d	file:
MAX_THREADS	src/StackTrace.c	44;"	d	file:
MESSAGES_H	src/Messages.h	18;"	d
MESSAGE_FILENAME_EXTENSION	src/MQTTPersistenceDefault.h	23;"	d
MESSAGE_FILENAME_LENGTH	src/MQTTPersistenceDefault.h	21;"	d
MINOR_VERSION	Makefile	/^MINOR_VERSION := $(shell cat version.minor)$/;"	m
MQTT	test/mqttsas.py	/^MQTT = MQTTV311$/;"	v
MQTTASYNC_0_LEN_WILL_TOPIC	src/MQTTAsync.h	189;"	d
MQTTASYNC_BAD_MQTT_OPTION	src/MQTTAsync.h	181;"	d
MQTTASYNC_BAD_PROTOCOL	src/MQTTAsync.h	177;"	d
MQTTASYNC_BAD_QOS	src/MQTTAsync.h	155;"	d
MQTTASYNC_BAD_STRUCTURE	src/MQTTAsync.h	151;"	d
MQTTASYNC_BAD_UTF8_STRING	src/MQTTAsync.h	136;"	d
MQTTASYNC_DISCONNECTED	src/MQTTAsync.h	127;"	d
MQTTASYNC_FAILURE	src/MQTTAsync.h	118;"	d
MQTTASYNC_H	src/MQTTAsync.h	89;"	d
MQTTASYNC_INIT	Makefile	/^MQTTASYNC_INIT = MQTTAsync_init$/;"	m
MQTTASYNC_INIT	Makefile	/^MQTTASYNC_INIT = _MQTTAsync_init$/;"	m
MQTTASYNC_MAX_BUFFERED_MESSAGES	src/MQTTAsync.h	167;"	d
MQTTASYNC_MAX_MESSAGES_INFLIGHT	src/MQTTAsync.h	132;"	d
MQTTASYNC_NO_MORE_MSGIDS	src/MQTTAsync.h	159;"	d
MQTTASYNC_NULL_PARAMETER	src/MQTTAsync.h	140;"	d
MQTTASYNC_OPERATION_INCOMPLETE	src/MQTTAsync.h	163;"	d
MQTTASYNC_PERSISTENCE_ERROR	src/MQTTAsync.h	122;"	d
MQTTASYNC_SSL_NOT_SUPPORTED	src/MQTTAsync.h	171;"	d
MQTTASYNC_SUCCESS	src/MQTTAsync.h	113;"	d
MQTTASYNC_TOPICNAME_TRUNCATED	src/MQTTAsync.h	146;"	d
MQTTASYNC_TRACE_ERROR	src/MQTTAsync.h	/^	MQTTASYNC_TRACE_ERROR,$/;"	e	enum:MQTTASYNC_TRACE_LEVELS
MQTTASYNC_TRACE_FATAL	src/MQTTAsync.h	/^	MQTTASYNC_TRACE_FATAL,$/;"	e	enum:MQTTASYNC_TRACE_LEVELS
MQTTASYNC_TRACE_LEVELS	src/MQTTAsync.h	/^enum MQTTASYNC_TRACE_LEVELS$/;"	g
MQTTASYNC_TRACE_MAXIMUM	src/MQTTAsync.h	/^	MQTTASYNC_TRACE_MAXIMUM = 1,$/;"	e	enum:MQTTASYNC_TRACE_LEVELS
MQTTASYNC_TRACE_MEDIUM	src/MQTTAsync.h	/^	MQTTASYNC_TRACE_MEDIUM,$/;"	e	enum:MQTTASYNC_TRACE_LEVELS
MQTTASYNC_TRACE_MINIMUM	src/MQTTAsync.h	/^	MQTTASYNC_TRACE_MINIMUM,$/;"	e	enum:MQTTASYNC_TRACE_LEVELS
MQTTASYNC_TRACE_PROTOCOL	src/MQTTAsync.h	/^	MQTTASYNC_TRACE_PROTOCOL,$/;"	e	enum:MQTTASYNC_TRACE_LEVELS
MQTTASYNC_TRACE_SEVERE	src/MQTTAsync.h	/^	MQTTASYNC_TRACE_SEVERE,$/;"	e	enum:MQTTASYNC_TRACE_LEVELS
MQTTASYNC_TRUE	src/MQTTAsync.h	1503;"	d
MQTTASYNC_WRONG_MQTT_VERSION	src/MQTTAsync.h	185;"	d
MQTTAsync	src/MQTTAsync.h	/^typedef void* MQTTAsync;$/;"	t
MQTTAsync_SSLOptions	src/MQTTAsync.h	/^} MQTTAsync_SSLOptions;$/;"	t	typeref:struct:__anon91
MQTTAsync_SSLOptions_initializer	src/MQTTAsync.h	1056;"	d
MQTTAsync_Socket_noPendingWrites	src/MQTTAsync.c	/^static int MQTTAsync_Socket_noPendingWrites(int socket)$/;"	f	file:
MQTTAsync_addCommand	src/MQTTAsync.c	/^static int MQTTAsync_addCommand(MQTTAsync_queuedCommand* command, int command_size)$/;"	f	file:
MQTTAsync_assignMsgId	src/MQTTAsync.c	/^static int MQTTAsync_assignMsgId(MQTTAsyncs* m)$/;"	f	file:
MQTTAsync_callOptions	src/MQTTAsync.h	/^typedef struct MQTTAsync_responseOptions MQTTAsync_callOptions;$/;"	t	typeref:struct:MQTTAsync_responseOptions
MQTTAsync_callOptions_initializer	src/MQTTAsync.h	689;"	d
MQTTAsync_checkConn	src/MQTTAsync.c	/^static int MQTTAsync_checkConn(MQTTAsync_command* command, MQTTAsyncs* client)$/;"	f	file:
MQTTAsync_checkDisconnect	src/MQTTAsync.c	/^static void MQTTAsync_checkDisconnect(MQTTAsync handle, MQTTAsync_command* command)$/;"	f	file:
MQTTAsync_checkTimeouts	src/MQTTAsync.c	/^static void MQTTAsync_checkTimeouts(void)$/;"	f	file:
MQTTAsync_cleanSession	src/MQTTAsync.c	/^static int MQTTAsync_cleanSession(Clients* client)$/;"	f	file:
MQTTAsync_cleanup	src/MQTTAsync.c	/^void MQTTAsync_cleanup(void)$/;"	f
MQTTAsync_closeOnly	src/MQTTAsync.c	/^static void MQTTAsync_closeOnly(Clients* client, enum MQTTReasonCodes reasonCode, MQTTProperties* props)$/;"	f	file:
MQTTAsync_closeSession	src/MQTTAsync.c	/^static void MQTTAsync_closeSession(Clients* client, enum MQTTReasonCodes reasonCode, MQTTProperties* props)$/;"	f	file:
MQTTAsync_command	src/MQTTAsync.c	/^} MQTTAsync_command;$/;"	t	typeref:struct:__anon4	file:
MQTTAsync_completeConnection	src/MQTTAsync.c	/^static int MQTTAsync_completeConnection(MQTTAsyncs* m, Connack* connack)$/;"	f	file:
MQTTAsync_connect	src/MQTTAsync.c	/^int MQTTAsync_connect(MQTTAsync handle, const MQTTAsync_connectOptions* options)$/;"	f
MQTTAsync_connectOptions	src/MQTTAsync.h	/^} MQTTAsync_connectOptions;$/;"	t	typeref:struct:__anon93
MQTTAsync_connectOptions_initializer	src/MQTTAsync.h	1247;"	d
MQTTAsync_connectOptions_initializer5	src/MQTTAsync.h	1250;"	d
MQTTAsync_connectOptions_initializer5_ws	src/MQTTAsync.h	1256;"	d
MQTTAsync_connectOptions_initializer_ws	src/MQTTAsync.h	1253;"	d
MQTTAsync_connected	src/MQTTAsync.h	/^typedef void MQTTAsync_connected(void* context, char* cause);$/;"	t
MQTTAsync_connecting	src/MQTTAsync.c	/^static int MQTTAsync_connecting(MQTTAsyncs* m)$/;"	f	file:
MQTTAsync_connectionLost	src/MQTTAsync.h	/^typedef void MQTTAsync_connectionLost(void* context, char* cause);$/;"	t
MQTTAsync_create	src/MQTTAsync.c	/^int MQTTAsync_create(MQTTAsync* handle, const char* serverURI, const char* clientId,$/;"	f
MQTTAsync_createOptions	src/MQTTAsync.h	/^} MQTTAsync_createOptions;$/;"	t	typeref:struct:__anon88
MQTTAsync_createOptions_initializer	src/MQTTAsync.h	899;"	d
MQTTAsync_createOptions_initializer5	src/MQTTAsync.h	901;"	d
MQTTAsync_createWithOptions	src/MQTTAsync.c	/^int MQTTAsync_createWithOptions(MQTTAsync* handle, const char* serverURI, const char* clientId,$/;"	f
MQTTAsync_cycle	src/MQTTAsync.c	/^static MQTTPacket* MQTTAsync_cycle(int* sock, unsigned long timeout, int* rc)$/;"	f	file:
MQTTAsync_deliverMessage	src/MQTTAsync.c	/^static int MQTTAsync_deliverMessage(MQTTAsyncs* m, char* topicName, size_t topicLen, MQTTAsync_message* mm)$/;"	f	file:
MQTTAsync_deliveryComplete	src/MQTTAsync.h	/^typedef void MQTTAsync_deliveryComplete(void* context, MQTTAsync_token token);$/;"	t
MQTTAsync_destroy	src/MQTTAsync.c	/^void MQTTAsync_destroy(MQTTAsync* handle)$/;"	f
MQTTAsync_disconnect	src/MQTTAsync.c	/^int MQTTAsync_disconnect(MQTTAsync handle, const MQTTAsync_disconnectOptions* options)$/;"	f
MQTTAsync_disconnect1	src/MQTTAsync.c	/^static int MQTTAsync_disconnect1(MQTTAsync handle, const MQTTAsync_disconnectOptions* options, int internal)$/;"	f	file:
MQTTAsync_disconnectOptions	src/MQTTAsync.h	/^} MQTTAsync_disconnectOptions;$/;"	t	typeref:struct:__anon95
MQTTAsync_disconnectOptions_initializer	src/MQTTAsync.h	1334;"	d
MQTTAsync_disconnectOptions_initializer5	src/MQTTAsync.h	1337;"	d
MQTTAsync_disconnect_internal	src/MQTTAsync.c	/^static int MQTTAsync_disconnect_internal(MQTTAsync handle, int timeout)$/;"	f	file:
MQTTAsync_disconnected	src/MQTTAsync.h	/^typedef void MQTTAsync_disconnected(void* context, MQTTProperties* properties,$/;"	t
MQTTAsync_emptyMessageQueue	src/MQTTAsync.c	/^static void MQTTAsync_emptyMessageQueue(Clients* client)$/;"	f	file:
MQTTAsync_failureData	src/MQTTAsync.h	/^} MQTTAsync_failureData;$/;"	t	typeref:struct:__anon76
MQTTAsync_failureData5	src/MQTTAsync.h	/^} MQTTAsync_failureData5;$/;"	t	typeref:struct:__anon77
MQTTAsync_failureData5_initializer	src/MQTTAsync.h	482;"	d
MQTTAsync_free	src/MQTTAsync.c	/^void MQTTAsync_free(void* memory)$/;"	f
MQTTAsync_freeCommand	src/MQTTAsync.c	/^static void MQTTAsync_freeCommand(MQTTAsync_queuedCommand *command)$/;"	f	file:
MQTTAsync_freeCommand1	src/MQTTAsync.c	/^static void MQTTAsync_freeCommand1(MQTTAsync_queuedCommand *command)$/;"	f	file:
MQTTAsync_freeCommands	src/MQTTAsync.c	/^static void MQTTAsync_freeCommands(MQTTAsyncs* m)$/;"	f	file:
MQTTAsync_freeMessage	src/MQTTAsync.c	/^void MQTTAsync_freeMessage(MQTTAsync_message** message)$/;"	f
MQTTAsync_freeResponses	src/MQTTAsync.c	/^static void MQTTAsync_freeResponses(MQTTAsyncs* m)$/;"	f	file:
MQTTAsync_freeServerURIs	src/MQTTAsync.c	/^static void MQTTAsync_freeServerURIs(MQTTAsyncs* m)$/;"	f	file:
MQTTAsync_getNoBufferedMessages	src/MQTTAsync.c	/^static int MQTTAsync_getNoBufferedMessages(MQTTAsyncs* m)$/;"	f	file:
MQTTAsync_getPendingTokens	src/MQTTAsync.c	/^int MQTTAsync_getPendingTokens(MQTTAsync handle, MQTTAsync_token **tokens)$/;"	f
MQTTAsync_getVersionInfo	src/MQTTAsync.c	/^MQTTAsync_nameValue* MQTTAsync_getVersionInfo(void)$/;"	f
MQTTAsync_global_init	src/MQTTAsync.c	/^void MQTTAsync_global_init(MQTTAsync_init_options* inits)$/;"	f
MQTTAsync_init	src/MQTTAsync.c	/^int MQTTAsync_init(void)$/;"	f
MQTTAsync_init_options	src/MQTTAsync.h	/^} MQTTAsync_init_options;$/;"	t	typeref:struct:__anon74
MQTTAsync_init_options_initializer	src/MQTTAsync.h	227;"	d
MQTTAsync_init_rand	src/MQTTAsync.c	/^void MQTTAsync_init_rand(void)$/;"	f
MQTTAsync_insertInOrder	src/MQTTAsync.c	/^static void MQTTAsync_insertInOrder(List* list, void* content, int size)$/;"	f	file:
MQTTAsync_isComplete	src/MQTTAsync.c	/^int MQTTAsync_isComplete(MQTTAsync handle, MQTTAsync_token dt)$/;"	f
MQTTAsync_isConnected	src/MQTTAsync.c	/^int MQTTAsync_isConnected(MQTTAsync handle)$/;"	f
MQTTAsync_lock_mutex	src/MQTTAsync.c	/^static void MQTTAsync_lock_mutex(mutex_type amutex)$/;"	f	file:
MQTTAsync_message	src/MQTTAsync.h	/^} MQTTAsync_message;$/;"	t	typeref:struct:__anon75
MQTTAsync_messageArrived	src/MQTTAsync.h	/^typedef int MQTTAsync_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message);$/;"	t
MQTTAsync_message_initializer	src/MQTTAsync.h	318;"	d
MQTTAsync_nameValue	src/MQTTAsync.h	/^} MQTTAsync_nameValue;$/;"	t	typeref:struct:__anon92
MQTTAsync_onFailure	src/MQTTAsync.h	/^typedef void MQTTAsync_onFailure(void* context,  MQTTAsync_failureData* response);$/;"	t
MQTTAsync_onFailure5	src/MQTTAsync.h	/^typedef void MQTTAsync_onFailure5(void* context,  MQTTAsync_failureData5* response);$/;"	t
MQTTAsync_onSuccess	src/MQTTAsync.h	/^typedef void MQTTAsync_onSuccess(void* context, MQTTAsync_successData* response);$/;"	t
MQTTAsync_onSuccess5	src/MQTTAsync.h	/^typedef void MQTTAsync_onSuccess5(void* context, MQTTAsync_successData5* response);$/;"	t
MQTTAsync_persistCommand	src/MQTTAsync.c	/^static int MQTTAsync_persistCommand(MQTTAsync_queuedCommand* qcmd)$/;"	f	file:
MQTTAsync_processCommand	src/MQTTAsync.c	/^static int MQTTAsync_processCommand(void)$/;"	f	file:
MQTTAsync_queuedCommand	src/MQTTAsync.c	/^} MQTTAsync_queuedCommand;$/;"	t	typeref:struct:__anon11	file:
MQTTAsync_randomJitter	src/MQTTAsync.c	/^int MQTTAsync_randomJitter(int currentIntervalBase, int minInterval, int maxInterval)$/;"	f
MQTTAsync_receiveThread	src/MQTTAsync.c	/^static thread_return_type WINAPI MQTTAsync_receiveThread(void* n)$/;"	f	file:
MQTTAsync_reconnect	src/MQTTAsync.c	/^int MQTTAsync_reconnect(MQTTAsync handle)$/;"	f
MQTTAsync_responseOptions	src/MQTTAsync.h	/^typedef struct MQTTAsync_responseOptions$/;"	s
MQTTAsync_responseOptions	src/MQTTAsync.h	/^} MQTTAsync_responseOptions;$/;"	t	typeref:struct:MQTTAsync_responseOptions
MQTTAsync_responseOptions_initializer	src/MQTTAsync.h	685;"	d
MQTTAsync_restoreCommand	src/MQTTAsync.c	/^static MQTTAsync_queuedCommand* MQTTAsync_restoreCommand(char* buffer, int buflen, int MQTTVersion)$/;"	f	file:
MQTTAsync_restoreCommands	src/MQTTAsync.c	/^static int MQTTAsync_restoreCommands(MQTTAsyncs* client)$/;"	f	file:
MQTTAsync_retry	src/MQTTAsync.c	/^static void MQTTAsync_retry(void)$/;"	f	file:
MQTTAsync_send	src/MQTTAsync.c	/^int MQTTAsync_send(MQTTAsync handle, const char* destinationName, int payloadlen, const void* payload,$/;"	f
MQTTAsync_sendMessage	src/MQTTAsync.c	/^int MQTTAsync_sendMessage(MQTTAsync handle, const char* destinationName, const MQTTAsync_message* message,$/;"	f
MQTTAsync_sendThread	src/MQTTAsync.c	/^static thread_return_type WINAPI MQTTAsync_sendThread(void* n)$/;"	f	file:
MQTTAsync_setCallbacks	src/MQTTAsync.c	/^int MQTTAsync_setCallbacks(MQTTAsync handle, void* context,$/;"	f
MQTTAsync_setConnected	src/MQTTAsync.c	/^int MQTTAsync_setConnected(MQTTAsync handle, void* context, MQTTAsync_connected* connected)$/;"	f
MQTTAsync_setConnectionLostCallback	src/MQTTAsync.c	/^int MQTTAsync_setConnectionLostCallback(MQTTAsync handle, void* context,$/;"	f
MQTTAsync_setDeliveryCompleteCallback	src/MQTTAsync.c	/^int MQTTAsync_setDeliveryCompleteCallback(MQTTAsync handle, void* context,$/;"	f
MQTTAsync_setDisconnected	src/MQTTAsync.c	/^int MQTTAsync_setDisconnected(MQTTAsync handle, void* context, MQTTAsync_disconnected* disconnected)$/;"	f
MQTTAsync_setMessageArrivedCallback	src/MQTTAsync.c	/^int MQTTAsync_setMessageArrivedCallback(MQTTAsync handle, void* context,$/;"	f
MQTTAsync_setTraceCallback	src/MQTTAsync.c	/^void MQTTAsync_setTraceCallback(MQTTAsync_traceCallback* callback)$/;"	f
MQTTAsync_setTraceLevel	src/MQTTAsync.c	/^void MQTTAsync_setTraceLevel(enum MQTTASYNC_TRACE_LEVELS level)$/;"	f
MQTTAsync_sleep	src/MQTTAsync.c	/^void MQTTAsync_sleep(long milliseconds)$/;"	f
MQTTAsync_startConnectRetry	src/MQTTAsync.c	/^static void MQTTAsync_startConnectRetry(MQTTAsyncs* m)$/;"	f	file:
MQTTAsync_stop	src/MQTTAsync.c	/^static void MQTTAsync_stop(void)$/;"	f	file:
MQTTAsync_strerror	src/MQTTAsync.c	/^const char* MQTTAsync_strerror(int code)$/;"	f
MQTTAsync_struct	src/MQTTAsync.c	/^typedef struct MQTTAsync_struct$/;"	s	file:
MQTTAsync_subscribe	src/MQTTAsync.c	/^int MQTTAsync_subscribe(MQTTAsync handle, const char* topic, int qos, MQTTAsync_responseOptions* response)$/;"	f
MQTTAsync_subscribeMany	src/MQTTAsync.c	/^int MQTTAsync_subscribeMany(MQTTAsync handle, int count, char* const* topic, int* qos, MQTTAsync_responseOptions* response)$/;"	f
MQTTAsync_successData	src/MQTTAsync.h	/^} MQTTAsync_successData;$/;"	t	typeref:struct:__anon78
MQTTAsync_successData5	src/MQTTAsync.h	/^} MQTTAsync_successData5;$/;"	t	typeref:struct:__anon82
MQTTAsync_successData5_initializer	src/MQTTAsync.h	555;"	d
MQTTAsync_terminate	src/MQTTAsync.c	/^static void MQTTAsync_terminate(void)$/;"	f	file:
MQTTAsync_threadStates	src/MQTTAsync.c	/^enum MQTTAsync_threadStates$/;"	g	file:
MQTTAsync_token	src/MQTTAsync.h	/^typedef int MQTTAsync_token;$/;"	t
MQTTAsync_traceCallback	src/MQTTAsync.h	/^typedef void MQTTAsync_traceCallback(enum MQTTASYNC_TRACE_LEVELS level, char* message);$/;"	t
MQTTAsync_unlock_mutex	src/MQTTAsync.c	/^static void MQTTAsync_unlock_mutex(mutex_type amutex)$/;"	f	file:
MQTTAsync_unpersistCommand	src/MQTTAsync.c	/^static int MQTTAsync_unpersistCommand(MQTTAsync_queuedCommand* qcmd)$/;"	f	file:
MQTTAsync_unpersistCommandsAndMessages	src/MQTTAsync.c	/^static int MQTTAsync_unpersistCommandsAndMessages(Clients* c)$/;"	f	file:
MQTTAsync_unpersistInflightMessages	src/MQTTAsync.c	/^static int MQTTAsync_unpersistInflightMessages(Clients* c)$/;"	f	file:
MQTTAsync_unsubscribe	src/MQTTAsync.c	/^int MQTTAsync_unsubscribe(MQTTAsync handle, const char* topic, MQTTAsync_responseOptions* response)$/;"	f
MQTTAsync_unsubscribeMany	src/MQTTAsync.c	/^int MQTTAsync_unsubscribeMany(MQTTAsync handle, int count, char* const* topic, MQTTAsync_responseOptions* response)$/;"	f
MQTTAsync_waitForCompletion	src/MQTTAsync.c	/^int MQTTAsync_waitForCompletion(MQTTAsync handle, MQTTAsync_token dt, unsigned long timeout)$/;"	f
MQTTAsync_willOptions	src/MQTTAsync.h	/^} MQTTAsync_willOptions;$/;"	t	typeref:struct:__anon89
MQTTAsync_willOptions_initializer	src/MQTTAsync.h	948;"	d
MQTTAsync_writeComplete	src/MQTTAsync.c	/^static void MQTTAsync_writeComplete(int socket, int rc)$/;"	f	file:
MQTTAsyncs	src/MQTTAsync.c	/^} MQTTAsyncs;$/;"	t	typeref:struct:MQTTAsync_struct	file:
MQTTCLIENTPERSISTENCE_H	src/MQTTClientPersistence.h	60;"	d
MQTTCLIENT_0_LEN_WILL_TOPIC	src/MQTTClient.h	197;"	d
MQTTCLIENT_BAD_MQTT_OPTION	src/MQTTClient.h	189;"	d
MQTTCLIENT_BAD_MQTT_VERSION	src/MQTTClient.h	179;"	d
MQTTCLIENT_BAD_PROTOCOL	src/MQTTClient.h	185;"	d
MQTTCLIENT_BAD_QOS	src/MQTTClient.h	171;"	d
MQTTCLIENT_BAD_STRUCTURE	src/MQTTClient.h	167;"	d
MQTTCLIENT_BAD_UTF8_STRING	src/MQTTClient.h	152;"	d
MQTTCLIENT_DISCONNECTED	src/MQTTClient.h	143;"	d
MQTTCLIENT_FAILURE	src/MQTTClient.h	136;"	d
MQTTCLIENT_H	src/MQTTClient.h	107;"	d
MQTTCLIENT_INIT	Makefile	/^MQTTCLIENT_INIT = MQTTClient_init$/;"	m
MQTTCLIENT_INIT	Makefile	/^MQTTCLIENT_INIT = _MQTTClient_init$/;"	m
MQTTCLIENT_MAX_MESSAGES_INFLIGHT	src/MQTTClient.h	148;"	d
MQTTCLIENT_NULL_PARAMETER	src/MQTTClient.h	156;"	d
MQTTCLIENT_PERSISTENCE_DEFAULT	src/MQTTClientPersistence.h	69;"	d
MQTTCLIENT_PERSISTENCE_ERROR	src/MQTTClientPersistence.h	85;"	d
MQTTCLIENT_PERSISTENCE_NONE	src/MQTTClientPersistence.h	74;"	d
MQTTCLIENT_PERSISTENCE_USER	src/MQTTClientPersistence.h	79;"	d
MQTTCLIENT_SSL_NOT_SUPPORTED	src/MQTTClient.h	175;"	d
MQTTCLIENT_SUCCESS	src/MQTTClient.h	131;"	d
MQTTCLIENT_TOPICNAME_TRUNCATED	src/MQTTClient.h	162;"	d
MQTTCLIENT_TRACE_ERROR	src/MQTTClient.h	/^	MQTTCLIENT_TRACE_ERROR,$/;"	e	enum:MQTTCLIENT_TRACE_LEVELS
MQTTCLIENT_TRACE_FATAL	src/MQTTClient.h	/^	MQTTCLIENT_TRACE_FATAL,$/;"	e	enum:MQTTCLIENT_TRACE_LEVELS
MQTTCLIENT_TRACE_LEVELS	src/MQTTClient.h	/^enum MQTTCLIENT_TRACE_LEVELS$/;"	g
MQTTCLIENT_TRACE_MAXIMUM	src/MQTTClient.h	/^	MQTTCLIENT_TRACE_MAXIMUM = 1,$/;"	e	enum:MQTTCLIENT_TRACE_LEVELS
MQTTCLIENT_TRACE_MEDIUM	src/MQTTClient.h	/^	MQTTCLIENT_TRACE_MEDIUM,$/;"	e	enum:MQTTCLIENT_TRACE_LEVELS
MQTTCLIENT_TRACE_MINIMUM	src/MQTTClient.h	/^	MQTTCLIENT_TRACE_MINIMUM,$/;"	e	enum:MQTTCLIENT_TRACE_LEVELS
MQTTCLIENT_TRACE_PROTOCOL	src/MQTTClient.h	/^	MQTTCLIENT_TRACE_PROTOCOL,$/;"	e	enum:MQTTCLIENT_TRACE_LEVELS
MQTTCLIENT_TRACE_SEVERE	src/MQTTClient.h	/^	MQTTCLIENT_TRACE_SEVERE,$/;"	e	enum:MQTTCLIENT_TRACE_LEVELS
MQTTCLIENT_WRONG_MQTT_VERSION	src/MQTTClient.h	193;"	d
MQTTClient	src/MQTTClient.h	/^typedef void* MQTTClient;$/;"	t
MQTTClient_SSLOptions	src/MQTTClient.h	/^} MQTTClient_SSLOptions;$/;"	t	typeref:struct:__anon68
MQTTClient_SSLOptions_initializer	src/MQTTClient.h	747;"	d
MQTTClient_cleanSession	src/MQTTClient.c	/^static int MQTTClient_cleanSession(Clients* client)$/;"	f	file:
MQTTClient_cleanup	src/MQTTClient.c	/^void MQTTClient_cleanup(void)$/;"	f
MQTTClient_closeSession	src/MQTTClient.c	/^static void MQTTClient_closeSession(Clients* client, enum MQTTReasonCodes reason, MQTTProperties* props)$/;"	f	file:
MQTTClient_connect	src/MQTTClient.c	/^int MQTTClient_connect(MQTTClient handle, MQTTClient_connectOptions* options)$/;"	f
MQTTClient_connect5	src/MQTTClient.c	/^MQTTResponse MQTTClient_connect5(MQTTClient handle, MQTTClient_connectOptions* options,$/;"	f
MQTTClient_connectAll	src/MQTTClient.c	/^MQTTResponse MQTTClient_connectAll(MQTTClient handle, MQTTClient_connectOptions* options,$/;"	f
MQTTClient_connectOptions	src/MQTTClient.h	/^} MQTTClient_connectOptions;$/;"	t	typeref:struct:__anon70
MQTTClient_connectOptions_initializer	src/MQTTClient.h	931;"	d
MQTTClient_connectOptions_initializer5	src/MQTTClient.h	934;"	d
MQTTClient_connectOptions_initializer5_ws	src/MQTTClient.h	940;"	d
MQTTClient_connectOptions_initializer_ws	src/MQTTClient.h	937;"	d
MQTTClient_connectURI	src/MQTTClient.c	/^static MQTTResponse MQTTClient_connectURI(MQTTClient handle, MQTTClient_connectOptions* options, const char* serverURI,$/;"	f	file:
MQTTClient_connectURIVersion	src/MQTTClient.c	/^static MQTTResponse MQTTClient_connectURIVersion(MQTTClient handle, MQTTClient_connectOptions* options, const char* serverURI, int MQTTVersion,$/;"	f	file:
MQTTClient_connectionLost	src/MQTTClient.h	/^typedef void MQTTClient_connectionLost(void* context, char* cause);$/;"	t
MQTTClient_create	src/MQTTClient.c	/^int MQTTClient_create(MQTTClient* handle, const char* serverURI, const char* clientId,$/;"	f
MQTTClient_createOptions	src/MQTTClient.h	/^} MQTTClient_createOptions;$/;"	t	typeref:struct:__anon65
MQTTClient_createOptions_initializer	src/MQTTClient.h	549;"	d
MQTTClient_createWithOptions	src/MQTTClient.c	/^int MQTTClient_createWithOptions(MQTTClient* handle, const char* serverURI, const char* clientId,$/;"	f
MQTTClient_cycle	src/MQTTClient.c	/^static MQTTPacket* MQTTClient_cycle(int* sock, ELAPSED_TIME_TYPE timeout, int* rc)$/;"	f	file:
MQTTClient_deliverMessage	src/MQTTClient.c	/^static int MQTTClient_deliverMessage(int rc, MQTTClients* m, char** topicName, int* topicLen, MQTTClient_message** message)$/;"	f	file:
MQTTClient_deliveryComplete	src/MQTTClient.h	/^typedef void MQTTClient_deliveryComplete(void* context, MQTTClient_deliveryToken dt);$/;"	t
MQTTClient_deliveryToken	src/MQTTClient.h	/^typedef int MQTTClient_deliveryToken;$/;"	t
MQTTClient_destroy	src/MQTTClient.c	/^void MQTTClient_destroy(MQTTClient* handle)$/;"	f
MQTTClient_disconnect	src/MQTTClient.c	/^int MQTTClient_disconnect(MQTTClient handle, int timeout)$/;"	f
MQTTClient_disconnect1	src/MQTTClient.c	/^static int MQTTClient_disconnect1(MQTTClient handle, int timeout, int call_connection_lost, int stop,$/;"	f	file:
MQTTClient_disconnect5	src/MQTTClient.c	/^int MQTTClient_disconnect5(MQTTClient handle, int timeout, enum MQTTReasonCodes reason, MQTTProperties* props)$/;"	f
MQTTClient_disconnect_internal	src/MQTTClient.c	/^static int MQTTClient_disconnect_internal(MQTTClient handle, int timeout)$/;"	f	file:
MQTTClient_disconnected	src/MQTTClient.h	/^typedef void MQTTClient_disconnected(void* context, MQTTProperties* properties,$/;"	t
MQTTClient_emptyMessageQueue	src/MQTTClient.c	/^static void MQTTClient_emptyMessageQueue(Clients* client)$/;"	f	file:
MQTTClient_free	src/MQTTClient.c	/^void MQTTClient_free(void* memory)$/;"	f
MQTTClient_freeMessage	src/MQTTClient.c	/^void MQTTClient_freeMessage(MQTTClient_message** message)$/;"	f
MQTTClient_getPendingDeliveryTokens	src/MQTTClient.c	/^int MQTTClient_getPendingDeliveryTokens(MQTTClient handle, MQTTClient_deliveryToken **tokens)$/;"	f
MQTTClient_getVersionInfo	src/MQTTClient.c	/^MQTTClient_nameValue* MQTTClient_getVersionInfo(void)$/;"	f
MQTTClient_global_init	src/MQTTClient.c	/^void MQTTClient_global_init(MQTTClient_init_options* inits)$/;"	f
MQTTClient_init	src/MQTTClient.c	/^int MQTTClient_init(void)$/;"	f
MQTTClient_init_options	src/MQTTClient.h	/^} MQTTClient_init_options;$/;"	t	typeref:struct:__anon63
MQTTClient_init_options_initializer	src/MQTTClient.h	234;"	d
MQTTClient_isConnected	src/MQTTClient.c	/^int MQTTClient_isConnected(MQTTClient handle)$/;"	f
MQTTClient_message	src/MQTTClient.h	/^} MQTTClient_message;$/;"	t	typeref:struct:__anon64
MQTTClient_messageArrived	src/MQTTClient.h	/^typedef int MQTTClient_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* message);$/;"	t
MQTTClient_message_initializer	src/MQTTClient.h	327;"	d
MQTTClient_nameValue	src/MQTTClient.h	/^} MQTTClient_nameValue;$/;"	t	typeref:struct:__anon69
MQTTClient_packet_names	src/MQTTPacket.c	/^const char** MQTTClient_packet_names = packet_names;$/;"	v
MQTTClient_persistence	src/MQTTClientPersistence.h	/^} MQTTClient_persistence;$/;"	t	typeref:struct:__anon56
MQTTClient_publish	src/MQTTClient.c	/^int MQTTClient_publish(MQTTClient handle, const char* topicName, int payloadlen, const void* payload,$/;"	f
MQTTClient_publish5	src/MQTTClient.c	/^MQTTResponse MQTTClient_publish5(MQTTClient handle, const char* topicName, int payloadlen, const void* payload,$/;"	f
MQTTClient_publishMessage	src/MQTTClient.c	/^int MQTTClient_publishMessage(MQTTClient handle, const char* topicName, MQTTClient_message* message,$/;"	f
MQTTClient_publishMessage5	src/MQTTClient.c	/^MQTTResponse MQTTClient_publishMessage5(MQTTClient handle, const char* topicName, MQTTClient_message* message,$/;"	f
MQTTClient_published	src/MQTTClient.h	/^typedef void MQTTClient_published(void* context, int dt, int packet_type, MQTTProperties* properties,$/;"	t
MQTTClient_receive	src/MQTTClient.c	/^int MQTTClient_receive(MQTTClient handle, char** topicName, int* topicLen, MQTTClient_message** message,$/;"	f
MQTTClient_retry	src/MQTTClient.c	/^static void MQTTClient_retry(void)$/;"	f	file:
MQTTClient_run	src/MQTTClient.c	/^static thread_return_type WINAPI MQTTClient_run(void* n)$/;"	f	file:
MQTTClient_setCallbacks	src/MQTTClient.c	/^int MQTTClient_setCallbacks(MQTTClient handle, void* context, MQTTClient_connectionLost* cl,$/;"	f
MQTTClient_setDisconnected	src/MQTTClient.c	/^int MQTTClient_setDisconnected(MQTTClient handle, void* context, MQTTClient_disconnected* disconnected)$/;"	f
MQTTClient_setPublished	src/MQTTClient.c	/^int MQTTClient_setPublished(MQTTClient handle, void* context, MQTTClient_published* published)$/;"	f
MQTTClient_setTraceCallback	src/MQTTClient.c	/^void MQTTClient_setTraceCallback(MQTTClient_traceCallback* callback)$/;"	f
MQTTClient_setTraceLevel	src/MQTTClient.c	/^void MQTTClient_setTraceLevel(enum MQTTCLIENT_TRACE_LEVELS level)$/;"	f
MQTTClient_stop	src/MQTTClient.c	/^static int MQTTClient_stop(void)$/;"	f	file:
MQTTClient_strerror	src/MQTTClient.c	/^const char* MQTTClient_strerror(int code)$/;"	f
MQTTClient_subscribe	src/MQTTClient.c	/^int MQTTClient_subscribe(MQTTClient handle, const char* topic, int qos)$/;"	f
MQTTClient_subscribe5	src/MQTTClient.c	/^MQTTResponse MQTTClient_subscribe5(MQTTClient handle, const char* topic, int qos,$/;"	f
MQTTClient_subscribeMany	src/MQTTClient.c	/^int MQTTClient_subscribeMany(MQTTClient handle, int count, char* const* topic, int* qos)$/;"	f
MQTTClient_subscribeMany5	src/MQTTClient.c	/^MQTTResponse MQTTClient_subscribeMany5(MQTTClient handle, int count, char* const* topic,$/;"	f
MQTTClient_terminate	src/MQTTClient.c	/^static void MQTTClient_terminate(void)$/;"	f	file:
MQTTClient_token	src/MQTTClient.h	/^typedef int MQTTClient_token;$/;"	t
MQTTClient_traceCallback	src/MQTTClient.h	/^typedef void MQTTClient_traceCallback(enum MQTTCLIENT_TRACE_LEVELS level, char* message);$/;"	t
MQTTClient_unsubscribe	src/MQTTClient.c	/^int MQTTClient_unsubscribe(MQTTClient handle, const char* topic)$/;"	f
MQTTClient_unsubscribe5	src/MQTTClient.c	/^MQTTResponse MQTTClient_unsubscribe5(MQTTClient handle, const char* topic, MQTTProperties* props)$/;"	f
MQTTClient_unsubscribeMany	src/MQTTClient.c	/^int MQTTClient_unsubscribeMany(MQTTClient handle, int count, char* const* topic)$/;"	f
MQTTClient_unsubscribeMany5	src/MQTTClient.c	/^MQTTResponse MQTTClient_unsubscribeMany5(MQTTClient handle, int count, char* const* topic, MQTTProperties* props)$/;"	f
MQTTClient_waitForCompletion	src/MQTTClient.c	/^int MQTTClient_waitForCompletion(MQTTClient handle, MQTTClient_deliveryToken mdt, unsigned long timeout)$/;"	f
MQTTClient_waitfor	src/MQTTClient.c	/^static MQTTPacket* MQTTClient_waitfor(MQTTClient handle, int packet_type, int* rc, ELAPSED_TIME_TYPE timeout)$/;"	f	file:
MQTTClient_willOptions	src/MQTTClient.h	/^} MQTTClient_willOptions;$/;"	t	typeref:struct:__anon66
MQTTClient_willOptions_initializer	src/MQTTClient.h	639;"	d
MQTTClient_writeComplete	src/MQTTClient.c	/^static void MQTTClient_writeComplete(int socket, int rc)$/;"	f	file:
MQTTClient_yield	src/MQTTClient.c	/^void MQTTClient_yield(void)$/;"	f
MQTTClients	src/MQTTClient.c	/^} MQTTClients;$/;"	t	typeref:struct:__anon28	file:
MQTTClients	test/sync_client_test.c	/^} MQTTClients;$/;"	t	typeref:struct:__anon104	file:
MQTTClients	test/test3.c	/^} MQTTClients;$/;"	t	typeref:struct:__anon129	file:
MQTTException	test/MQTTV311.py	/^class MQTTException(Exception):$/;"	c
MQTTException	test/MQTTV3112.py	/^class MQTTException(Exception):$/;"	c
MQTTException	test/MQTTV5.py	/^class MQTTException(Exception):$/;"	c
MQTTLIB_A	Makefile	/^MQTTLIB_A = paho-mqtt3a$/;"	m
MQTTLIB_AS	Makefile	/^MQTTLIB_AS = paho-mqtt3as$/;"	m
MQTTLIB_AS_NAME	Makefile	/^MQTTLIB_AS_NAME = lib${MQTTLIB_AS}.so.${VERSION}$/;"	m
MQTTLIB_AS_TARGET	Makefile	/^MQTTLIB_AS_TARGET = ${blddir}\/${MQTTLIB_AS_NAME}$/;"	m
MQTTLIB_A_NAME	Makefile	/^MQTTLIB_A_NAME = lib${MQTTLIB_A}.so.${VERSION}$/;"	m
MQTTLIB_A_TARGET	Makefile	/^MQTTLIB_A_TARGET = ${blddir}\/${MQTTLIB_A_NAME}$/;"	m
MQTTLIB_C	Makefile	/^MQTTLIB_C = paho-mqtt3c$/;"	m
MQTTLIB_CS	Makefile	/^MQTTLIB_CS = paho-mqtt3cs$/;"	m
MQTTLIB_CS_NAME	Makefile	/^MQTTLIB_CS_NAME = lib${MQTTLIB_CS}.so.${VERSION}$/;"	m
MQTTLIB_CS_TARGET	Makefile	/^MQTTLIB_CS_TARGET = ${blddir}\/${MQTTLIB_CS_NAME}$/;"	m
MQTTLIB_C_NAME	Makefile	/^MQTTLIB_C_NAME = lib${MQTTLIB_C}.so.${VERSION}$/;"	m
MQTTLIB_C_TARGET	Makefile	/^MQTTLIB_C_TARGET = ${blddir}\/${MQTTLIB_C_NAME}$/;"	m
MQTTLenString	src/MQTTProperties.h	/^} MQTTLenString;$/;"	t	typeref:struct:__anon48
MQTTLenStringRead	src/MQTTPacket.c	/^int MQTTLenStringRead(MQTTLenString* lenstring, char** pptr, char* enddata)$/;"	f
MQTTPACKETOUT_H	src/MQTTPacketOut.h	21;"	d
MQTTPACKET_BAD	src/MQTTPacket.h	/^	MQTTPACKET_BAD = -4,$/;"	e	enum:errors
MQTTPACKET_BUFFER_TOO_SHORT	src/MQTTPacket.h	/^	MQTTPACKET_BUFFER_TOO_SHORT = -2,$/;"	e	enum:errors
MQTTPACKET_H	src/MQTTPacket.h	22;"	d
MQTTPACKET_READ_COMPLETE	src/MQTTPacket.h	/^	MQTTPACKET_READ_COMPLETE$/;"	e	enum:errors
MQTTPACKET_READ_ERROR	src/MQTTPacket.h	/^	MQTTPACKET_READ_ERROR = -1,$/;"	e	enum:errors
MQTTPERSISTENCEDEFAULT_H	src/MQTTPersistenceDefault.h	18;"	d
MQTTPERSISTENCE_H	src/MQTTPersistence.h	21;"	d
MQTTPROPERTIES_H	src/MQTTProperties.h	18;"	d
MQTTPROPERTY_CODE_ASSIGNED_CLIENT_IDENTIFER	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_ASSIGNED_CLIENT_IDENTIFER = 18,\/**< The value is 18 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_AUTHENTICATION_DATA	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_AUTHENTICATION_DATA = 22,      \/**< The value is 22 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_AUTHENTICATION_METHOD	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_AUTHENTICATION_METHOD = 21,    \/**< The value is 21 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_CONTENT_TYPE	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_CONTENT_TYPE = 3,              \/**< The value is 3 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_CORRELATION_DATA	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_CORRELATION_DATA = 9,          \/**< The value is 9 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_MAXIMUM_PACKET_SIZE	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_MAXIMUM_PACKET_SIZE = 39,      \/**< The value is 39 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_MAXIMUM_QOS	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_MAXIMUM_QOS = 36,              \/**< The value is 36 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_MESSAGE_EXPIRY_INTERVAL	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_MESSAGE_EXPIRY_INTERVAL = 2,   \/**< The value is 2 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_PAYLOAD_FORMAT_INDICATOR	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_PAYLOAD_FORMAT_INDICATOR = 1,  \/**< The value is 1 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_REASON_STRING	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_REASON_STRING = 31,            \/**< The value is 31 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_RECEIVE_MAXIMUM	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_RECEIVE_MAXIMUM = 33,          \/**< The value is 33*\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_REQUEST_PROBLEM_INFORMATION	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_REQUEST_PROBLEM_INFORMATION = 23,\/**< The value is 23 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_REQUEST_RESPONSE_INFORMATION	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_REQUEST_RESPONSE_INFORMATION = 25,\/**< The value is 25 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_RESPONSE_INFORMATION	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_RESPONSE_INFORMATION = 26,     \/**< The value is 26 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_RESPONSE_TOPIC	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_RESPONSE_TOPIC = 8,            \/**< The value is 8 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_RETAIN_AVAILABLE	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_RETAIN_AVAILABLE = 37,         \/**< The value is 37 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_SERVER_KEEP_ALIVE	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_SERVER_KEEP_ALIVE = 19,        \/**< The value is 19 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_SERVER_REFERENCE	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_SERVER_REFERENCE = 28,         \/**< The value is 28 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_SESSION_EXPIRY_INTERVAL	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_SESSION_EXPIRY_INTERVAL = 17,  \/**< The value is 17 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_SHARED_SUBSCRIPTION_AVAILABLE	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_SHARED_SUBSCRIPTION_AVAILABLE = 42\/**< The value is 241 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_SUBSCRIPTION_IDENTIFIER	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_SUBSCRIPTION_IDENTIFIER = 11,  \/**< The value is 11 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_SUBSCRIPTION_IDENTIFIERS_AVAILABLE	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_SUBSCRIPTION_IDENTIFIERS_AVAILABLE = 41,\/**< The value is 41 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_TOPIC_ALIAS	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_TOPIC_ALIAS = 35,              \/**< The value is 35 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_TOPIC_ALIAS_MAXIMUM	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_TOPIC_ALIAS_MAXIMUM = 34,      \/**< The value is 34 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_USER_PROPERTY	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_USER_PROPERTY = 38,            \/**< The value is 38 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_WILDCARD_SUBSCRIPTION_AVAILABLE	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_WILDCARD_SUBSCRIPTION_AVAILABLE = 40,\/**< The value is 40 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_CODE_WILL_DELAY_INTERVAL	src/MQTTProperties.h	/^  MQTTPROPERTY_CODE_WILL_DELAY_INTERVAL = 24,      \/**< The value is 24 *\/$/;"	e	enum:MQTTPropertyCodes
MQTTPROPERTY_TYPE_BINARY_DATA	src/MQTTProperties.h	/^  MQTTPROPERTY_TYPE_BINARY_DATA,$/;"	e	enum:MQTTPropertyTypes
MQTTPROPERTY_TYPE_BYTE	src/MQTTProperties.h	/^  MQTTPROPERTY_TYPE_BYTE,$/;"	e	enum:MQTTPropertyTypes
MQTTPROPERTY_TYPE_FOUR_BYTE_INTEGER	src/MQTTProperties.h	/^  MQTTPROPERTY_TYPE_FOUR_BYTE_INTEGER,$/;"	e	enum:MQTTPropertyTypes
MQTTPROPERTY_TYPE_TWO_BYTE_INTEGER	src/MQTTProperties.h	/^  MQTTPROPERTY_TYPE_TWO_BYTE_INTEGER,$/;"	e	enum:MQTTPropertyTypes
MQTTPROPERTY_TYPE_UTF_8_ENCODED_STRING	src/MQTTProperties.h	/^  MQTTPROPERTY_TYPE_UTF_8_ENCODED_STRING,$/;"	e	enum:MQTTPropertyTypes
MQTTPROPERTY_TYPE_UTF_8_STRING_PAIR	src/MQTTProperties.h	/^  MQTTPROPERTY_TYPE_UTF_8_STRING_PAIR$/;"	e	enum:MQTTPropertyTypes
MQTTPROPERTY_TYPE_VARIABLE_BYTE_INTEGER	src/MQTTProperties.h	/^  MQTTPROPERTY_TYPE_VARIABLE_BYTE_INTEGER,$/;"	e	enum:MQTTPropertyTypes
MQTTPROTOCOLCLIENT_H	src/MQTTProtocolClient.h	22;"	d
MQTTPROTOCOLOUT_H	src/MQTTProtocolOut.h	22;"	d
MQTTPROTOCOL_H	src/MQTTProtocol.h	19;"	d
MQTTPacket	src/MQTTPacket.h	/^} MQTTPacket;$/;"	t	typeref:struct:__anon43
MQTTPacket_Factory	src/MQTTPacket.c	/^void* MQTTPacket_Factory(int MQTTVersion, networkHandles* net, int* error)$/;"	f
MQTTPacket_VBIdecode	src/MQTTPacket.c	/^int MQTTPacket_VBIdecode(int (*getcharfn)(char*, int), unsigned int* value)$/;"	f
MQTTPacket_VBIlen	src/MQTTPacket.c	/^int MQTTPacket_VBIlen(int rem_len)$/;"	f
MQTTPacket_ack	src/MQTTPacket.c	/^void* MQTTPacket_ack(int MQTTVersion, unsigned char aHeader, char* data, size_t datalen)$/;"	f
MQTTPacket_connack	src/MQTTPacketOut.c	/^void* MQTTPacket_connack(int MQTTVersion, unsigned char aHeader, char* data, size_t datalen)$/;"	f
MQTTPacket_decode	src/MQTTPacket.c	/^int MQTTPacket_decode(networkHandles* net, size_t* value)$/;"	f
MQTTPacket_decodeBuf	src/MQTTPacket.c	/^int MQTTPacket_decodeBuf(char* buf, unsigned int* value)$/;"	f
MQTTPacket_encode	src/MQTTPacket.c	/^int MQTTPacket_encode(char* buf, size_t length)$/;"	f
MQTTPacket_freeAck	src/MQTTPacket.c	/^void MQTTPacket_freeAck(Ack* pack)$/;"	f
MQTTPacket_freeConnack	src/MQTTPacketOut.c	/^void MQTTPacket_freeConnack(Connack* pack)$/;"	f
MQTTPacket_freePublish	src/MQTTPacket.c	/^void MQTTPacket_freePublish(Publish* pack)$/;"	f
MQTTPacket_freeSuback	src/MQTTPacket.c	/^void MQTTPacket_freeSuback(Suback* pack)$/;"	f
MQTTPacket_freeUnsuback	src/MQTTPacket.c	/^void MQTTPacket_freeUnsuback(Unsuback* pack)$/;"	f
MQTTPacket_free_packet	src/MQTTPacket.c	/^void MQTTPacket_free_packet(MQTTPacket* pack)$/;"	f
MQTTPacket_header_only	src/MQTTPacket.c	/^void* MQTTPacket_header_only(int MQTTVersion, unsigned char aHeader, char* data, size_t datalen)$/;"	f
MQTTPacket_name	src/MQTTPacket.c	/^const char* MQTTPacket_name(int ptype)$/;"	f
MQTTPacket_publish	src/MQTTPacket.c	/^void* MQTTPacket_publish(int MQTTVersion, unsigned char aHeader, char* data, size_t datalen)$/;"	f
MQTTPacket_send	src/MQTTPacket.c	/^int MQTTPacket_send(networkHandles* net, Header header, char* buffer, size_t buflen, int freeData,$/;"	f
MQTTPacket_send_ack	src/MQTTPacket.c	/^static int MQTTPacket_send_ack(int MQTTVersion, int type, int msgid, int dup, networkHandles *net)$/;"	f	file:
MQTTPacket_send_connect	src/MQTTPacketOut.c	/^int MQTTPacket_send_connect(Clients* client, int MQTTVersion,$/;"	f
MQTTPacket_send_disconnect	src/MQTTPacket.c	/^int MQTTPacket_send_disconnect(Clients* client, enum MQTTReasonCodes reason, MQTTProperties* props)$/;"	f
MQTTPacket_send_pingreq	src/MQTTPacketOut.c	/^int MQTTPacket_send_pingreq(networkHandles* net, const char* clientID)$/;"	f
MQTTPacket_send_puback	src/MQTTPacket.c	/^int MQTTPacket_send_puback(int MQTTVersion, int msgid, networkHandles* net, const char* clientID)$/;"	f
MQTTPacket_send_pubcomp	src/MQTTPacket.c	/^int MQTTPacket_send_pubcomp(int MQTTVersion, int msgid, networkHandles* net, const char* clientID)$/;"	f
MQTTPacket_send_publish	src/MQTTPacket.c	/^int MQTTPacket_send_publish(Publish* pack, int dup, int qos, int retained, networkHandles* net, const char* clientID)$/;"	f
MQTTPacket_send_pubrec	src/MQTTPacket.c	/^int MQTTPacket_send_pubrec(int MQTTVersion, int msgid, networkHandles* net, const char* clientID)$/;"	f
MQTTPacket_send_pubrel	src/MQTTPacket.c	/^int MQTTPacket_send_pubrel(int MQTTVersion, int msgid, int dup, networkHandles* net, const char* clientID)$/;"	f
MQTTPacket_send_subscribe	src/MQTTPacketOut.c	/^int MQTTPacket_send_subscribe(List* topics, List* qoss, MQTTSubscribe_options* opts, MQTTProperties* props,$/;"	f
MQTTPacket_send_unsubscribe	src/MQTTPacketOut.c	/^int MQTTPacket_send_unsubscribe(List* topics, MQTTProperties* props, int msgid, int dup, Clients* client)$/;"	f
MQTTPacket_sends	src/MQTTPacket.c	/^int MQTTPacket_sends(networkHandles* net, Header header, PacketBuffers* bufs, int MQTTVersion)$/;"	f
MQTTPacket_suback	src/MQTTPacketOut.c	/^void* MQTTPacket_suback(int MQTTVersion, unsigned char aHeader, char* data, size_t datalen)$/;"	f
MQTTPacket_unsuback	src/MQTTPacketOut.c	/^void* MQTTPacket_unsuback(int MQTTVersion, unsigned char aHeader, char* data, size_t datalen)$/;"	f
MQTTPersistence_clear	src/MQTTPersistence.c	/^int MQTTPersistence_clear(Clients *c)$/;"	f
MQTTPersistence_close	src/MQTTPersistence.c	/^int MQTTPersistence_close(Clients *c)$/;"	f
MQTTPersistence_create	src/MQTTPersistence.c	/^int MQTTPersistence_create(MQTTClient_persistence** persistence, int type, void* pcontext)$/;"	f
MQTTPersistence_initialize	src/MQTTPersistence.c	/^int MQTTPersistence_initialize(Clients *c, const char *serverURI)$/;"	f
MQTTPersistence_insertInOrder	src/MQTTPersistence.c	/^void MQTTPersistence_insertInOrder(List* list, void* content, size_t size)$/;"	f
MQTTPersistence_insertInSeqOrder	src/MQTTPersistence.c	/^static void MQTTPersistence_insertInSeqOrder(List* list, MQTTPersistence_qEntry* qEntry, size_t size)$/;"	f	file:
MQTTPersistence_message	src/MQTTPersistence.h	/^} MQTTPersistence_message;$/;"	t	typeref:struct:__anon57
MQTTPersistence_persistQueueEntry	src/MQTTPersistence.c	/^int MQTTPersistence_persistQueueEntry(Clients* aclient, MQTTPersistence_qEntry* qe)$/;"	f
MQTTPersistence_put	src/MQTTPersistence.c	/^int MQTTPersistence_put(int socket, char* buf0, size_t buf0len, int count,$/;"	f
MQTTPersistence_qEntry	src/MQTTPersistence.h	/^} MQTTPersistence_qEntry;$/;"	t	typeref:struct:__anon58
MQTTPersistence_remove	src/MQTTPersistence.c	/^int MQTTPersistence_remove(Clients* c, char *type, int qos, int msgId)$/;"	f
MQTTPersistence_restore	src/MQTTPersistence.c	/^int MQTTPersistence_restore(Clients *c)$/;"	f
MQTTPersistence_restoreMessageQueue	src/MQTTPersistence.c	/^int MQTTPersistence_restoreMessageQueue(Clients* c)$/;"	f
MQTTPersistence_restorePacket	src/MQTTPersistence.c	/^void* MQTTPersistence_restorePacket(int MQTTVersion, char* buffer, size_t buflen)$/;"	f
MQTTPersistence_restoreQueueEntry	src/MQTTPersistence.c	/^static MQTTPersistence_qEntry* MQTTPersistence_restoreQueueEntry(char* buffer, size_t buflen, int MQTTVersion)$/;"	f	file:
MQTTPersistence_unpersistQueueEntry	src/MQTTPersistence.c	/^int MQTTPersistence_unpersistQueueEntry(Clients* client, MQTTPersistence_qEntry* qe)$/;"	f
MQTTPersistence_wrapMsgID	src/MQTTPersistence.c	/^void MQTTPersistence_wrapMsgID(Clients *client)$/;"	f
MQTTProperties	src/MQTTProperties.h	/^typedef struct MQTTProperties$/;"	s
MQTTProperties	src/MQTTProperties.h	/^} MQTTProperties;$/;"	t	typeref:struct:MQTTProperties
MQTTProperties_add	src/MQTTProperties.c	/^int MQTTProperties_add(MQTTProperties* props, const MQTTProperty* prop)$/;"	f
MQTTProperties_copy	src/MQTTProperties.c	/^MQTTProperties MQTTProperties_copy(const MQTTProperties* props)$/;"	f
MQTTProperties_free	src/MQTTProperties.c	/^void MQTTProperties_free(MQTTProperties* props)$/;"	f
MQTTProperties_getNumericValue	src/MQTTProperties.c	/^int MQTTProperties_getNumericValue(MQTTProperties *props, enum MQTTPropertyCodes propid)$/;"	f
MQTTProperties_getNumericValueAt	src/MQTTProperties.c	/^int MQTTProperties_getNumericValueAt(MQTTProperties *props, enum MQTTPropertyCodes propid, int index)$/;"	f
MQTTProperties_getProperty	src/MQTTProperties.c	/^MQTTProperty* MQTTProperties_getProperty(MQTTProperties *props, enum MQTTPropertyCodes propid)$/;"	f
MQTTProperties_getPropertyAt	src/MQTTProperties.c	/^MQTTProperty* MQTTProperties_getPropertyAt(MQTTProperties *props, enum MQTTPropertyCodes propid, int index)$/;"	f
MQTTProperties_hasProperty	src/MQTTProperties.c	/^int MQTTProperties_hasProperty(MQTTProperties *props, enum MQTTPropertyCodes propid)$/;"	f
MQTTProperties_initializer	src/MQTTProperties.h	120;"	d
MQTTProperties_len	src/MQTTProperties.c	/^int MQTTProperties_len(MQTTProperties* props)$/;"	f
MQTTProperties_propertyCount	src/MQTTProperties.c	/^int MQTTProperties_propertyCount(MQTTProperties *props, enum MQTTPropertyCodes propid)$/;"	f
MQTTProperties_read	src/MQTTProperties.c	/^int MQTTProperties_read(MQTTProperties* properties, char** pptr, char* enddata)$/;"	f
MQTTProperties_write	src/MQTTProperties.c	/^int MQTTProperties_write(char** pptr, const MQTTProperties* properties)$/;"	f
MQTTProperty	src/MQTTProperties.h	/^} MQTTProperty;$/;"	t	typeref:struct:__anon49
MQTTPropertyCodes	src/MQTTProperties.h	/^enum MQTTPropertyCodes {$/;"	g
MQTTPropertyName	src/MQTTProperties.c	/^const char* MQTTPropertyName(enum MQTTPropertyCodes value)$/;"	f
MQTTPropertyTypes	src/MQTTProperties.h	/^enum MQTTPropertyTypes {$/;"	g
MQTTProperty_getType	src/MQTTProperties.c	/^int MQTTProperty_getType(enum MQTTPropertyCodes value)$/;"	f
MQTTProperty_read	src/MQTTProperties.c	/^int MQTTProperty_read(MQTTProperty* prop, char** pptr, char* enddata)$/;"	f
MQTTProperty_write	src/MQTTProperties.c	/^int MQTTProperty_write(char** pptr, MQTTProperty* prop)$/;"	f
MQTTProtocol	src/MQTTProtocol.h	/^} MQTTProtocol;$/;"	t	typeref:struct:__anon98
MQTTProtocol_addressPort	src/MQTTProtocolOut.c	/^size_t MQTTProtocol_addressPort(const char* uri, int* port, const char **topic, int default_port)$/;"	f
MQTTProtocol_assignMsgId	src/MQTTProtocolClient.c	/^int MQTTProtocol_assignMsgId(Clients* client)$/;"	f
MQTTProtocol_checkPendingWrites	src/MQTTAsync.c	/^static void MQTTProtocol_checkPendingWrites(void)$/;"	f	file:
MQTTProtocol_checkPendingWrites	src/MQTTClient.c	/^static void MQTTProtocol_checkPendingWrites(void)$/;"	f	file:
MQTTProtocol_closeSession	src/MQTTAsync.c	/^void MQTTProtocol_closeSession(Clients* c, int sendwill)$/;"	f
MQTTProtocol_closeSession	src/MQTTClient.c	/^void MQTTProtocol_closeSession(Clients* c, int sendwill)$/;"	f
MQTTProtocol_connect	src/MQTTProtocolOut.c	/^int MQTTProtocol_connect(const char* ip_address, Clients* aClient, int ssl, int websocket, int MQTTVersion,$/;"	f
MQTTProtocol_createMessage	src/MQTTProtocolClient.c	/^Messages* MQTTProtocol_createMessage(Publish* publish, Messages **mm, int qos, int retained, int allocatePayload)$/;"	f
MQTTProtocol_emptyMessageList	src/MQTTProtocolClient.c	/^void MQTTProtocol_emptyMessageList(List* msgList)$/;"	f
MQTTProtocol_freeClient	src/MQTTProtocolClient.c	/^void MQTTProtocol_freeClient(Clients* client)$/;"	f
MQTTProtocol_freeMessageList	src/MQTTProtocolClient.c	/^void MQTTProtocol_freeMessageList(List* msgList)$/;"	f
MQTTProtocol_handlePingresps	src/MQTTProtocolOut.c	/^int MQTTProtocol_handlePingresps(void* pack, int sock)$/;"	f
MQTTProtocol_handlePubacks	src/MQTTProtocolClient.c	/^int MQTTProtocol_handlePubacks(void* pack, int sock)$/;"	f
MQTTProtocol_handlePubcomps	src/MQTTProtocolClient.c	/^int MQTTProtocol_handlePubcomps(void* pack, int sock)$/;"	f
MQTTProtocol_handlePublishes	src/MQTTProtocolClient.c	/^int MQTTProtocol_handlePublishes(void* pack, int sock)$/;"	f
MQTTProtocol_handlePubrecs	src/MQTTProtocolClient.c	/^int MQTTProtocol_handlePubrecs(void* pack, int sock)$/;"	f
MQTTProtocol_handlePubrels	src/MQTTProtocolClient.c	/^int MQTTProtocol_handlePubrels(void* pack, int sock)$/;"	f
MQTTProtocol_handleSubacks	src/MQTTProtocolOut.c	/^int MQTTProtocol_handleSubacks(void* pack, int sock)$/;"	f
MQTTProtocol_handleUnsubacks	src/MQTTProtocolOut.c	/^int MQTTProtocol_handleUnsubacks(void* pack, int sock)$/;"	f
MQTTProtocol_keepalive	src/MQTTProtocolClient.c	/^void MQTTProtocol_keepalive(START_TIME_TYPE now)$/;"	f
MQTTProtocol_removePublication	src/MQTTProtocolClient.c	/^void MQTTProtocol_removePublication(Publications* p)$/;"	f
MQTTProtocol_retries	src/MQTTProtocolClient.c	/^static void MQTTProtocol_retries(START_TIME_TYPE now, Clients* client, int regardless)$/;"	f	file:
MQTTProtocol_retry	src/MQTTProtocolClient.c	/^void MQTTProtocol_retry(START_TIME_TYPE now, int doRetry, int regardless)$/;"	f
MQTTProtocol_specialChars	src/MQTTProtocolOut.c	/^void MQTTProtocol_specialChars(char* p0, char* p1, b64_size_t *basic_auth_in_len)$/;"	f
MQTTProtocol_startPublish	src/MQTTProtocolClient.c	/^int MQTTProtocol_startPublish(Clients* pubclient, Publish* publish, int qos, int retained, Messages** mm)$/;"	f
MQTTProtocol_startPublishCommon	src/MQTTProtocolClient.c	/^static int MQTTProtocol_startPublishCommon(Clients* pubclient, Publish* publish, int qos, int retained)$/;"	f	file:
MQTTProtocol_storePublication	src/MQTTProtocolClient.c	/^Publications* MQTTProtocol_storePublication(Publish* publish, int* len)$/;"	f
MQTTProtocol_storeQoS0	src/MQTTProtocolClient.c	/^static void MQTTProtocol_storeQoS0(Clients* pubclient, Publish* publish)$/;"	f	file:
MQTTProtocol_subscribe	src/MQTTProtocolOut.c	/^int MQTTProtocol_subscribe(Clients* client, List* topics, List* qoss, int msgID,$/;"	f
MQTTProtocol_unsubscribe	src/MQTTProtocolOut.c	/^int MQTTProtocol_unsubscribe(Clients* client, List* topics, int msgID, MQTTProperties* props)$/;"	f
MQTTREASONCODES_H	src/MQTTReasonCodes.h	18;"	d
MQTTREASONCODE_ADMINISTRATIVE_ACTION	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_ADMINISTRATIVE_ACTION = 152,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_BAD_AUTHENTICATION_METHOD	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_BAD_AUTHENTICATION_METHOD = 140,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_BAD_USER_NAME_OR_PASSWORD	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_BAD_USER_NAME_OR_PASSWORD = 134,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_BANNED	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_BANNED = 138,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_CLIENT_IDENTIFIER_NOT_VALID	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_CLIENT_IDENTIFIER_NOT_VALID = 133,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_CONNECTION_RATE_EXCEEDED	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_CONNECTION_RATE_EXCEEDED = 159,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_CONTINUE_AUTHENTICATION	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_CONTINUE_AUTHENTICATION = 24,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_DISCONNECT_WITH_WILL_MESSAGE	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_DISCONNECT_WITH_WILL_MESSAGE = 4,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_GRANTED_QOS_0	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_GRANTED_QOS_0 = 0,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_GRANTED_QOS_1	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_GRANTED_QOS_1 = 1,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_GRANTED_QOS_2	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_GRANTED_QOS_2 = 2,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_IMPLEMENTATION_SPECIFIC_ERROR	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_IMPLEMENTATION_SPECIFIC_ERROR = 131,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_KEEP_ALIVE_TIMEOUT	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_KEEP_ALIVE_TIMEOUT = 141,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_MALFORMED_PACKET	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_MALFORMED_PACKET = 129,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_MAXIMUM_CONNECT_TIME	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_MAXIMUM_CONNECT_TIME = 160,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_MESSAGE_RATE_TOO_HIGH	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_MESSAGE_RATE_TOO_HIGH = 150,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_NORMAL_DISCONNECTION	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_NORMAL_DISCONNECTION = 0,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_NOT_AUTHORIZED	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_NOT_AUTHORIZED = 135,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_NO_MATCHING_SUBSCRIBERS	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_NO_MATCHING_SUBSCRIBERS = 16,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_NO_SUBSCRIPTION_FOUND	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_NO_SUBSCRIPTION_FOUND = 17,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_PACKET_IDENTIFIER_IN_USE	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_PACKET_IDENTIFIER_IN_USE = 145,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_PACKET_IDENTIFIER_NOT_FOUND	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_PACKET_IDENTIFIER_NOT_FOUND = 146,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_PACKET_TOO_LARGE	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_PACKET_TOO_LARGE = 149,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_PAYLOAD_FORMAT_INVALID	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_PAYLOAD_FORMAT_INVALID = 153,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_PROTOCOL_ERROR	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_PROTOCOL_ERROR = 130,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_QOS_NOT_SUPPORTED	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_QOS_NOT_SUPPORTED = 155,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_QUOTA_EXCEEDED	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_QUOTA_EXCEEDED = 151,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_RECEIVE_MAXIMUM_EXCEEDED	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_RECEIVE_MAXIMUM_EXCEEDED = 147,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_RETAIN_NOT_SUPPORTED	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_RETAIN_NOT_SUPPORTED = 154,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_RE_AUTHENTICATE	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_RE_AUTHENTICATE = 25,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_SERVER_BUSY	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_SERVER_BUSY = 137,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_SERVER_MOVED	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_SERVER_MOVED = 157,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_SERVER_SHUTTING_DOWN	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_SERVER_SHUTTING_DOWN = 139,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_SERVER_UNAVAILABLE	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_SERVER_UNAVAILABLE = 136,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_SESSION_TAKEN_OVER	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_SESSION_TAKEN_OVER = 142,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_SHARED_SUBSCRIPTIONS_NOT_SUPPORTED	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_SHARED_SUBSCRIPTIONS_NOT_SUPPORTED = 158,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_SUBSCRIPTION_IDENTIFIERS_NOT_SUPPORTED	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_SUBSCRIPTION_IDENTIFIERS_NOT_SUPPORTED = 161,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_SUCCESS	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_SUCCESS = 0,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_TOPIC_ALIAS_INVALID	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_TOPIC_ALIAS_INVALID = 148,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_TOPIC_FILTER_INVALID	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_TOPIC_FILTER_INVALID = 143,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_TOPIC_NAME_INVALID	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_TOPIC_NAME_INVALID = 144,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_UNSPECIFIED_ERROR	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_UNSPECIFIED_ERROR = 128,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_UNSUPPORTED_PROTOCOL_VERSION	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_UNSUPPORTED_PROTOCOL_VERSION = 132,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_USE_ANOTHER_SERVER	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_USE_ANOTHER_SERVER = 156,$/;"	e	enum:MQTTReasonCodes
MQTTREASONCODE_WILDCARD_SUBSCRIPTIONS_NOT_SUPPORTED	src/MQTTReasonCodes.h	/^  MQTTREASONCODE_WILDCARD_SUBSCRIPTIONS_NOT_SUPPORTED = 162$/;"	e	enum:MQTTReasonCodes
MQTTReasonCode_toString	src/MQTTReasonCodes.c	/^const char* MQTTReasonCode_toString(enum MQTTReasonCodes value)$/;"	f
MQTTReasonCodes	src/MQTTReasonCodes.h	/^enum MQTTReasonCodes {$/;"	g
MQTTResponse	src/MQTTClient.h	/^typedef struct MQTTResponse$/;"	s
MQTTResponse	src/MQTTClient.h	/^} MQTTResponse;$/;"	t	typeref:struct:MQTTResponse
MQTTResponse_free	src/MQTTClient.c	/^void MQTTResponse_free(MQTTResponse response)$/;"	f
MQTTResponse_initializer	src/MQTTClient.h	975;"	d
MQTTStrdup	src/MQTTProtocolClient.c	/^char* MQTTStrdup(const char* src)$/;"	f
MQTTStrncpy	src/MQTTProtocolClient.c	/^char* MQTTStrncpy(char *dest, const char *src, size_t dest_size)$/;"	f
MQTTSubscribe_options	src/MQTTSubscribeOpts.h	/^typedef struct MQTTSubscribe_options$/;"	s
MQTTSubscribe_options	src/MQTTSubscribeOpts.h	/^} MQTTSubscribe_options;$/;"	t	typeref:struct:MQTTSubscribe_options
MQTTSubscribe_options_initializer	src/MQTTSubscribeOpts.h	44;"	d
MQTTTIME_H	src/MQTTTime.h	18;"	d
MQTTTime_difftime	src/MQTTTime.c	/^DIFF_TIME_TYPE MQTTTime_difftime(START_TIME_TYPE new, START_TIME_TYPE old)$/;"	f
MQTTTime_elapsed	src/MQTTTime.c	/^ELAPSED_TIME_TYPE MQTTTime_elapsed(START_TIME_TYPE milliseconds)$/;"	f
MQTTTime_now	src/MQTTTime.c	/^START_TIME_TYPE MQTTTime_now(void)$/;"	f
MQTTTime_sleep	src/MQTTTime.c	/^void MQTTTime_sleep(ELAPSED_TIME_TYPE milliseconds)$/;"	f
MQTTTime_start_clock	src/MQTTTime.c	/^START_TIME_TYPE MQTTTime_start_clock(void)$/;"	f
MQTTVERSION_3_1	src/MQTTAsync.h	199;"	d
MQTTVERSION_3_1	src/MQTTClient.h	207;"	d
MQTTVERSION_3_1_1	src/MQTTAsync.h	203;"	d
MQTTVERSION_3_1_1	src/MQTTClient.h	211;"	d
MQTTVERSION_5	src/MQTTAsync.h	207;"	d
MQTTVERSION_5	src/MQTTClient.h	215;"	d
MQTTVERSION_DEFAULT	src/MQTTAsync.h	195;"	d
MQTTVERSION_DEFAULT	src/MQTTClient.h	203;"	d
MQTTVERSION_NAME	Makefile	/^MQTTVERSION_NAME = paho_c_version$/;"	m
MQTTVERSION_TARGET	Makefile	/^MQTTVERSION_TARGET = ${blddir}\/${MQTTVERSION_NAME}$/;"	m
MQTTVersion	src/Clients.h	/^	int MQTTVersion;                \/**< the version of MQTT being used, 3, 4 or 5 *\/$/;"	m	struct:__anon19
MQTTVersion	src/Clients.h	/^	int MQTTVersion;$/;"	m	struct:__anon16
MQTTVersion	src/MQTTAsync.c	/^			int MQTTVersion; \/**< current MQTT version being used to connect *\/$/;"	m	struct:__anon4::__anon5::__anon10	file:
MQTTVersion	src/MQTTAsync.h	/^			int MQTTVersion;  \/**< the version of MQTT being used *\/$/;"	m	struct:__anon82::__anon83::__anon86
MQTTVersion	src/MQTTAsync.h	/^			int MQTTVersion; \/**< the version of MQTT being used *\/$/;"	m	struct:__anon78::__anon79::__anon81
MQTTVersion	src/MQTTAsync.h	/^	int MQTTVersion;$/;"	m	struct:__anon88
MQTTVersion	src/MQTTAsync.h	/^	int MQTTVersion;$/;"	m	struct:__anon93
MQTTVersion	src/MQTTClient.h	/^		int MQTTVersion;     \/**< the MQTT version used to connect with *\/$/;"	m	struct:__anon70::__anon71
MQTTVersion	src/MQTTClient.h	/^	int MQTTVersion;$/;"	m	struct:__anon65
MQTTVersion	src/MQTTClient.h	/^	int MQTTVersion;$/;"	m	struct:__anon70
MQTTVersion	src/MQTTPacket.h	/^	int MQTTVersion;  \/**< the version of MQTT *\/$/;"	m	struct:__anon44
MQTTVersion	src/MQTTPacket.h	/^	int MQTTVersion;  \/**< the version of MQTT *\/$/;"	m	struct:__anon45
MQTTVersion	src/MQTTPacket.h	/^	int MQTTVersion;  \/**< the version of MQTT *\/$/;"	m	struct:__anon46
MQTTVersion	src/MQTTPacket.h	/^	int MQTTVersion;  \/**< the version of MQTT *\/$/;"	m	struct:__anon47
MQTTVersion	src/MQTTPacket.h	/^	unsigned int MQTTVersion;  \/**< the version of MQTT *\/$/;"	m	struct:__anon39
MQTTVersion	src/samples/pubsub_opts.h	/^	int MQTTVersion;$/;"	m	struct:pubsub_opts
MQTTVersion	test/sync_client_test.c	/^	int MQTTVersion;$/;"	m	struct:Options	file:
MQTTVersion	test/test1.c	/^	int MQTTVersion;$/;"	m	struct:Options	file:
MQTTVersion	test/test10.c	/^	int MQTTVersion;$/;"	m	struct:Options	file:
MQTTVersion	test/test11.c	/^	int MQTTVersion;$/;"	m	struct:Options	file:
MQTTVersion	test/test15.c	/^	int MQTTVersion;$/;"	m	struct:Options	file:
MQTTVersion	test/test2.c	/^	int MQTTVersion;$/;"	m	struct:Options	file:
MQTTVersion	test/test4.c	/^	int MQTTVersion;$/;"	m	struct:Options	file:
MQTTVersion	test/test45.c	/^	int MQTTVersion;$/;"	m	struct:Options	file:
MQTTVersion	test/test_connect_destroy.c	/^	int MQTTVersion;$/;"	m	struct:Options	file:
MQTTVersion	test/test_sync_session_present.c	/^    int MQTTVersion;$/;"	m	struct:Options	file:
MQTT_BAD_SUBSCRIBE	src/MQTTAsync.h	211;"	d
MQTT_BAD_SUBSCRIBE	src/MQTTClient.h	219;"	d
MQTT_DEFAULT_PORT	src/MQTTProtocolOut.h	32;"	d
MQTT_INVALID_PROPERTY_ID	src/MQTTProperties.h	22;"	d
MQTT_SSL_VERSION_DEFAULT	src/MQTTAsync.h	950;"	d
MQTT_SSL_VERSION_DEFAULT	src/MQTTClient.h	641;"	d
MQTT_SSL_VERSION_TLS_1_0	src/MQTTAsync.h	951;"	d
MQTT_SSL_VERSION_TLS_1_0	src/MQTTClient.h	642;"	d
MQTT_SSL_VERSION_TLS_1_1	src/MQTTAsync.h	952;"	d
MQTT_SSL_VERSION_TLS_1_1	src/MQTTClient.h	643;"	d
MQTT_SSL_VERSION_TLS_1_2	src/MQTTAsync.h	953;"	d
MQTT_SSL_VERSION_TLS_1_2	src/MQTTClient.h	644;"	d
MSTEM	src/MQTTPersistenceDefault.c	823;"	d	file:
MalformedPacket	test/MQTTV5.py	/^class MalformedPacket(MQTTException):$/;"	c
MessageType	test/MQTTV311.py	/^def MessageType(byte):$/;"	f
MessageType	test/MQTTV3112.py	/^def MessageType(byte):$/;"	f
Messages	src/Clients.h	/^} Messages;$/;"	t	typeref:struct:__anon16
Messages_get	src/Messages.c	/^const char* Messages_get(int index, enum LOG_LEVELS log_level)$/;"	f
MqttV3Error	test/python/mqttasync_module.c	/^static PyObject *MqttV3Error;$/;"	v	file:
MqttV3Error	test/python/mqttclient_module.c	/^static PyObject *MqttV3Error;$/;"	v	file:
MqttV3Methods	test/python/mqttasync_module.c	/^static PyMethodDef MqttV3Methods[] =$/;"	v	file:
MqttV3Methods	test/python/mqttclient_module.c	/^static PyMethodDef MqttV3Methods[] =$/;"	v	file:
MyHandler	test/mqttsas.py	/^class MyHandler(socketserver.StreamRequestHandler):$/;"	c
MyLog	test/sync_client_test.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test1.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test10.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test11.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test15.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test2.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test3.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test4.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test45.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test5.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test6.c	/^void MyLog(int log_level, char* format, ...)$/;"	f
MyLog	test/test8.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test9.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test95.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test_connect_destroy.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test_issue373.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test_mqtt4async.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test_mqtt4sync.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/test_sync_session_present.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MyLog	test/thread.c	/^void MyLog(int LOGA_level, char* format, ...)$/;"	f
MySleep	test/test45.c	/^void MySleep(long milliseconds)$/;"	f
MySleep	test/test6.c	/^void MySleep(long milliseconds)$/;"	f
MySleep	test/test9.c	/^void MySleep(long milliseconds)$/;"	f
MySleep	test/test95.c	/^void MySleep(long milliseconds)$/;"	f
MySleep	test/test_connect_destroy.c	/^void MySleep(long milliseconds)$/;"	f
MySleep	test/test_issue373.c	/^void MySleep(long milliseconds)$/;"	f
NBUFS	src/MQTTPersistenceDefault.c	825;"	d	file:
NDEL	src/MQTTPersistenceDefault.c	826;"	d	file:
NMSGS	src/MQTTPersistenceDefault.c	824;"	d	file:
NOSTACKTRACE	src/StackTrace.h	21;"	d
NOSTACKTRACE	src/Thread.c	32;"	d	file:
NOT_IN_PROGRESS	src/Clients.h	100;"	d
NO_HEAP_TRACKING	src/Heap.h	23;"	d
NV	src/Base64.c	102;"	d	file:
Names	test/MQTTV5.py	/^    "Pingreq", "Pingresp", "Disconnect", "Auth"]$/;"	v	class:Packets
Node	src/Tree.h	/^} Node;$/;"	t	typeref:struct:NodeStruct
NodeStruct	src/Tree.h	/^typedef struct NodeStruct$/;"	s
OSTYPE	Makefile	/^	OSTYPE = Linux$/;"	m
OSTYPE	Makefile	/^	OSTYPE ?= $(OS)$/;"	m
OSTYPE	Makefile	/^	OSTYPE ?= $(shell uname -s)$/;"	m
OSWRAPPER_H	src/OsWrapper.h	19;"	d
Options	test/sync_client_test.c	/^struct Options$/;"	s	file:
Options	test/test1.c	/^struct Options$/;"	s	file:
Options	test/test10.c	/^struct Options$/;"	s	file:
Options	test/test11.c	/^struct Options$/;"	s	file:
Options	test/test15.c	/^struct Options$/;"	s	file:
Options	test/test2.c	/^struct Options$/;"	s	file:
Options	test/test3.c	/^struct Options$/;"	s	file:
Options	test/test4.c	/^struct Options$/;"	s	file:
Options	test/test45.c	/^struct Options$/;"	s	file:
Options	test/test5.c	/^struct Options$/;"	s	file:
Options	test/test8.c	/^struct Options$/;"	s	file:
Options	test/test9.c	/^struct Options$/;"	s	file:
Options	test/test95.c	/^struct Options$/;"	s	file:
Options	test/test_connect_destroy.c	/^struct Options$/;"	s	file:
Options	test/test_issue373.c	/^struct Options$/;"	s	file:
Options	test/test_mqtt4async.c	/^struct Options$/;"	s	file:
Options	test/test_mqtt4sync.c	/^struct Options$/;"	s	file:
Options	test/test_sync_session_present.c	/^struct Options$/;"	s	file:
Options	test/thread.c	/^struct Options$/;"	s	file:
PAHO_CS_PUB_NAME	Makefile	/^PAHO_CS_PUB_NAME = paho_cs_pub$/;"	m
PAHO_CS_PUB_TARGET	Makefile	/^PAHO_CS_PUB_TARGET = ${blddir}\/samples\/${PAHO_CS_PUB_NAME}$/;"	m
PAHO_CS_SUB_NAME	Makefile	/^PAHO_CS_SUB_NAME = paho_cs_sub$/;"	m
PAHO_CS_SUB_TARGET	Makefile	/^PAHO_CS_SUB_TARGET = ${blddir}\/samples\/${PAHO_CS_SUB_NAME}$/;"	m
PAHO_C_PUB_NAME	Makefile	/^PAHO_C_PUB_NAME = paho_c_pub$/;"	m
PAHO_C_PUB_TARGET	Makefile	/^PAHO_C_PUB_TARGET = ${blddir}\/samples\/${PAHO_C_PUB_NAME}$/;"	m
PAHO_C_SUB_NAME	Makefile	/^PAHO_C_SUB_NAME = paho_c_sub$/;"	m
PAHO_C_SUB_TARGET	Makefile	/^PAHO_C_SUB_TARGET = ${blddir}\/samples\/${PAHO_C_SUB_NAME}$/;"	m
PAHO_MEMORY_ERROR	src/Heap.h	26;"	d
PATCH_VERSION	Makefile	/^PATCH_VERSION := $(shell cat version.patch)$/;"	m
PAYLOAD	src/samples/MQTTAsync_publish.c	35;"	d	file:
PAYLOAD	src/samples/MQTTAsync_subscribe.c	35;"	d	file:
PAYLOAD	src/samples/MQTTClient_publish.c	25;"	d	file:
PAYLOAD	src/samples/MQTTClient_publish_async.c	31;"	d	file:
PAYLOAD	src/samples/MQTTClient_subscribe.c	25;"	d	file:
PAYLOAD	test_package/test_package.c	9;"	d	file:
PERSISTENCE_COMMAND_KEY	src/MQTTPersistence.h	45;"	d
PERSISTENCE_MAX_KEY_LENGTH	src/MQTTPersistence.h	55;"	d
PERSISTENCE_MAX_STEM_LENGTH	src/MQTTPersistence.h	53;"	d
PERSISTENCE_PUBLISH_RECEIVED	src/MQTTPersistence.h	35;"	d
PERSISTENCE_PUBLISH_SENT	src/MQTTPersistence.h	31;"	d
PERSISTENCE_PUBREL	src/MQTTPersistence.h	33;"	d
PERSISTENCE_QUEUE_KEY	src/MQTTPersistence.h	49;"	d
PERSISTENCE_SEQNO_LIMIT	src/MQTTPersistence.h	57;"	d
PERSISTENCE_V5_COMMAND_KEY	src/MQTTPersistence.h	47;"	d
PERSISTENCE_V5_PUBLISH_RECEIVED	src/MQTTPersistence.h	42;"	d
PERSISTENCE_V5_PUBLISH_SENT	src/MQTTPersistence.h	38;"	d
PERSISTENCE_V5_PUBREL	src/MQTTPersistence.h	40;"	d
PERSISTENCE_V5_QUEUE_KEY	src/MQTTPersistence.h	51;"	d
PINGREQ	src/MQTTPacket.h	/^	PINGREQ, PINGRESP, DISCONNECT, AUTH$/;"	e	enum:msgTypes
PINGREQ	test/test10.c	/^	PINGREQ, PINGRESP, DISCONNECT, AUTH$/;"	e	enum:msgTypes	file:
PINGRESP	src/MQTTPacket.h	/^	PINGREQ, PINGRESP, DISCONNECT, AUTH$/;"	e	enum:msgTypes
PINGRESP	test/test10.c	/^	PINGREQ, PINGRESP, DISCONNECT, AUTH$/;"	e	enum:msgTypes	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	337;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	340;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	343;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	346;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	349;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	352;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	355;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	358;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	361;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	367;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	370;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	373;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	376;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	379;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	382;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	385;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	388;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	391;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	394;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	397;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	400;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	403;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	406;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	409;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	413;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	416;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	419;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	422;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	425;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	429;"	d	file:
PORTLEN	src/Socket.c	1032;"	d	file:
PROXY_CONNECT_IN_PROGRESS	src/Clients.h	110;"	d
PUBACK	src/MQTTPacket.h	/^	CONNECT = 1, CONNACK, PUBLISH, PUBACK, PUBREC, PUBREL,$/;"	e	enum:msgTypes
PUBACK	test/test10.c	/^	CONNECT = 1, CONNACK, PUBLISH, PUBACK, PUBREC, PUBREL,$/;"	e	enum:msgTypes	file:
PUBCOMP	src/MQTTPacket.h	/^	PUBCOMP, SUBSCRIBE, SUBACK, UNSUBSCRIBE, UNSUBACK,$/;"	e	enum:msgTypes
PUBCOMP	test/test10.c	/^	PUBCOMP, SUBSCRIBE, SUBACK, UNSUBSCRIBE, UNSUBACK,$/;"	e	enum:msgTypes	file:
PUBLISH	src/MQTTPacket.h	/^	CONNECT = 1, CONNACK, PUBLISH, PUBACK, PUBREC, PUBREL,$/;"	e	enum:msgTypes
PUBLISH	test/python/mqttasync_module.c	/^	CONNECT, PUBLISH, SUBSCRIBE, SUBSCRIBE_MANY, UNSUBSCRIBE$/;"	e	enum:msgTypes	file:
PUBLISH	test/test10.c	/^	CONNECT = 1, CONNACK, PUBLISH, PUBACK, PUBREC, PUBREL,$/;"	e	enum:msgTypes	file:
PUBREC	src/MQTTPacket.h	/^	CONNECT = 1, CONNACK, PUBLISH, PUBACK, PUBREC, PUBREL,$/;"	e	enum:msgTypes
PUBREC	test/test10.c	/^	CONNECT = 1, CONNACK, PUBLISH, PUBACK, PUBREC, PUBREL,$/;"	e	enum:msgTypes	file:
PUBREL	src/MQTTPacket.h	/^	CONNECT = 1, CONNACK, PUBLISH, PUBACK, PUBREC, PUBREL,$/;"	e	enum:msgTypes
PUBREL	test/test10.c	/^	CONNECT = 1, CONNACK, PUBLISH, PUBACK, PUBREC, PUBREL,$/;"	e	enum:msgTypes	file:
PUBSUB_OPTS_H	src/samples/pubsub_opts.h	19;"	d
PacketBuffers	src/Socket.h	/^} PacketBuffers;$/;"	t	typeref:struct:__anon23
PacketType	test/MQTTV5.py	/^def PacketType(byte):$/;"	f
PacketTypes	test/MQTTV5.py	/^class PacketTypes:$/;"	c
Packets	test/MQTTV311.py	/^class Packets:$/;"	c
Packets	test/MQTTV3112.py	/^class Packets:$/;"	c
Packets	test/MQTTV5.py	/^class Packets(object):$/;"	c
Persistence_clear	src/MQTTClientPersistence.h	/^typedef int (*Persistence_clear)(void* handle);$/;"	t
Persistence_close	src/MQTTClientPersistence.h	/^typedef int (*Persistence_close)(void* handle); $/;"	t
Persistence_containskey	src/MQTTClientPersistence.h	/^typedef int (*Persistence_containskey)(void* handle, char* key);$/;"	t
Persistence_get	src/MQTTClientPersistence.h	/^typedef int (*Persistence_get)(void* handle, char* key, char** buffer, int* buflen);$/;"	t
Persistence_keys	src/MQTTClientPersistence.h	/^typedef int (*Persistence_keys)(void* handle, char*** keys, int* nkeys);$/;"	t
Persistence_open	src/MQTTClientPersistence.h	/^typedef int (*Persistence_open)(void** handle, const char* clientID, const char* serverURI, void* context);$/;"	t
Persistence_put	src/MQTTClientPersistence.h	/^typedef int (*Persistence_put)(void* handle, char* key, int bufcount, char* buffers[], int buflens[]);$/;"	t
Persistence_remove	src/MQTTClientPersistence.h	/^typedef int (*Persistence_remove)(void* handle, char* key);$/;"	t
Pingreqs	test/MQTTV311.py	/^class Pingreqs(Packets):$/;"	c
Pingreqs	test/MQTTV3112.py	/^class Pingreqs(Packets):$/;"	c
Pingreqs	test/MQTTV5.py	/^class Pingreqs(Packets):$/;"	c
Pingresps	test/MQTTV311.py	/^class Pingresps(Packets):$/;"	c
Pingresps	test/MQTTV3112.py	/^class Pingresps(Packets):$/;"	c
Pingresps	test/MQTTV5.py	/^class Pingresps(Packets):$/;"	c
Properties	test/MQTTV5.py	/^class Properties(object):$/;"	c
Protocol	src/MQTTPacket.h	/^	char *Protocol, \/**< MQTT protocol name *\/$/;"	m	struct:__anon35
ProtocolError	test/MQTTV5.py	/^class ProtocolError(MQTTException):$/;"	c
Protocol_processPublication	src/MQTTAsync.c	/^void Protocol_processPublication(Publish* publish, Clients* client, int allocatePayload)$/;"	f
Protocol_processPublication	src/MQTTClient.c	/^void Protocol_processPublication(Publish* publish, Clients* client, int allocatePayload)$/;"	f
Puback	src/MQTTPacket.h	/^typedef Ack Puback;$/;"	t
Pubacks	test/MQTTV311.py	/^class Pubacks(Packets):$/;"	c
Pubacks	test/MQTTV3112.py	/^class Pubacks(Packets):$/;"	c
Pubacks	test/MQTTV5.py	/^class Pubacks(Acks):$/;"	c
Pubcomp	src/MQTTPacket.h	/^typedef Ack Pubcomp;$/;"	t
Pubcomps	test/MQTTV311.py	/^class Pubcomps(Packets):$/;"	c
Pubcomps	test/MQTTV3112.py	/^class Pubcomps(Packets):$/;"	c
Pubcomps	test/MQTTV5.py	/^class Pubcomps(Acks):$/;"	c
Publications	src/Clients.h	/^} Publications;$/;"	t	typeref:struct:__anon15
Publish	src/MQTTPacket.h	/^} Publish;$/;"	t	typeref:struct:__anon46
Publishes	test/MQTTV311.py	/^class Publishes(Packets):$/;"	c
Publishes	test/MQTTV3112.py	/^class Publishes(Packets):$/;"	c
Publishes	test/MQTTV5.py	/^class Publishes(Packets):$/;"	c
Pubrec	src/MQTTPacket.h	/^typedef Ack Pubrec;$/;"	t
Pubrecs	test/MQTTV311.py	/^class Pubrecs(Packets):$/;"	c
Pubrecs	test/MQTTV3112.py	/^class Pubrecs(Packets):$/;"	c
Pubrecs	test/MQTTV5.py	/^class Pubrecs(Acks):$/;"	c
Pubrel	src/MQTTPacket.h	/^typedef Ack Pubrel;$/;"	t
Pubrels	test/MQTTV311.py	/^class Pubrels(Packets):$/;"	c
Pubrels	test/MQTTV3112.py	/^class Pubrels(Packets):$/;"	c
Pubrels	test/MQTTV5.py	/^class Pubrels(Acks):$/;"	c
QOS	src/samples/MQTTAsync_publish.c	36;"	d	file:
QOS	src/samples/MQTTAsync_subscribe.c	36;"	d	file:
QOS	src/samples/MQTTClient_publish.c	26;"	d	file:
QOS	src/samples/MQTTClient_publish_async.c	32;"	d	file:
QOS	src/samples/MQTTClient_subscribe.c	26;"	d	file:
QOS	test_package/test_package.c	10;"	d	file:
QoS	test/test_issue373.c	/^	unsigned int QoS;$/;"	m	struct:Options	file:
RC	src/MQTTPersistenceDefault.c	827;"	d	file:
REGEX_DOXYGEN	Makefile	/^REGEX_DOXYGEN := \\$/;"	m
REVERSED	src/MQTTPacket.h	56;"	d
RIGHT	src/Tree.c	96;"	d	file:
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/src/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/test/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
ROTATE_LEFT32	src/SHA1.c	94;"	d	file:
RUNNING	src/MQTTAsync.c	/^	STOPPED, STARTING, RUNNING, STOPPING$/;"	e	enum:MQTTAsync_threadStates	file:
ReasonCodes	test/MQTTV5.py	/^class ReasonCodes:$/;"	c
ResponseEntry	test/python/mqttasync_module.c	/^} ResponseEntry;$/;"	t	typeref:struct:__anon116	file:
SAMPLE_FILES_A	Makefile	/^SAMPLE_FILES_A = MQTTAsync_subscribe MQTTAsync_publish$/;"	m
SAMPLE_FILES_C	Makefile	/^SAMPLE_FILES_C = MQTTClient_publish MQTTClient_publish_async MQTTClient_subscribe$/;"	m
SECURE_MQTT_DEFAULT_PORT	src/MQTTProtocolOut.h	33;"	d
SED_COMMAND	Makefile	/^SED_COMMAND = sed \\$/;"	m
SED_DOXYGEN	Makefile	/^SED_DOXYGEN := $(foreach sed_exp,$(REGEX_DOXYGEN),-e $(sed_exp))$/;"	m
SHA1_DIGEST_LENGTH	src/SHA1.h	24;"	d
SHA1_DIGEST_LENGTH	src/SHA1.h	53;"	d
SHA1_Final	src/SHA1.c	/^int SHA1_Final(unsigned char *md, SHA_CTX *c)$/;"	f
SHA1_Final	src/SHA1.c	/^int SHA1_Final(unsigned char *md, SHA_CTX *ctx)$/;"	f
SHA1_H	src/SHA1.h	18;"	d
SHA1_Init	src/SHA1.c	/^int SHA1_Init(SHA_CTX *c)$/;"	f
SHA1_Init	src/SHA1.c	/^int SHA1_Init(SHA_CTX *ctx)$/;"	f
SHA1_ProcessBlock	src/SHA1.c	/^static void SHA1_ProcessBlock(SHA_CTX *ctx)$/;"	f	file:
SHA1_Update	src/SHA1.c	/^int SHA1_Update(SHA_CTX *c, const void *data, size_t len)$/;"	f
SHA1_Update	src/SHA1.c	/^int SHA1_Update(SHA_CTX *ctx, const void *data, size_t len)$/;"	f
SHA_CTX	src/SHA1.h	/^} SHA_CTX;$/;"	t	typeref:struct:SHA_CTX_S
SHA_CTX_S	src/SHA1.h	/^typedef struct SHA_CTX_S {$/;"	s
SHA_CTX_S	src/SHA1.h	/^typedef struct SHA_CTX_S$/;"	s
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/src/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/test/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMULATE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	187;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	21;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	209;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	195;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
SOCKETBUFFER_COMPLETE	src/SocketBuffer.h	60;"	d
SOCKETBUFFER_H	src/SocketBuffer.h	19;"	d
SOCKETBUFFER_INTERRUPTED	src/SocketBuffer.h	64;"	d
SOCKET_ERROR	src/Socket.h	76;"	d
SOCKET_ERROR	src/SocketBuffer.h	62;"	d
SOCKET_ERROR	test/sync_client_test.c	596;"	d	file:
SOCKET_H	src/Socket.h	19;"	d
SOURCE_FILES	Makefile	/^SOURCE_FILES = $(wildcard $(srcdir)\/*.c)$/;"	m
SOURCE_FILES_A	Makefile	/^SOURCE_FILES_A = $(filter-out $(srcdir)\/MQTTClient.c $(srcdir)\/MQTTVersion.c $(srcdir)\/SSLSocket.c, $(SOURCE_FILES))$/;"	m
SOURCE_FILES_AS	Makefile	/^SOURCE_FILES_AS = $(filter-out $(srcdir)\/MQTTClient.c $(srcdir)\/MQTTVersion.c, $(SOURCE_FILES))$/;"	m
SOURCE_FILES_C	Makefile	/^SOURCE_FILES_C = $(filter-out $(srcdir)\/MQTTAsync.c $(srcdir)\/MQTTVersion.c $(srcdir)\/SSLSocket.c, $(SOURCE_FILES))$/;"	m
SOURCE_FILES_CS	Makefile	/^SOURCE_FILES_CS = $(filter-out $(srcdir)\/MQTTAsync.c $(srcdir)\/MQTTVersion.c, $(SOURCE_FILES))$/;"	m
SSLLocks_callback	src/SSLSocket.c	/^extern void SSLLocks_callback(int mode, int n, const char *file, int line)$/;"	f
SSLSOCKET_H	src/SSLSocket.h	19;"	d
SSLSocket_addPendingRead	src/SSLSocket.c	/^void SSLSocket_addPendingRead(int sock)$/;"	f
SSLSocket_close	src/SSLSocket.c	/^int SSLSocket_close(networkHandles* net)$/;"	f
SSLSocket_connect	src/SSLSocket.c	/^int SSLSocket_connect(SSL* ssl, int sock, const char* hostname, int verify, int (*cb)(const char *str, size_t len, void *u), void* u)$/;"	f
SSLSocket_continueWrite	src/SSLSocket.c	/^int SSLSocket_continueWrite(pending_writes* pw)$/;"	f
SSLSocket_createContext	src/SSLSocket.c	/^int SSLSocket_createContext(networkHandles* net, MQTTClient_SSLOptions* opts)$/;"	f
SSLSocket_destroyContext	src/SSLSocket.c	/^void SSLSocket_destroyContext(networkHandles* net)$/;"	f
SSLSocket_error	src/SSLSocket.c	/^static int SSLSocket_error(char* aString, SSL* ssl, int sock, int rc, int (*cb)(const char *str, size_t len, void *u), void* u)$/;"	f	file:
SSLSocket_getPendingRead	src/SSLSocket.c	/^int SSLSocket_getPendingRead(void)$/;"	f
SSLSocket_get_version_string	src/SSLSocket.c	/^char* SSLSocket_get_version_string(int version)$/;"	f
SSLSocket_getch	src/SSLSocket.c	/^int SSLSocket_getch(SSL* ssl, int socket, char* c)$/;"	f
SSLSocket_getdata	src/SSLSocket.c	/^char *SSLSocket_getdata(SSL* ssl, int socket, size_t bytes, size_t* actual_len, int* rc)$/;"	f
SSLSocket_handleOpensslInit	src/SSLSocket.c	/^void SSLSocket_handleOpensslInit(int bool_value)$/;"	f
SSLSocket_initialize	src/SSLSocket.c	/^int SSLSocket_initialize(void)$/;"	f
SSLSocket_putdatas	src/SSLSocket.c	/^int SSLSocket_putdatas(SSL* ssl, int socket, char* buf0, size_t buf0len, PacketBuffers bufs)$/;"	f
SSLSocket_setSocketForSSL	src/SSLSocket.c	/^int SSLSocket_setSocketForSSL(networkHandles* net, MQTTClient_SSLOptions* opts,$/;"	f
SSLSocket_terminate	src/SSLSocket.c	/^void SSLSocket_terminate(void)$/;"	f
SSLThread_id	src/SSLSocket.c	/^extern unsigned long SSLThread_id(void)$/;"	f
SSLThread_id	src/SSLSocket.c	/^extern void SSLThread_id(CRYPTO_THREADID *id)$/;"	f
SSL_CTX_info_callback	src/SSLSocket.c	/^void SSL_CTX_info_callback(const SSL* ssl, int where, int ret)$/;"	f
SSL_CTX_msg_callback	src/SSLSocket.c	/^void SSL_CTX_msg_callback(int write_p, int version, int content_type, const void* buf, size_t len,$/;"	f
SSL_FATAL	src/Socket.h	80;"	d
SSL_IN_PROGRESS	src/Clients.h	104;"	d
SSL_create_mutex	src/SSLSocket.c	/^int SSL_create_mutex(ssl_mutex_type* mutex)$/;"	f
SSL_destroy_mutex	src/SSLSocket.c	/^int SSL_destroy_mutex(ssl_mutex_type* mutex)$/;"	f
SSL_get_verify_result_string	src/SSLSocket.c	/^char* SSL_get_verify_result_string(int rc)$/;"	f
SSL_lock_mutex	src/SSLSocket.c	/^int SSL_lock_mutex(ssl_mutex_type* mutex)$/;"	f
SSL_unlock_mutex	src/SSLSocket.c	/^int SSL_unlock_mutex(ssl_mutex_type* mutex)$/;"	f
STACKTRACE_H_	src/StackTrace.h	18;"	d
STACK_LEN	src/Heap.c	186;"	d	file:
STARTING	src/MQTTAsync.c	/^	STOPPED, STARTING, RUNNING, STOPPING$/;"	e	enum:MQTTAsync_threadStates	file:
START_GROUP	Makefile	/^START_GROUP = -Wl,--start-group$/;"	m
START_GROUP	Makefile	/^START_GROUP =$/;"	m
START_TIME_TYPE	src/MQTTTime.h	25;"	d
START_TIME_TYPE	src/MQTTTime.h	28;"	d
START_TIME_TYPE	src/MQTTTime.h	32;"	d
START_TIME_TYPE	src/MQTTTime.h	36;"	d
START_TIME_TYPE	src/Thread.c	461;"	d	file:
START_TIME_TYPE	src/Thread.c	469;"	d	file:
START_TIME_TYPE	src/Thread.c	478;"	d	file:
START_TIME_TYPE	test/sync_client_test.c	176;"	d	file:
START_TIME_TYPE	test/sync_client_test.c	184;"	d	file:
START_TIME_TYPE	test/sync_client_test.c	193;"	d	file:
START_TIME_TYPE	test/test1.c	177;"	d	file:
START_TIME_TYPE	test/test1.c	185;"	d	file:
START_TIME_TYPE	test/test1.c	194;"	d	file:
START_TIME_TYPE	test/test10.c	196;"	d	file:
START_TIME_TYPE	test/test10.c	204;"	d	file:
START_TIME_TYPE	test/test10.c	213;"	d	file:
START_TIME_TYPE	test/test11.c	154;"	d	file:
START_TIME_TYPE	test/test11.c	162;"	d	file:
START_TIME_TYPE	test/test11.c	171;"	d	file:
START_TIME_TYPE	test/test15.c	183;"	d	file:
START_TIME_TYPE	test/test15.c	191;"	d	file:
START_TIME_TYPE	test/test15.c	200;"	d	file:
START_TIME_TYPE	test/test2.c	168;"	d	file:
START_TIME_TYPE	test/test2.c	176;"	d	file:
START_TIME_TYPE	test/test2.c	185;"	d	file:
START_TIME_TYPE	test/test3.c	296;"	d	file:
START_TIME_TYPE	test/test3.c	304;"	d	file:
START_TIME_TYPE	test/test3.c	313;"	d	file:
START_TIME_TYPE	test/test4.c	153;"	d	file:
START_TIME_TYPE	test/test4.c	161;"	d	file:
START_TIME_TYPE	test/test4.c	170;"	d	file:
START_TIME_TYPE	test/test45.c	167;"	d	file:
START_TIME_TYPE	test/test45.c	174;"	d	file:
START_TIME_TYPE	test/test45.c	182;"	d	file:
START_TIME_TYPE	test/test5.c	261;"	d	file:
START_TIME_TYPE	test/test5.c	269;"	d	file:
START_TIME_TYPE	test/test5.c	278;"	d	file:
START_TIME_TYPE	test/test6.c	213;"	d	file:
START_TIME_TYPE	test/test6.c	220;"	d	file:
START_TIME_TYPE	test/test6.c	228;"	d	file:
START_TIME_TYPE	test/test8.c	129;"	d	file:
START_TIME_TYPE	test/test8.c	137;"	d	file:
START_TIME_TYPE	test/test8.c	146;"	d	file:
START_TIME_TYPE	test/test9.c	140;"	d	file:
START_TIME_TYPE	test/test9.c	147;"	d	file:
START_TIME_TYPE	test/test9.c	155;"	d	file:
START_TIME_TYPE	test/test95.c	141;"	d	file:
START_TIME_TYPE	test/test95.c	148;"	d	file:
START_TIME_TYPE	test/test95.c	156;"	d	file:
START_TIME_TYPE	test/test_connect_destroy.c	175;"	d	file:
START_TIME_TYPE	test/test_connect_destroy.c	182;"	d	file:
START_TIME_TYPE	test/test_connect_destroy.c	190;"	d	file:
START_TIME_TYPE	test/test_mqtt4async.c	170;"	d	file:
START_TIME_TYPE	test/test_mqtt4async.c	178;"	d	file:
START_TIME_TYPE	test/test_mqtt4async.c	187;"	d	file:
START_TIME_TYPE	test/test_mqtt4sync.c	170;"	d	file:
START_TIME_TYPE	test/test_mqtt4sync.c	178;"	d	file:
START_TIME_TYPE	test/test_mqtt4sync.c	187;"	d	file:
START_TIME_TYPE	test/test_sync_session_present.c	221;"	d	file:
START_TIME_TYPE	test/test_sync_session_present.c	229;"	d	file:
START_TIME_TYPE	test/test_sync_session_present.c	238;"	d	file:
START_TIME_TYPE	test/thread.c	117;"	d	file:
START_TIME_TYPE	test/thread.c	125;"	d	file:
START_TIME_TYPE	test/thread.c	134;"	d	file:
START_TIME_ZERO	src/MQTTTime.h	26;"	d
START_TIME_ZERO	src/MQTTTime.h	29;"	d
START_TIME_ZERO	src/MQTTTime.h	33;"	d
START_TIME_ZERO	src/MQTTTime.h	37;"	d
STOPPED	src/MQTTAsync.c	/^	STOPPED, STARTING, RUNNING, STOPPING$/;"	e	enum:MQTTAsync_threadStates	file:
STOPPING	src/MQTTAsync.c	/^	STOPPED, STARTING, RUNNING, STOPPING$/;"	e	enum:MQTTAsync_threadStates	file:
STRINGIFY	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	333;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	332;"	d	file:
SUBACK	src/MQTTPacket.h	/^	PUBCOMP, SUBSCRIBE, SUBACK, UNSUBSCRIBE, UNSUBACK,$/;"	e	enum:msgTypes
SUBACK	test/test10.c	/^	PUBCOMP, SUBSCRIBE, SUBACK, UNSUBSCRIBE, UNSUBACK,$/;"	e	enum:msgTypes	file:
SUBOPTS_H	src/MQTTSubscribeOpts.h	18;"	d
SUBSCRIBE	src/MQTTPacket.h	/^	PUBCOMP, SUBSCRIBE, SUBACK, UNSUBSCRIBE, UNSUBACK,$/;"	e	enum:msgTypes
SUBSCRIBE	test/python/mqttasync_module.c	/^	CONNECT, PUBLISH, SUBSCRIBE, SUBSCRIBE_MANY, UNSUBSCRIBE$/;"	e	enum:msgTypes	file:
SUBSCRIBE	test/test10.c	/^	PUBCOMP, SUBSCRIBE, SUBACK, UNSUBSCRIBE, UNSUBACK,$/;"	e	enum:msgTypes	file:
SUBSCRIBE_MANY	test/python/mqttasync_module.c	/^	CONNECT, PUBLISH, SUBSCRIBE, SUBSCRIBE_MANY, UNSUBSCRIBE$/;"	e	enum:msgTypes	file:
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/src/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/test/Makefile	/^SUFFIXES =$/;"	m
SYNC_SAMPLES	Makefile	/^SYNC_SAMPLES = ${addprefix ${blddir}\/samples\/,${SAMPLE_FILES_C}}$/;"	m
SYNC_SSL_TESTS	Makefile	/^SYNC_SSL_TESTS = ${addprefix ${blddir}\/test\/,${TEST_FILES_CS}}$/;"	m
SYNC_TESTS	Makefile	/^SYNC_TESTS = ${addprefix ${blddir}\/test\/,${TEST_FILES_C}}$/;"	m
SYNC_UTILS	Makefile	/^SYNC_UTILS = ${addprefix ${blddir}\/samples\/,${UTIL_FILES_CS}}$/;"	m
SocketBuffer_cleanup	src/SocketBuffer.c	/^void SocketBuffer_cleanup(int socket)$/;"	f
SocketBuffer_complete	src/SocketBuffer.c	/^char* SocketBuffer_complete(int socket)$/;"	f
SocketBuffer_freeDefQ	src/SocketBuffer.c	/^void SocketBuffer_freeDefQ(void)$/;"	f
SocketBuffer_getQueuedChar	src/SocketBuffer.c	/^int SocketBuffer_getQueuedChar(int socket, char* c)$/;"	f
SocketBuffer_getQueuedData	src/SocketBuffer.c	/^char* SocketBuffer_getQueuedData(int socket, size_t bytes, size_t* actual_len)$/;"	f
SocketBuffer_getWrite	src/SocketBuffer.c	/^pending_writes* SocketBuffer_getWrite(int socket)$/;"	f
SocketBuffer_initialize	src/SocketBuffer.c	/^int SocketBuffer_initialize(void)$/;"	f
SocketBuffer_interrupted	src/SocketBuffer.c	/^void SocketBuffer_interrupted(int socket, size_t actual_len)$/;"	f
SocketBuffer_newDefQ	src/SocketBuffer.c	/^int SocketBuffer_newDefQ(void)$/;"	f
SocketBuffer_pendingWrite	src/SocketBuffer.c	/^int SocketBuffer_pendingWrite(int socket, SSL* ssl, int count, iobuf* iovecs, int* frees, size_t total, size_t bytes)$/;"	f
SocketBuffer_queueChar	src/SocketBuffer.c	/^void SocketBuffer_queueChar(int socket, char c)$/;"	f
SocketBuffer_terminate	src/SocketBuffer.c	/^void SocketBuffer_terminate(void)$/;"	f
SocketBuffer_updateWrite	src/SocketBuffer.c	/^pending_writes* SocketBuffer_updateWrite(int socket, char* topic, char* payload)$/;"	f
SocketBuffer_writeComplete	src/SocketBuffer.c	/^int SocketBuffer_writeComplete(int socket)$/;"	f
Socket_abortWrite	src/Socket.c	/^int Socket_abortWrite(int socket)$/;"	f
Socket_addPendingWrite	src/Socket.c	/^void Socket_addPendingWrite(int socket)$/;"	f
Socket_addSocket	src/Socket.c	/^int Socket_addSocket(int newSd)$/;"	f
Socket_clearPendingWrite	src/Socket.c	/^void Socket_clearPendingWrite(int socket)$/;"	f
Socket_close	src/Socket.c	/^void Socket_close(int socket)$/;"	f
Socket_close_only	src/Socket.c	/^int Socket_close_only(int socket)$/;"	f
Socket_continueWrite	src/Socket.c	/^int Socket_continueWrite(int socket)$/;"	f
Socket_continueWrites	src/Socket.c	/^int Socket_continueWrites(fd_set* pwset)$/;"	f
Socket_error	src/Socket.c	/^int Socket_error(char* aString, int sock)$/;"	f
Socket_getReadySocket	src/Socket.c	/^int Socket_getReadySocket(int more_work, struct timeval *tp, mutex_type mutex)$/;"	f
Socket_getaddrname	src/Socket.c	/^char* Socket_getaddrname(struct sockaddr* sa, int sock)$/;"	f
Socket_getch	src/Socket.c	/^int Socket_getch(int socket, char* c)$/;"	f
Socket_getdata	src/Socket.c	/^char *Socket_getdata(int socket, size_t bytes, size_t* actual_len, int *rc)$/;"	f
Socket_getpeer	src/Socket.c	/^char* Socket_getpeer(int sock)$/;"	f
Socket_new	src/Socket.c	/^int Socket_new(const char* addr, size_t addr_len, int port, int* sock, long timeout)$/;"	f
Socket_noPendingWrites	src/Socket.c	/^int Socket_noPendingWrites(int socket)$/;"	f
Socket_outInitialize	src/Socket.c	/^void Socket_outInitialize(void)$/;"	f
Socket_outTerminate	src/Socket.c	/^void Socket_outTerminate(void)$/;"	f
Socket_putdatas	src/Socket.c	/^int Socket_putdatas(int socket, char* buf0, size_t buf0len, PacketBuffers bufs)$/;"	f
Socket_setWriteCompleteCallback	src/Socket.c	/^void Socket_setWriteCompleteCallback(Socket_writeComplete* mywritecomplete)$/;"	f
Socket_setnonblocking	src/Socket.c	/^int Socket_setnonblocking(int sock)$/;"	f
Socket_writeComplete	src/Socket.h	/^typedef void Socket_writeComplete(int socket, int rc);$/;"	t
Socket_writev	src/Socket.c	/^int Socket_writev(int socket, iobuf* iovecs, int count, unsigned long* bytes)$/;"	f
Sockets	src/Socket.h	/^} Sockets;$/;"	t	typeref:struct:__anon24
StackTrace_entry	src/StackTrace.c	/^void StackTrace_entry(const char* name, int line, enum LOG_LEVELS trace_level)$/;"	f
StackTrace_exit	src/StackTrace.c	/^void StackTrace_exit(const char* name, int line, void* rc, enum LOG_LEVELS trace_level)$/;"	f
StackTrace_get	src/StackTrace.c	/^char* StackTrace_get(thread_id_type threadid, char* buf, int bufsize)$/;"	f
StackTrace_printStack	src/StackTrace.c	/^void StackTrace_printStack(FILE* dest)$/;"	f
Suback	src/MQTTPacket.h	/^} Suback;$/;"	t	typeref:struct:__anon44
Subacks	test/MQTTV311.py	/^class Subacks(Packets):$/;"	c
Subacks	test/MQTTV3112.py	/^class Subacks(Packets):$/;"	c
Subacks	test/MQTTV5.py	/^class Subacks(UnsubSubacks):$/;"	c
SubscribeOptions	test/MQTTV5.py	/^class SubscribeOptions(object):$/;"	c
Subscribes	test/MQTTV311.py	/^class Subscribes(Packets):$/;"	c
Subscribes	test/MQTTV3112.py	/^class Subscribes(Packets):$/;"	c
Subscribes	test/MQTTV5.py	/^class Subscribes(Packets):$/;"	c
TCPSOCKET_COMPLETE	src/Socket.h	73;"	d
TCPSOCKET_INTERRUPTED	src/Socket.h	79;"	d
TCP_IN_PROGRESS	src/Clients.h	102;"	d
TEST2D_COUNT	test/test5.c	1137;"	d	file:
TEST3_CLIENTS	test/test8.c	626;"	d	file:
TEST_EXPECT	src/Base64.c	259;"	d	file:
TEST_EXPECT	src/SHA1.c	205;"	d	file:
TEST_FILES_A	Makefile	/^TEST_FILES_A = test4 test45 test6 test9 test95 test_mqtt4async test11$/;"	m
TEST_FILES_AS	Makefile	/^TEST_FILES_AS = test5$/;"	m
TEST_FILES_C	Makefile	/^TEST_FILES_C = test1 test15 test2 sync_client_test test_mqtt4sync test10$/;"	m
TEST_FILES_CS	Makefile	/^TEST_FILES_CS = test3$/;"	m
THREAD_H	src/Thread.h	21;"	d
TIMEOUT	src/samples/MQTTAsync_publish.c	37;"	d	file:
TIMEOUT	src/samples/MQTTAsync_subscribe.c	37;"	d	file:
TIMEOUT	src/samples/MQTTClient_publish.c	27;"	d	file:
TIMEOUT	src/samples/MQTTClient_publish_async.c	33;"	d	file:
TIMEOUT	src/samples/MQTTClient_subscribe.c	27;"	d	file:
TIMEOUT	test_package/test_package.c	11;"	d	file:
TOPIC	src/samples/MQTTAsync_publish.c	34;"	d	file:
TOPIC	src/samples/MQTTAsync_subscribe.c	34;"	d	file:
TOPIC	src/samples/MQTTClient_publish.c	24;"	d	file:
TOPIC	src/samples/MQTTClient_publish_async.c	30;"	d	file:
TOPIC	src/samples/MQTTClient_subscribe.c	24;"	d	file:
TOPIC	test_package/test_package.c	8;"	d	file:
TRACE_MAX	src/Log.h	65;"	d
TRACE_MAXIMUM	src/Log.h	/^	TRACE_MAXIMUM = 1,$/;"	e	enum:LOG_LEVELS
TRACE_MED	src/Log.h	67;"	d
TRACE_MEDIUM	src/Log.h	/^	TRACE_MEDIUM,$/;"	e	enum:LOG_LEVELS
TRACE_MIN	src/Log.h	66;"	d
TRACE_MINIMUM	src/Log.h	/^	TRACE_MINIMUM,$/;"	e	enum:LOG_LEVELS
TRACE_PROTOCOL	src/Log.h	/^	TRACE_PROTOCOL,$/;"	e	enum:LOG_LEVELS
TREE_C	src/Tree.c	24;"	d	file:
TREE_H	src/Tree.h	19;"	d
TestPackageConan	test_package/conanfile.py	/^class TestPackageConan(ConanFile):$/;"	c
Thread_check_sem	src/Thread.c	/^int Thread_check_sem(sem_type sem)$/;"	f
Thread_create_cond	src/Thread.c	/^cond_type Thread_create_cond(int *rc)$/;"	f
Thread_create_mutex	src/Thread.c	/^mutex_type Thread_create_mutex(int* rc)$/;"	f
Thread_create_sem	src/Thread.c	/^sem_type Thread_create_sem(int *rc)$/;"	f
Thread_destroy_cond	src/Thread.c	/^int Thread_destroy_cond(cond_type condvar)$/;"	f
Thread_destroy_mutex	src/Thread.c	/^int Thread_destroy_mutex(mutex_type mutex)$/;"	f
Thread_destroy_sem	src/Thread.c	/^int Thread_destroy_sem(sem_type sem)$/;"	f
Thread_getid	src/Thread.c	/^thread_id_type Thread_getid(void)$/;"	f
Thread_lock_mutex	src/Thread.c	/^int Thread_lock_mutex(mutex_type mutex)$/;"	f
Thread_post_sem	src/Thread.c	/^int Thread_post_sem(sem_type sem)$/;"	f
Thread_signal_cond	src/Thread.c	/^int Thread_signal_cond(cond_type condvar)$/;"	f
Thread_start	src/Thread.c	/^thread_type Thread_start(thread_fn fn, void* parameter)$/;"	f
Thread_unlock_mutex	src/Thread.c	/^int Thread_unlock_mutex(mutex_type mutex)$/;"	f
Thread_wait_cond	src/Thread.c	/^int Thread_wait_cond(cond_type condvar, int timeout)$/;"	f
Thread_wait_sem	src/Thread.c	/^int Thread_wait_sem(sem_type sem, int timeout)$/;"	f
ThreadingTCPServer	test/mqttsas.py	/^class ThreadingTCPServer(socketserver.ThreadingMixIn, socketserver.TCPServer):$/;"	c
Tree	src/Tree.h	/^} Tree;$/;"	t	typeref:struct:__anon54
TreeAdd	src/Tree.c	/^void* TreeAdd(Tree* aTree, void* content, size_t size)$/;"	f
TreeAddByIndex	src/Tree.c	/^void* TreeAddByIndex(Tree* aTree, void* content, size_t size, int index)$/;"	f
TreeAddIndex	src/Tree.c	/^void TreeAddIndex(Tree* aTree, int(*compare)(void*, void*, int))$/;"	f
TreeBAASub	src/Tree.c	/^Node* TreeBAASub(Tree* aTree, Node* curnode, int which, int index)$/;"	f
TreeBARSub	src/Tree.c	/^Node* TreeBARSub(Tree* aTree, Node* curnode, int which, int index)$/;"	f
TreeBalanceAfterAdd	src/Tree.c	/^void TreeBalanceAfterAdd(Tree* aTree, Node* curnode, int index)$/;"	f
TreeBalanceAfterRemove	src/Tree.c	/^void TreeBalanceAfterRemove(Tree* aTree, Node* curnode, int index)$/;"	f
TreeFind	src/Tree.c	/^Node* TreeFind(Tree* aTree, void* key)$/;"	f
TreeFindContentIndex	src/Tree.c	/^Node* TreeFindContentIndex(Tree* aTree, void* key, int index)$/;"	f
TreeFindIndex	src/Tree.c	/^Node* TreeFindIndex(Tree* aTree, void* key, int index)$/;"	f
TreeFindIndex1	src/Tree.c	/^Node* TreeFindIndex1(Tree* aTree, void* key, int index, int value)$/;"	f
TreeFree	src/Tree.c	/^void TreeFree(Tree* aTree)$/;"	f
TreeInitialize	src/Tree.c	/^Tree* TreeInitialize(int(*compare)(void*, void*, int))$/;"	f
TreeInitializeNoMalloc	src/Tree.c	/^void TreeInitializeNoMalloc(Tree* aTree, int(*compare)(void*, void*, int))$/;"	f
TreeIntCompare	src/Tree.c	/^int TreeIntCompare(void* a, void* b, int content)$/;"	f
TreeMinimum	src/Tree.c	/^Node* TreeMinimum(Node* curnode)$/;"	f
TreeNextElement	src/Tree.c	/^Node* TreeNextElement(Tree* aTree, Node* curnode)$/;"	f
TreeNextElementIndex	src/Tree.c	/^Node* TreeNextElementIndex(Tree* aTree, Node* curnode, int index)$/;"	f
TreePtrCompare	src/Tree.c	/^int TreePtrCompare(void* a, void* b, int content)$/;"	f
TreeRemove	src/Tree.c	/^void* TreeRemove(Tree* aTree, void* content)$/;"	f
TreeRemoveIndex	src/Tree.c	/^void* TreeRemoveIndex(Tree* aTree, void* content, int index)$/;"	f
TreeRemoveKey	src/Tree.c	/^void* TreeRemoveKey(Tree* aTree, void* key)$/;"	f
TreeRemoveKeyIndex	src/Tree.c	/^void* TreeRemoveKeyIndex(Tree* aTree, void* key, int index)$/;"	f
TreeRemoveNodeIndex	src/Tree.c	/^void* TreeRemoveNodeIndex(Tree* aTree, Node* curnode, int index)$/;"	f
TreeRotate	src/Tree.c	/^void TreeRotate(Tree* aTree, Node* curnode, int direction, int index)$/;"	f
TreeStringCompare	src/Tree.c	/^int TreeStringCompare(void* a, void* b, int content)$/;"	f
TreeSuccessor	src/Tree.c	/^Node* TreeSuccessor(Node* curnode)$/;"	f
ULONG	src/Socket.h	67;"	d
UNSUBACK	src/MQTTPacket.h	/^	PUBCOMP, SUBSCRIBE, SUBACK, UNSUBSCRIBE, UNSUBACK,$/;"	e	enum:msgTypes
UNSUBACK	test/test10.c	/^	PUBCOMP, SUBSCRIBE, SUBACK, UNSUBSCRIBE, UNSUBACK,$/;"	e	enum:msgTypes	file:
UNSUBSCRIBE	src/MQTTPacket.h	/^	PUBCOMP, SUBSCRIBE, SUBACK, UNSUBSCRIBE, UNSUBACK,$/;"	e	enum:msgTypes
UNSUBSCRIBE	test/python/mqttasync_module.c	/^	CONNECT, PUBLISH, SUBSCRIBE, SUBSCRIBE_MANY, UNSUBSCRIBE$/;"	e	enum:msgTypes	file:
UNSUBSCRIBE	test/test10.c	/^	PUBCOMP, SUBSCRIBE, SUBACK, UNSUBSCRIBE, UNSUBACK,$/;"	e	enum:msgTypes	file:
URI_SSL	src/MQTTClient.c	68;"	d	file:
URI_SSL	src/SSLSocket.h	33;"	d
URI_TCP	src/MQTTAsync.c	67;"	d	file:
URI_TCP	src/MQTTClient.c	73;"	d	file:
URI_WS	src/MQTTAsync.c	68;"	d	file:
URI_WS	src/MQTTClient.c	74;"	d	file:
URI_WSS	src/MQTTAsync.c	69;"	d	file:
URI_WSS	src/MQTTClient.c	75;"	d	file:
USE_TRYWAIT	src/Thread.c	237;"	d	file:
UTF8_H	src/utf-8.h	18;"	d
UTF8_char_validate	src/utf-8.c	/^static const char* UTF8_char_validate(int len, const char* data)$/;"	f	file:
UTF8_validate	src/utf-8.c	/^int UTF8_validate(int len, const char* data)$/;"	f
UTF8_validateString	src/utf-8.c	/^int UTF8_validateString(const char* string)$/;"	f
UTIL_FILES_AS	Makefile	/^UTIL_FILES_AS = paho_c_pub paho_c_sub$/;"	m
UTIL_FILES_CS	Makefile	/^UTIL_FILES_CS = paho_cs_pub paho_cs_sub $/;"	m
UnsubSubacks	test/MQTTV5.py	/^class UnsubSubacks(Packets):$/;"	c
Unsuback	src/MQTTPacket.h	/^} Unsuback;$/;"	t	typeref:struct:__anon45
Unsubacks	test/MQTTV311.py	/^class Unsubacks(Packets):$/;"	c
Unsubacks	test/MQTTV3112.py	/^class Unsubacks(Packets):$/;"	c
Unsubacks	test/MQTTV5.py	/^class Unsubacks(UnsubSubacks):$/;"	c
Unsubscribes	test/MQTTV311.py	/^class Unsubscribes(Packets):$/;"	c
Unsubscribes	test/MQTTV3112.py	/^class Unsubscribes(Packets):$/;"	c
Unsubscribes	test/MQTTV5.py	/^class Unsubscribes(Packets):$/;"	c
VBIs	test/MQTTV5.py	/^class VBIs:  # Variable Byte Integer$/;"	c
VERSION	Makefile	/^VERSION = ${MAJOR_VERSION}.${MINOR_VERSION}$/;"	m
VERSION	dist/Makefile	/^VERSION=1.3.0$/;"	m
VERSIONINFO_H	build/VersionInfo.h	2;"	d
WAIT_FOR_CONNACK	src/Clients.h	108;"	d
WEBSOCKET_H	src/WebSocket.h	18;"	d
WEBSOCKET_IN_PROGRESS	src/Clients.h	106;"	d
WILLMESSAGE	test/MQTTV5.py	/^  WILLMESSAGE = 99$/;"	v	class:PacketTypes
WINAPI	src/MQTTAsync.c	302;"	d	file:
WINAPI	src/MQTTClient.c	280;"	d	file:
WINAPI	test/test2.c	33;"	d	file:
WINAPI	test/test_connect_destroy.c	32;"	d	file:
WINAPI	test/thread.c	33;"	d	file:
WS_DEFAULT_PORT	src/MQTTProtocolOut.h	34;"	d
WebScoket_CLOSE_UNEXPECTED	src/WebSocket.h	49;"	d
WebSocket_CLOSE_ABNORMAL	src/WebSocket.h	44;"	d
WebSocket_CLOSE_BAD_DATA	src/WebSocket.h	45;"	d
WebSocket_CLOSE_GOING_AWAY	src/WebSocket.h	39;"	d
WebSocket_CLOSE_MSG_TOO_BIG	src/WebSocket.h	47;"	d
WebSocket_CLOSE_NORMAL	src/WebSocket.h	38;"	d
WebSocket_CLOSE_NO_EXTENSION	src/WebSocket.h	48;"	d
WebSocket_CLOSE_NO_STATUS_CODE	src/WebSocket.h	43;"	d
WebSocket_CLOSE_POLICY	src/WebSocket.h	46;"	d
WebSocket_CLOSE_PROTOCOL_ERROR	src/WebSocket.h	40;"	d
WebSocket_CLOSE_RESERVED	src/WebSocket.h	42;"	d
WebSocket_CLOSE_TLS_FAIL	src/WebSocket.h	50;"	d
WebSocket_CLOSE_UNKNOWN_DATA	src/WebSocket.h	41;"	d
WebSocket_OP_BINARY	src/WebSocket.h	28;"	d
WebSocket_OP_CLOSE	src/WebSocket.h	29;"	d
WebSocket_OP_CONTINUE	src/WebSocket.h	26;"	d
WebSocket_OP_PING	src/WebSocket.h	30;"	d
WebSocket_OP_PONG	src/WebSocket.h	31;"	d
WebSocket_OP_TEXT	src/WebSocket.h	27;"	d
WebSocket_buildFrame	src/WebSocket.c	/^static struct frameData WebSocket_buildFrame(networkHandles* net, int opcode, int mask_data,$/;"	f	file:
WebSocket_calculateFrameHeaderSize	src/WebSocket.c	/^size_t WebSocket_calculateFrameHeaderSize(networkHandles *net, int mask_data, size_t data_len)$/;"	f
WebSocket_close	src/WebSocket.c	/^void WebSocket_close(networkHandles *net, int status_code, const char *reason)$/;"	f
WebSocket_connect	src/WebSocket.c	/^int WebSocket_connect( networkHandles *net, const char *uri)$/;"	f
WebSocket_framePos	src/WebSocket.c	/^size_t WebSocket_framePos()$/;"	f
WebSocket_framePosSeekTo	src/WebSocket.c	/^void WebSocket_framePosSeekTo(size_t pos)$/;"	f
WebSocket_getRawSocketData	src/WebSocket.c	/^char *WebSocket_getRawSocketData(networkHandles *net, size_t bytes, size_t* actual_len, int* rc)$/;"	f
WebSocket_getch	src/WebSocket.c	/^int WebSocket_getch(networkHandles *net, char* c)$/;"	f
WebSocket_getdata	src/WebSocket.c	/^char *WebSocket_getdata(networkHandles *net, size_t bytes, size_t* actual_len)$/;"	f
WebSocket_pong	src/WebSocket.c	/^void WebSocket_pong(networkHandles *net, char *app_data, size_t app_data_len)$/;"	f
WebSocket_proxy_connect	src/WebSocket.c	/^int WebSocket_proxy_connect( networkHandles *net, int ssl, const char *hostname)$/;"	f
WebSocket_putdatas	src/WebSocket.c	/^int WebSocket_putdatas(networkHandles* net, char** buf0, size_t* buf0len, PacketBuffers* bufs)$/;"	f
WebSocket_receiveFrame	src/WebSocket.c	/^int WebSocket_receiveFrame(networkHandles *net, size_t *actual_len)$/;"	f
WebSocket_rewindData	src/WebSocket.c	/^void WebSocket_rewindData( void )$/;"	f
WebSocket_strcasefind	src/WebSocket.c	/^const char *WebSocket_strcasefind(const char *buf, const char *str, size_t len)$/;"	f
WebSocket_terminate	src/WebSocket.c	/^void WebSocket_terminate( void )$/;"	f
WebSocket_unmaskData	src/WebSocket.c	/^static void WebSocket_unmaskData(size_t idx, PacketBuffers* bufs)$/;"	f	file:
WebSocket_upgrade	src/WebSocket.c	/^int WebSocket_upgrade( networkHandles *net )$/;"	f
X509_message_table	src/SSLSocket.c	/^X509_message_table[] =$/;"	v	typeref:struct:__anon31	file:
_MUTEX_TYPE_H_	src/mutex_type.h	15;"	d
__declspec	test/openssl/applink.c	/^__declspec(dllexport)$/;"	f
__eq__	test/MQTTV311.py	/^  def __eq__(self, fh):$/;"	m	class:FixedHeaders	file:
__eq__	test/MQTTV311.py	/^  def __eq__(self, packet):$/;"	m	class:Connacks	file:
__eq__	test/MQTTV311.py	/^  def __eq__(self, packet):$/;"	m	class:Connects	file:
__eq__	test/MQTTV311.py	/^  def __eq__(self, packet):$/;"	m	class:Packets	file:
__eq__	test/MQTTV311.py	/^  def __eq__(self, packet):$/;"	m	class:Pubacks	file:
__eq__	test/MQTTV311.py	/^  def __eq__(self, packet):$/;"	m	class:Pubcomps	file:
__eq__	test/MQTTV311.py	/^  def __eq__(self, packet):$/;"	m	class:Publishes	file:
__eq__	test/MQTTV311.py	/^  def __eq__(self, packet):$/;"	m	class:Pubrecs	file:
__eq__	test/MQTTV311.py	/^  def __eq__(self, packet):$/;"	m	class:Pubrels	file:
__eq__	test/MQTTV311.py	/^  def __eq__(self, packet):$/;"	m	class:Subacks	file:
__eq__	test/MQTTV311.py	/^  def __eq__(self, packet):$/;"	m	class:Subscribes	file:
__eq__	test/MQTTV311.py	/^  def __eq__(self, packet):$/;"	m	class:Unsubacks	file:
__eq__	test/MQTTV311.py	/^  def __eq__(self, packet):$/;"	m	class:Unsubscribes	file:
__eq__	test/MQTTV3112.py	/^  def __eq__(self, fh):$/;"	m	class:FixedHeaders	file:
__eq__	test/MQTTV3112.py	/^  def __eq__(self, packet):$/;"	m	class:Connacks	file:
__eq__	test/MQTTV3112.py	/^  def __eq__(self, packet):$/;"	m	class:Connects	file:
__eq__	test/MQTTV3112.py	/^  def __eq__(self, packet):$/;"	m	class:Packets	file:
__eq__	test/MQTTV3112.py	/^  def __eq__(self, packet):$/;"	m	class:Pubacks	file:
__eq__	test/MQTTV3112.py	/^  def __eq__(self, packet):$/;"	m	class:Pubcomps	file:
__eq__	test/MQTTV3112.py	/^  def __eq__(self, packet):$/;"	m	class:Publishes	file:
__eq__	test/MQTTV3112.py	/^  def __eq__(self, packet):$/;"	m	class:Pubrecs	file:
__eq__	test/MQTTV3112.py	/^  def __eq__(self, packet):$/;"	m	class:Pubrels	file:
__eq__	test/MQTTV3112.py	/^  def __eq__(self, packet):$/;"	m	class:Subacks	file:
__eq__	test/MQTTV3112.py	/^  def __eq__(self, packet):$/;"	m	class:Subscribes	file:
__eq__	test/MQTTV3112.py	/^  def __eq__(self, packet):$/;"	m	class:Unsubacks	file:
__eq__	test/MQTTV3112.py	/^  def __eq__(self, packet):$/;"	m	class:Unsubscribes	file:
__eq__	test/MQTTV5.py	/^  def __eq__(self, fh):$/;"	m	class:FixedHeaders	file:
__eq__	test/MQTTV5.py	/^  def __eq__(self, packet):$/;"	m	class:Acks	file:
__eq__	test/MQTTV5.py	/^  def __eq__(self, packet):$/;"	m	class:Auths	file:
__eq__	test/MQTTV5.py	/^  def __eq__(self, packet):$/;"	m	class:Connacks	file:
__eq__	test/MQTTV5.py	/^  def __eq__(self, packet):$/;"	m	class:Connects	file:
__eq__	test/MQTTV5.py	/^  def __eq__(self, packet):$/;"	m	class:Disconnects	file:
__eq__	test/MQTTV5.py	/^  def __eq__(self, packet):$/;"	m	class:Packets	file:
__eq__	test/MQTTV5.py	/^  def __eq__(self, packet):$/;"	m	class:Publishes	file:
__eq__	test/MQTTV5.py	/^  def __eq__(self, packet):$/;"	m	class:Subscribes	file:
__eq__	test/MQTTV5.py	/^  def __eq__(self, packet):$/;"	m	class:UnsubSubacks	file:
__eq__	test/MQTTV5.py	/^  def __eq__(self, packet):$/;"	m	class:Unsubscribes	file:
__getName__	test/MQTTV5.py	/^  def __getName__(self, packetType, identifier):$/;"	m	class:ReasonCodes	file:
__getattr__	test/mqttsas.py	/^    def __getattr__(self, name):$/;"	m	class:BufferedSockets	file:
__init__	test/MQTTV311.py	/^  def __init__(self, aMessageType):$/;"	m	class:FixedHeaders
__init__	test/MQTTV311.py	/^  def __init__(self, buffer = None):$/;"	m	class:Connects
__init__	test/MQTTV311.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False):$/;"	m	class:Disconnects
__init__	test/MQTTV311.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False):$/;"	m	class:Pingreqs
__init__	test/MQTTV311.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False):$/;"	m	class:Pingresps
__init__	test/MQTTV311.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False, MsgId=0):$/;"	m	class:Pubacks
__init__	test/MQTTV311.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False, MsgId=0):$/;"	m	class:Pubcomps
__init__	test/MQTTV311.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False, MsgId=0):$/;"	m	class:Pubrecs
__init__	test/MQTTV311.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False, MsgId=0):$/;"	m	class:Unsubacks
__init__	test/MQTTV311.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False, MsgId=0, Data=[]):$/;"	m	class:Subacks
__init__	test/MQTTV311.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False, MsgId=0, TopicName="", Payload=b""):$/;"	m	class:Publishes
__init__	test/MQTTV311.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False, ReturnCode=0):$/;"	m	class:Connacks
__init__	test/MQTTV311.py	/^  def __init__(self, buffer=None, DUP=False, QoS=1, Retain=False, MsgId=0):$/;"	m	class:Pubrels
__init__	test/MQTTV311.py	/^  def __init__(self, buffer=None, DUP=False, QoS=1, Retain=False, MsgId=0, Data=[]):$/;"	m	class:Subscribes
__init__	test/MQTTV311.py	/^  def __init__(self, buffer=None, DUP=False, QoS=1, Retain=False, MsgId=0, Data=[]):$/;"	m	class:Unsubscribes
__init__	test/MQTTV3112.py	/^  def __init__(self, aMessageType):$/;"	m	class:FixedHeaders
__init__	test/MQTTV3112.py	/^  def __init__(self, buffer = None):$/;"	m	class:Connects
__init__	test/MQTTV3112.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False):$/;"	m	class:Disconnects
__init__	test/MQTTV3112.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False):$/;"	m	class:Pingreqs
__init__	test/MQTTV3112.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False):$/;"	m	class:Pingresps
__init__	test/MQTTV3112.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False, MsgId=0):$/;"	m	class:Pubacks
__init__	test/MQTTV3112.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False, MsgId=0):$/;"	m	class:Pubcomps
__init__	test/MQTTV3112.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False, MsgId=0):$/;"	m	class:Pubrecs
__init__	test/MQTTV3112.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False, MsgId=0):$/;"	m	class:Unsubacks
__init__	test/MQTTV3112.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False, MsgId=0, Data=[]):$/;"	m	class:Subacks
__init__	test/MQTTV3112.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False, MsgId=0, TopicName="", Payload=b""):$/;"	m	class:Publishes
__init__	test/MQTTV3112.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, Retain=False, ReturnCode=0):$/;"	m	class:Connacks
__init__	test/MQTTV3112.py	/^  def __init__(self, buffer=None, DUP=False, QoS=1, Retain=False, MsgId=0):$/;"	m	class:Pubrels
__init__	test/MQTTV3112.py	/^  def __init__(self, buffer=None, DUP=False, QoS=1, Retain=False, MsgId=0, Data=[]):$/;"	m	class:Subscribes
__init__	test/MQTTV3112.py	/^  def __init__(self, buffer=None, DUP=False, QoS=1, Retain=False, MsgId=0, Data=[]):$/;"	m	class:Unsubscribes
__init__	test/MQTTV5.py	/^  def __init__(self, QoS=0, noLocal=False, retainAsPublished=False, retainHandling=0):$/;"	m	class:SubscribeOptions
__init__	test/MQTTV5.py	/^  def __init__(self, aPacketType):$/;"	m	class:FixedHeaders
__init__	test/MQTTV5.py	/^  def __init__(self, ackType, buffer, DUP, QoS, RETAIN, packetId):$/;"	m	class:Acks
__init__	test/MQTTV5.py	/^  def __init__(self, buffer = None):$/;"	m	class:Connects
__init__	test/MQTTV5.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, RETAIN=False):$/;"	m	class:Pingreqs
__init__	test/MQTTV5.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, RETAIN=False):$/;"	m	class:Pingresps
__init__	test/MQTTV5.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, RETAIN=False, MsgId=1, TopicName="", Payload=b""):$/;"	m	class:Publishes
__init__	test/MQTTV5.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, RETAIN=False, PacketId=1):$/;"	m	class:Pubacks
__init__	test/MQTTV5.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, RETAIN=False, PacketId=1):$/;"	m	class:Pubcomps
__init__	test/MQTTV5.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, RETAIN=False, PacketId=1):$/;"	m	class:Pubrecs
__init__	test/MQTTV5.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, RETAIN=False, PacketId=1, reasonCodes=[]):$/;"	m	class:Subacks
__init__	test/MQTTV5.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, RETAIN=False, PacketId=1, reasonCodes=[]):$/;"	m	class:Unsubacks
__init__	test/MQTTV5.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, RETAIN=False, ReasonCode="Success"):$/;"	m	class:Connacks
__init__	test/MQTTV5.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, RETAIN=False,$/;"	m	class:Auths
__init__	test/MQTTV5.py	/^  def __init__(self, buffer=None, DUP=False, QoS=0, RETAIN=False,$/;"	m	class:Disconnects
__init__	test/MQTTV5.py	/^  def __init__(self, buffer=None, DUP=False, QoS=1, RETAIN=False, MsgId=1, Data=[]):$/;"	m	class:Subscribes
__init__	test/MQTTV5.py	/^  def __init__(self, buffer=None, DUP=False, QoS=1, RETAIN=False, PacketId=1):$/;"	m	class:Pubrels
__init__	test/MQTTV5.py	/^  def __init__(self, buffer=None, DUP=False, QoS=1, RETAIN=False, PacketId=1, TopicFilters=[]):$/;"	m	class:Unsubscribes
__init__	test/MQTTV5.py	/^  def __init__(self, packetType):$/;"	m	class:Properties
__init__	test/MQTTV5.py	/^  def __init__(self, packetType, aName="Success", identifier=-1):$/;"	m	class:ReasonCodes
__init__	test/MQTTV5.py	/^  def __init__(self, packetType, buffer, DUP, QoS, RETAIN, PacketId, reasonCodes):$/;"	m	class:UnsubSubacks
__init__	test/mqttsas.py	/^    def __init__(self, socket):$/;"	m	class:BufferedSockets
__repr__	test/MQTTV3112.py	/^  def __repr__(self):$/;"	m	class:Connacks	file:
__repr__	test/MQTTV3112.py	/^  def __repr__(self):$/;"	m	class:Connects	file:
__repr__	test/MQTTV3112.py	/^  def __repr__(self):$/;"	m	class:Disconnects	file:
__repr__	test/MQTTV3112.py	/^  def __repr__(self):$/;"	m	class:Packets	file:
__repr__	test/MQTTV3112.py	/^  def __repr__(self):$/;"	m	class:Pingreqs	file:
__repr__	test/MQTTV3112.py	/^  def __repr__(self):$/;"	m	class:Pingresps	file:
__repr__	test/MQTTV3112.py	/^  def __repr__(self):$/;"	m	class:Pubacks	file:
__repr__	test/MQTTV3112.py	/^  def __repr__(self):$/;"	m	class:Pubcomps	file:
__repr__	test/MQTTV3112.py	/^  def __repr__(self):$/;"	m	class:Publishes	file:
__repr__	test/MQTTV3112.py	/^  def __repr__(self):$/;"	m	class:Pubrecs	file:
__repr__	test/MQTTV3112.py	/^  def __repr__(self):$/;"	m	class:Pubrels	file:
__repr__	test/MQTTV3112.py	/^  def __repr__(self):$/;"	m	class:Subacks	file:
__repr__	test/MQTTV3112.py	/^  def __repr__(self):$/;"	m	class:Subscribes	file:
__repr__	test/MQTTV3112.py	/^  def __repr__(self):$/;"	m	class:Unsubacks	file:
__repr__	test/MQTTV3112.py	/^  def __repr__(self):$/;"	m	class:Unsubscribes	file:
__setattr__	test/MQTTV5.py	/^  def __setattr__(self, name, value):$/;"	m	class:Packets	file:
__setattr__	test/MQTTV5.py	/^  def __setattr__(self, name, value):$/;"	m	class:Properties	file:
__setattr__	test/MQTTV5.py	/^  def __setattr__(self, name, value):$/;"	m	class:SubscribeOptions	file:
__str__	test/MQTTV311.py	/^  def __str__(self):$/;"	m	class:Connacks	file:
__str__	test/MQTTV311.py	/^  def __str__(self):$/;"	m	class:Connects	file:
__str__	test/MQTTV311.py	/^  def __str__(self):$/;"	m	class:Disconnects	file:
__str__	test/MQTTV311.py	/^  def __str__(self):$/;"	m	class:Packets	file:
__str__	test/MQTTV311.py	/^  def __str__(self):$/;"	m	class:Pingreqs	file:
__str__	test/MQTTV311.py	/^  def __str__(self):$/;"	m	class:Pingresps	file:
__str__	test/MQTTV311.py	/^  def __str__(self):$/;"	m	class:Pubacks	file:
__str__	test/MQTTV311.py	/^  def __str__(self):$/;"	m	class:Pubcomps	file:
__str__	test/MQTTV311.py	/^  def __str__(self):$/;"	m	class:Publishes	file:
__str__	test/MQTTV311.py	/^  def __str__(self):$/;"	m	class:Pubrecs	file:
__str__	test/MQTTV311.py	/^  def __str__(self):$/;"	m	class:Pubrels	file:
__str__	test/MQTTV311.py	/^  def __str__(self):$/;"	m	class:Subacks	file:
__str__	test/MQTTV311.py	/^  def __str__(self):$/;"	m	class:Subscribes	file:
__str__	test/MQTTV311.py	/^  def __str__(self):$/;"	m	class:Unsubacks	file:
__str__	test/MQTTV311.py	/^  def __str__(self):$/;"	m	class:Unsubscribes	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:Acks	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:Auths	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:Connacks	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:Connects	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:Disconnects	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:FixedHeaders	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:Packets	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:Pingreqs	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:Pingresps	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:Properties	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:Publishes	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:ReasonCodes	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:SubscribeOptions	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:Subscribes	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:UnsubSubacks	file:
__str__	test/MQTTV5.py	/^  def __str__(self):$/;"	m	class:Unsubscribes	file:
_unlink	src/Log.c	59;"	d	file:
after	test/MQTTV311.py	/^    after = str(unpackPacket(packet().pack()))$/;"	v
after	test/MQTTV3112.py	/^    after = str(unpackPacket(packet().pack()))$/;"	v
all	src/MQTTPacket.h	/^		unsigned char all;	\/**< all connack flags *\/$/;"	m	union:__anon39::__anon40
all	src/MQTTPacket.h	/^		unsigned char all;	\/**< all connect flags *\/$/;"	m	union:__anon35::__anon36
allowDisconnectedSendAtAnyTime	src/MQTTAsync.h	/^	int allowDisconnectedSendAtAnyTime;$/;"	m	struct:__anon88
allow_duplicates	src/Tree.h	/^	unsigned int allow_duplicates : 1; \/**< switch to allow duplicate entries *\/$/;"	m	struct:__anon54
alt	src/MQTTAsync.h	/^	} alt;$/;"	m	struct:__anon78	typeref:union:__anon78::__anon79
alt	src/MQTTAsync.h	/^	} alt;$/;"	m	struct:__anon82	typeref:union:__anon82::__anon83
anon_connection	test/test3.c	/^	char anon_connection[100];$/;"	m	struct:Options	file:
anon_connection	test/test5.c	/^	char anon_connection[100];$/;"	m	struct:Options	file:
app_clearerr	test/openssl/applink.c	/^static void app_clearerr(FILE *fp)$/;"	f	file:
app_feof	test/openssl/applink.c	/^static int app_feof(FILE *fp)$/;"	f	file:
app_ferror	test/openssl/applink.c	/^static int app_ferror(FILE *fp)$/;"	f	file:
app_fileno	test/openssl/applink.c	/^static int app_fileno(FILE *fp)$/;"	f	file:
app_fsetmod	test/openssl/applink.c	/^static int app_fsetmod(FILE *fp, char mod)$/;"	f	file:
app_stderr	test/openssl/applink.c	/^static void *app_stderr(void)$/;"	f	file:
app_stdin	test/openssl/applink.c	/^static void *app_stdin(void)$/;"	f	file:
app_stdout	test/openssl/applink.c	/^static void *app_stdout(void)$/;"	f	file:
array	src/MQTTProperties.h	/^  MQTTProperty *array;  \/**< array of properties *\/$/;"	m	struct:MQTTProperties
arrivedCount	test/test6.c	/^int arrivedCount = 0;$/;"	v
assert	src/MQTTTime.c	90;"	d	file:
assert	src/Thread.c	495;"	d	file:
assert	src/Thread.c	539;"	d	file:
assert	test/sync_client_test.c	263;"	d	file:
assert	test/test1.c	211;"	d	file:
assert	test/test1.c	232;"	d	file:
assert	test/test10.c	230;"	d	file:
assert	test/test10.c	251;"	d	file:
assert	test/test11.c	188;"	d	file:
assert	test/test11.c	208;"	d	file:
assert	test/test15.c	217;"	d	file:
assert	test/test15.c	238;"	d	file:
assert	test/test2.c	202;"	d	file:
assert	test/test2.c	223;"	d	file:
assert	test/test3.c	330;"	d	file:
assert	test/test3.c	351;"	d	file:
assert	test/test4.c	187;"	d	file:
assert	test/test4.c	207;"	d	file:
assert	test/test45.c	199;"	d	file:
assert	test/test45.c	219;"	d	file:
assert	test/test5.c	294;"	d	file:
assert	test/test5.c	314;"	d	file:
assert	test/test6.c	244;"	d	file:
assert	test/test8.c	163;"	d	file:
assert	test/test8.c	187;"	d	file:
assert	test/test9.c	171;"	d	file:
assert	test/test9.c	191;"	d	file:
assert	test/test95.c	172;"	d	file:
assert	test/test95.c	192;"	d	file:
assert	test/test_connect_destroy.c	207;"	d	file:
assert	test/test_connect_destroy.c	228;"	d	file:
assert	test/test_issue373.c	143;"	d	file:
assert	test/test_mqtt4async.c	204;"	d	file:
assert	test/test_mqtt4async.c	225;"	d	file:
assert	test/test_mqtt4sync.c	204;"	d	file:
assert	test/test_mqtt4sync.c	225;"	d	file:
assert	test/test_sync_session_present.c	255;"	d	file:
assert	test/test_sync_session_present.c	276;"	d	file:
assert	test/thread.c	151;"	d	file:
assert	test/thread.c	171;"	d	file:
assert1	src/Thread.c	540;"	d	file:
assert1	test/sync_client_test.c	264;"	d	file:
assert1	test/test1.c	233;"	d	file:
assert1	test/test10.c	252;"	d	file:
assert1	test/test11.c	209;"	d	file:
assert1	test/test15.c	239;"	d	file:
assert1	test/test2.c	224;"	d	file:
assert1	test/test3.c	352;"	d	file:
assert1	test/test4.c	208;"	d	file:
assert1	test/test45.c	220;"	d	file:
assert1	test/test5.c	315;"	d	file:
assert1	test/test8.c	188;"	d	file:
assert1	test/test9.c	192;"	d	file:
assert1	test/test95.c	193;"	d	file:
assert1	test/test_connect_destroy.c	229;"	d	file:
assert1	test/test_mqtt4async.c	226;"	d	file:
assert1	test/test_mqtt4sync.c	226;"	d	file:
assert1	test/test_sync_session_present.c	277;"	d	file:
assert1	test/thread.c	172;"	d	file:
assert3PendingTokens	test/test9.c	/^void assert3PendingTokens(MQTTAsync c)$/;"	f
assert3PendingTokens	test/test95.c	/^void assert3PendingTokens(MQTTAsync c)$/;"	f
asyncTestMessageArrived	test/test5.c	/^int asyncTestMessageArrived(void* context, char* topicName, int topicLen,$/;"	f
asyncTestOnConnect	test/test5.c	/^void asyncTestOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
asyncTestOnDeliveryComplete	test/test5.c	/^void asyncTestOnDeliveryComplete(void* context, MQTTAsync_token token)$/;"	f
asyncTestOnDisconnect	test/test5.c	/^void asyncTestOnDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
asyncTestOnSend	test/test5.c	/^void asyncTestOnSend(void* context, MQTTAsync_successData* response)$/;"	f
asyncTestOnSubscribe	test/test5.c	/^void asyncTestOnSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
asyncTestOnSubscribeFailure	test/test5.c	/^void asyncTestOnSubscribeFailure(void* context, MQTTAsync_failureData* response)$/;"	f
asyncTestOnUnsubscribe	test/test5.c	/^void asyncTestOnUnsubscribe(void* context, MQTTAsync_successData* response)$/;"	f
automaticReconnect	src/MQTTAsync.c	/^	int automaticReconnect;$/;"	m	struct:MQTTAsync_struct	file:
automaticReconnect	src/MQTTAsync.h	/^	int automaticReconnect;$/;"	m	struct:__anon93
b64_data_t	src/Base64.h	/^typedef unsigned char b64_data_t;$/;"	t
b64_size_t	src/Base64.h	/^typedef unsigned int b64_size_t;$/;"	t
basic_test	test/sync_client_test.c	/^int basic_test(void)$/;"	f
be16toh	src/WebSocket.c	52;"	d	file:
be16toh	src/WebSocket.c	68;"	d	file:
be16toh	src/WebSocket.c	75;"	d	file:
be32toh	src/SHA1.c	61;"	d	file:
be32toh	src/WebSocket.c	53;"	d	file:
be32toh	src/WebSocket.c	69;"	d	file:
be32toh	src/WebSocket.c	76;"	d	file:
be64toh	src/WebSocket.c	54;"	d	file:
be64toh	src/WebSocket.c	70;"	d	file:
be64toh	src/WebSocket.c	77;"	d	file:
before	test/MQTTV311.py	/^    before = str(packet())$/;"	v
before	test/MQTTV3112.py	/^    before = str(packet())   $/;"	v
binarypwd	src/MQTTAsync.h	/^	} binarypwd;$/;"	m	struct:__anon93	typeref:struct:__anon93::__anon94
binarypwd	src/MQTTClient.h	/^	} binarypwd;$/;"	m	struct:__anon70	typeref:struct:__anon70::__anon72
bindir	Makefile	/^bindir = $(exec_prefix)\/bin$/;"	m
bindir	test/python/controlVMnetworkstate.py	/^bindir='\/usr\/bin'$/;"	v
bits	src/MQTTPacket.h	/^		} bits;$/;"	m	union:__anon35::__anon36	typeref:struct:__anon35::__anon36::__anon37
bits	src/MQTTPacket.h	/^		} bits;$/;"	m	union:__anon35::__anon36	typeref:struct:__anon35::__anon36::__anon38
bits	src/MQTTPacket.h	/^		} bits;$/;"	m	union:__anon39::__anon40	typeref:struct:__anon39::__anon40::__anon41
bits	src/MQTTPacket.h	/^		} bits;$/;"	m	union:__anon39::__anon40	typeref:struct:__anon39::__anon40::__anon42
bits	src/MQTTPacket.h	/^	} bits;$/;"	m	union:__anon32	typeref:struct:__anon32::__anon33
bits	src/MQTTPacket.h	/^	} bits;$/;"	m	union:__anon32	typeref:struct:__anon32::__anon34
blddir	Makefile	/^  blddir = build\/output$/;"	m
blddir_work	Makefile	/^  blddir_work = build$/;"	m
blocking_found	test/test10.c	/^static int blocking_found = 0;$/;"	v	file:
blocking_found	test/test11.c	/^	int blocking_found;$/;"	m	struct:__anon122	file:
bool	src/MQTTPacket.h	/^typedef unsigned int bool;$/;"	t
bstate	src/MQTTAsync.c	/^ClientStates* bstate = &ClientState;$/;"	v
bstate	src/MQTTClient.c	/^ClientStates* bstate = &ClientState;$/;"	v
buf	src/SocketBuffer.h	/^	char* buf;$/;"	m	struct:__anon29
bufchar	src/MQTTPacket.c	/^int bufchar(char* c, int count)$/;"	f
buffer	src/SHA1.h	/^		uint8_t buffer[64];$/;"	m	union:SHA_CTX_S::__anon62
buffers	src/Socket.h	/^	char** buffers;    \/**> array of byte buffers *\/$/;"	m	struct:__anon23
buflen	src/SocketBuffer.h	/^	size_t buflen, 			\/**< total length of the buffer *\/$/;"	m	struct:__anon29
buflens	src/Socket.h	/^	size_t* buflens;   \/**> array of lengths of buffers *\/$/;"	m	struct:__anon23
bufptr	src/MQTTPacket.c	/^static char* bufptr;$/;"	v	file:
build	test_package/conanfile.py	/^    def build(self):$/;"	m	class:TestPackageConan
build.level	Makefile	/^	build.level = $(shell date)$/;"	m
build_sample_util	android/Android.mk	/^define build_sample_util$/;"	m
byte	src/MQTTPacket.h	/^	\/*unsigned*\/ char byte;	\/**< the whole byte *\/$/;"	m	union:__anon32
byte	src/MQTTProperties.h	/^    unsigned char byte;       \/**< holds the value of a byte property type *\/$/;"	m	union:__anon49::__anon50
bytes	src/SocketBuffer.h	/^	size_t bytes;$/;"	m	struct:__anon30
bytes	src/utf-8.c	/^	} bytes[4];   \/**< up to 4 bytes can be used per character *\/$/;"	m	struct:__anon12	typeref:struct:__anon12::__anon13	file:
c	src/MQTTAsync.c	/^	Clients* c;$/;"	m	struct:MQTTAsync_struct	file:
c	src/MQTTClient.c	/^	Clients* c;$/;"	m	struct:__anon28	file:
c	test/python/mqttasync_module.c	/^	MQTTAsync c;$/;"	m	struct:__anon114	file:
c	test/python/mqttasync_module.c	/^	MQTTAsync c;$/;"	m	struct:__anon115	file:
c	test/python/mqttasync_module.c	/^	MQTTAsync c;$/;"	m	struct:__anon116	file:
c	test/python/mqttclient_module.c	/^	MQTTClient c;$/;"	m	struct:__anon117	file:
c	test/sync_client_test.c	/^	Clients* c;$/;"	m	struct:__anon104	file:
c	test/test10.c	/^MQTTClient c, d;$/;"	v
c	test/test2.c	/^	MQTTClient* c;$/;"	m	struct:thread_parms	file:
c	test/test3.c	/^	Clients* c;$/;"	m	struct:__anon129	file:
c	test/test4.c	/^	MQTTAsync c;$/;"	m	struct:__anon100	file:
c	test/test4.c	/^	MQTTAsync c;$/;"	m	struct:__anon99	file:
c	test/test45.c	/^	MQTTAsync c;$/;"	m	struct:__anon112	file:
c	test/test45.c	/^	MQTTAsync c;$/;"	m	struct:__anon113	file:
c	test/test8.c	/^	MQTTAsync c;$/;"	m	struct:__anon118	file:
c	test/test_connect_destroy.c	/^	MQTTClient* c;$/;"	m	struct:thread_parms	file:
cafile	src/samples/pubsub_opts.h	/^	char* cafile;$/;"	m	struct:pubsub_opts
call_disconnected	src/MQTTClient.c	/^static thread_return_type WINAPI call_disconnected(void* context)$/;"	f	file:
call_ssl_psk_cb	src/SSLSocket.c	/^static unsigned int call_ssl_psk_cb(SSL *ssl, const char *hint, char *identity, unsigned int max_identity_len, unsigned char *psk, unsigned int max_psk_len)$/;"	f	file:
callbacks	test/python/mqttasync_module.c	/^static List* callbacks = NULL;$/;"	v	file:
callbacks	test/python/mqttclient_module.c	/^static List* callbacks = NULL;$/;"	v	file:
callstack	src/StackTrace.c	/^	stackEntry callstack[MAX_STACK_DEPTH];$/;"	m	struct:__anon22	file:
capath	src/samples/pubsub_opts.h	/^	char* capath;$/;"	m	struct:pubsub_opts
capath	test/test5.c	/^	char* capath;$/;"	m	struct:Options	file:
cert	src/samples/pubsub_opts.h	/^	char* cert;$/;"	m	struct:pubsub_opts
cfinish	src/samples/paho_c_pub.c	/^void cfinish(int sig)$/;"	f
cfinish	src/samples/paho_c_sub.c	/^void cfinish(int sig)$/;"	f
cfinish	src/samples/paho_cs_pub.c	/^void cfinish(int sig)$/;"	f
cfinish	src/samples/paho_cs_sub.c	/^void cfinish(int sig)$/;"	f
check	src/Tree.c	/^int check(Tree *t)$/;"	f
checkEyecatchers	src/Heap.c	/^static void checkEyecatchers(char* file, int line, void* p, size_t size)$/;"	f	file:
child	src/Tree.h	/^					  *child[2]; \/**< pointers to child tree nodes 0 = left, 1 = right *\/$/;"	m	struct:NodeStruct	typeref:struct:NodeStruct::
ciphers	src/samples/pubsub_opts.h	/^	char* ciphers;$/;"	m	struct:pubsub_opts
ckeytmp	test/test3.c	/^char ckeytmp[1024];$/;"	v
cl	src/MQTTAsync.c	/^	MQTTAsync_connectionLost* cl;$/;"	m	struct:MQTTAsync_struct	file:
cl	src/MQTTClient.c	/^	MQTTClient_connectionLost* cl;$/;"	m	struct:__anon28	file:
cl	test/python/mqttasync_module.c	/^	PyObject *cl, *ma, *dc;$/;"	m	struct:__anon114	file:
cl	test/python/mqttclient_module.c	/^	PyObject *cl, *ma, *dc;$/;"	m	struct:__anon117	file:
cl	test/sync_client_test.c	/^	MQTTClient_connectionLost* cl;$/;"	m	struct:__anon104	file:
cl	test/test3.c	/^	MQTTClient_connectionLost* cl;$/;"	m	struct:__anon129	file:
clContext	src/MQTTAsync.c	/^	void* clContext; \/* the context to be associated with the conn lost callback*\/$/;"	m	struct:MQTTAsync_struct	file:
classNames	test/MQTTV311.py	/^"Pingreqs", "Pingresps", "Disconnects"]$/;"	v
classNames	test/MQTTV3112.py	/^"Pingreqs", "Pingresps", "Disconnects"]$/;"	v
classes	test/MQTTV311.py	/^classes = [None, Connects, Connacks, Publishes, Pubacks, Pubrecs,$/;"	v
classes	test/MQTTV3112.py	/^classes = [None, Connects, Connacks, Publishes, Pubacks, Pubrecs,$/;"	v
classes	test/MQTTV5.py	/^classes = [Connects, Connacks, Publishes, Pubacks, Pubrecs,$/;"	v
cleansession	src/Clients.h	/^	unsigned int cleansession : 1;	\/**< MQTT V3 clean session flag *\/$/;"	m	struct:__anon19
cleansession	src/MQTTAsync.h	/^	int cleansession;$/;"	m	struct:__anon93
cleansession	src/MQTTClient.h	/^	int cleansession;$/;"	m	struct:__anon70
cleansession	test/sync_client_test.c	/^	unsigned int cleansession : 1;	\/**< MQTT clean session flag *\/$/;"	m	struct:__anon103	file:
cleansession	test/test3.c	/^	unsigned int cleansession : 1;			\/**< MQTT clean session flag *\/$/;"	m	struct:__anon128	file:
cleanstart	src/Clients.h	/^	unsigned int cleanstart : 1;		\/**< MQTT V5 clean start flag *\/$/;"	m	struct:__anon19
cleanstart	src/MQTTAsync.h	/^	int cleanstart;$/;"	m	struct:__anon93
cleanstart	src/MQTTClient.h	/^	int cleanstart;$/;"	m	struct:__anon70
cleanstart	src/MQTTPacket.h	/^			bool cleanstart : 1;	\/**< cleansession flag *\/$/;"	m	struct:__anon35::__anon36::__anon37
cleanstart	src/MQTTPacket.h	/^			bool cleanstart : 1;	\/**< cleansession flag *\/$/;"	m	struct:__anon35::__anon36::__anon38
cleanup	test/sync_client_test.c	/^void cleanup(void)$/;"	f
clear	test/MQTTV5.py	/^  def clear(self):$/;"	m	class:Properties
clearMessages	test/sync_client_test.c	/^void clearMessages(void)$/;"	f
clearUnix	src/MQTTPersistenceDefault.c	/^int clearUnix(char *dirname)$/;"	f
clearWin32	src/MQTTPersistenceDefault.c	/^int clearWin32(char *dirname)$/;"	f
client	src/MQTTAsync.c	/^	MQTTAsyncs* client;$/;"	m	struct:__anon11	file:
client	test/test5.c	/^	MQTTAsync client;$/;"	m	struct:__anon110	file:
client	test/test6.c	/^MQTTAsync client;$/;"	v
clientCompare	test/python/mqttasync_module.c	/^int clientCompare(void* a, void* b)$/;"	f
clientCompare	test/python/mqttclient_module.c	/^int clientCompare(void* a, void* b)$/;"	f
clientCompareConnectCommand	src/MQTTAsync.c	/^static int clientCompareConnectCommand(void* a, void* b)$/;"	f	file:
clientID	src/Clients.h	/^	char* clientID;					      \/**< the string id of the client *\/$/;"	m	struct:__anon19
clientID	src/MQTTPacket.h	/^		*clientID,	\/**< string client id *\/$/;"	m	struct:__anon35
clientID	test/sync_client_test.c	/^	char* clientID;					\/**< the string id of the client *\/$/;"	m	struct:__anon103	file:
clientID	test/test3.c	/^	char* clientID;					\/**< the string id of the client *\/$/;"	m	struct:__anon128	file:
clientIDCompare	src/Clients.c	/^int clientIDCompare(void* a, void* b)$/;"	f
clientSockCompare	src/MQTTAsync.c	/^static int clientSockCompare(void* a, void* b)$/;"	f	file:
clientSockCompare	src/MQTTClient.c	/^static int clientSockCompare(void* a, void* b)$/;"	f	file:
clientSocketCompare	src/Clients.c	/^int clientSocketCompare(void* a, void* b)$/;"	f
clientStructCompare	src/MQTTAsync.c	/^static int clientStructCompare(void* a, void* b)$/;"	f	file:
client_cleaned	test/test6.c	/^int client_cleaned = 0;$/;"	v
client_data	test/test4.c	/^} client_data;$/;"	t	typeref:struct:__anon99	file:
client_data	test/test45.c	/^} client_data;$/;"	t	typeref:struct:__anon112	file:
client_data	test/test8.c	/^} client_data;$/;"	t	typeref:struct:__anon118	file:
client_id	test/test_sync_session_present.c	/^    char* client_id;$/;"	m	struct:Options	file:
client_key_file	test/test3.c	/^	char* client_key_file;$/;"	m	struct:Options	file:
client_key_file	test/test5.c	/^	char* client_key_file;$/;"	m	struct:Options	file:
client_key_pass	test/test3.c	/^	char* client_key_pass;$/;"	m	struct:Options	file:
client_key_pass	test/test5.c	/^	char* client_key_pass;$/;"	m	struct:Options	file:
client_onCleaned	test/test6.c	/^void client_onCleaned(void* context, MQTTAsync_successData* response)$/;"	f
client_onCleanedDisconnected	test/test6.c	/^void client_onCleanedDisconnected(void* context, MQTTAsync_successData* response)$/;"	f
client_onConnect	test/test6.c	/^void client_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
client_onFailure	test/test6.c	/^void client_onFailure(void* context, MQTTAsync_failureData* response)$/;"	f
client_onReconnect	test/test6.c	/^void client_onReconnect(void* context, MQTTAsync_successData* response)$/;"	f
client_onReconnectFailure	test/test6.c	/^void client_onReconnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
client_onSubscribe	test/test6.c	/^void client_onSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
client_private_key_file	test/test3.c	/^	char* client_private_key_file;$/;"	m	struct:Options	file:
client_private_key_file	test/test5.c	/^	char* client_private_key_file;$/;"	m	struct:Options	file:
client_subscribed	test/test6.c	/^static int client_subscribed = 0;$/;"	v	file:
client_timestamp_eye	src/MQTTAsync.c	/^const char *client_timestamp_eye = "MQTTAsyncV3_Timestamp " BUILD_TIMESTAMP;$/;"	v
client_timestamp_eye	src/MQTTClient.c	/^const char *client_timestamp_eye = "MQTTClientV3_Timestamp " BUILD_TIMESTAMP;$/;"	v
client_version_eye	src/MQTTAsync.c	/^const char *client_version_eye = "MQTTAsyncV3_Version " CLIENT_VERSION;$/;"	v
client_version_eye	src/MQTTClient.c	/^const char *client_version_eye = "MQTTClientV3_Version " CLIENT_VERSION;$/;"	v
clientid	src/samples/pubsub_opts.h	/^	char* clientid;$/;"	m	struct:pubsub_opts
clientid	test/python/test1.py	/^clientid = "myclientid"$/;"	v
clientid	test/python/test2.py	/^clientid = "myclientid"$/;"	v
clientid	test/python/test_offline.py	/^clientid = "myclientid"$/;"	v
clientid	test/test4.c	/^	char clientid[24];$/;"	m	struct:__anon99	file:
clientid	test/test45.c	/^	char clientid[24];$/;"	m	struct:__anon112	file:
clientid	test/test5.c	/^	char clientid[24];$/;"	m	struct:__anon110	file:
clientid	test/test6.c	/^	char* clientid;$/;"	m	struct:__anon111	file:
clientid	test/test8.c	/^	char clientid[24];$/;"	m	struct:__anon118	file:
clientid1	test/sync_client_test.c	/^	char* clientid1;$/;"	m	struct:Options	file:
clientid2	test/sync_client_test.c	/^	char* clientid2;$/;"	m	struct:Options	file:
clients	src/Clients.h	/^	List* clients;$/;"	m	struct:__anon20
clients	test/python/test1.py	/^clients = []$/;"	v
clients	test/python/test2.py	/^clients = []$/;"	v
clients	test/python/test_offline.py	/^clients = []$/;"	v
clientsds	src/Socket.h	/^	List* clientsds; \/**< list of client socket descriptors *\/$/;"	m	struct:__anon24
close	test/mqttsas.py	/^    def close(self):$/;"	m	class:BufferedSockets
cmdMessageIDCompare	src/MQTTAsync.c	/^static int cmdMessageIDCompare(void* a, void* b)$/;"	f	file:
co	test/python/mqttasync_module.c	/^	PyObject *co;$/;"	m	struct:__anon115	file:
code	src/MQTTAsync.h	/^	int code;$/;"	m	struct:__anon76
code	src/MQTTAsync.h	/^	int code;$/;"	m	struct:__anon77
code	src/SSLSocket.c	/^	int code;$/;"	m	struct:__anon31	file:
command	src/MQTTAsync.c	/^	MQTTAsync_command command;$/;"	m	struct:__anon11	file:
command_seqno	src/MQTTAsync.c	/^	unsigned int command_seqno;$/;"	m	struct:MQTTAsync_struct	file:
commands	src/MQTTAsync.c	/^static List* commands = NULL;$/;"	v	file:
compare	src/Tree.h	/^		int (*compare)(void*, void*, int); \/**< comparison function *\/$/;"	m	struct:__anon54::__anon55
cond	src/Thread.h	/^	typedef struct { pthread_cond_t cond; pthread_mutex_t mutex; } cond_type_struct;$/;"	m	struct:__anon2
cond_secondary	src/Thread.c	/^thread_return_type cond_secondary(void* n)$/;"	f
cond_secondary	test/thread.c	/^thread_return_type cond_secondary(void* n)$/;"	f
cond_test	src/Thread.c	/^int cond_test()$/;"	f
cond_type	src/Thread.h	/^	typedef cond_type_struct *cond_type;$/;"	t
cond_type	src/Thread.h	35;"	d
cond_type_struct	src/Thread.h	/^	typedef struct { pthread_cond_t cond; pthread_mutex_t mutex; } cond_type_struct;$/;"	t	typeref:struct:__anon2
conn	src/MQTTAsync.c	/^		} conn;$/;"	m	union:__anon4::__anon5	typeref:struct:__anon4::__anon5::__anon10	file:
conn_opts	src/samples/paho_c_sub.c	/^MQTTAsync_connectOptions conn_opts = MQTTAsync_connectOptions_initializer;$/;"	v
conn_opts	test/test6.c	/^MQTTAsync_connectOptions conn_opts = MQTTAsync_connectOptions_initializer;$/;"	v
connack_sem	src/MQTTClient.c	/^	sem_type connack_sem;$/;"	m	struct:__anon28	file:
connack_sem	test/sync_client_test.c	/^	int connack_sem;$/;"	m	struct:__anon104	file:
connack_sem	test/test3.c	/^	int connack_sem;$/;"	m	struct:__anon129	file:
connect	src/MQTTAsync.c	/^	MQTTAsync_command connect;		\/* Connect operation properties *\/$/;"	m	struct:MQTTAsync_struct	file:
connect	src/MQTTAsync.h	/^		} connect;$/;"	m	union:__anon78::__anon79	typeref:struct:__anon78::__anon79::__anon81
connect	src/MQTTAsync.h	/^		} connect;$/;"	m	union:__anon82::__anon83	typeref:struct:__anon82::__anon83::__anon86
connectCnt	test/test_issue373.c	/^int connectCnt = 0;$/;"	v
connectOptionsVersion	test/test3.c	/^	int connectOptionsVersion;$/;"	m	struct:__anon128	file:
connectProperties	src/MQTTAsync.h	/^	MQTTProperties *connectProperties;$/;"	m	struct:__anon93
connectProps	src/MQTTAsync.c	/^	MQTTProperties* connectProps;$/;"	m	struct:MQTTAsync_struct	file:
connectTimeout	src/MQTTAsync.c	/^	int connectTimeout;$/;"	m	struct:MQTTAsync_struct	file:
connectTimeout	src/MQTTAsync.h	/^	int connectTimeout;$/;"	m	struct:__anon93
connectTimeout	src/MQTTClient.h	/^	int connectTimeout;$/;"	m	struct:__anon70
connect_mutex	src/MQTTClient.c	/^static mutex_type connect_mutex = &connect_mutex_store;$/;"	v	file:
connect_mutex	src/MQTTClient.c	/^static mutex_type connect_mutex = NULL;$/;"	v	file:
connect_mutex_store	src/MQTTClient.c	/^static pthread_mutex_t connect_mutex_store = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
connect_pending	src/Socket.h	/^	List* connect_pending; \/**< list of sockets for which a connect is pending *\/$/;"	m	struct:__anon24
connect_sem	src/MQTTClient.c	/^	sem_type connect_sem;$/;"	m	struct:__anon28	file:
connect_sem	test/sync_client_test.c	/^	int connect_sem;$/;"	m	struct:__anon104	file:
connect_sem	test/test3.c	/^	int connect_sem;$/;"	m	struct:__anon129	file:
connect_state	src/Clients.h	/^	signed int connect_state : 4;$/;"	m	struct:__anon19
connect_state	test/sync_client_test.c	/^	int connect_state : 4;$/;"	m	struct:__anon103	file:
connect_state	test/test3.c	/^	unsigned int connect_state : 2;$/;"	m	struct:__anon128	file:
connected	src/Clients.h	/^	unsigned int connected : 1;		\/**< whether it is currently connected *\/$/;"	m	struct:__anon19
connected	src/MQTTAsync.c	/^	MQTTAsync_connected* connected;$/;"	m	struct:MQTTAsync_struct	file:
connected	src/samples/paho_c_pub.c	/^static int connected = 0;$/;"	v	file:
connected	test/python/mqttasync_module.c	/^void connected(void* context, char* cause)$/;"	f
connected	test/python/test_offline.py	/^def connected(context, cause):$/;"	f
connected	test/sync_client_test.c	/^	unsigned int connected : 1;		\/**< whether it is currently connected *\/$/;"	m	struct:__anon103	file:
connected	test/test3.c	/^	unsigned int connected : 1;			\/**< whether it is currently connected *\/$/;"	m	struct:__anon128	file:
connected	test/test_issue373.c	/^int connected = 0;$/;"	v
connectedCompare	test/python/mqttasync_module.c	/^int connectedCompare(void* a, void* b)$/;"	f
connected_callbacks	test/python/mqttasync_module.c	/^static List* connected_callbacks = NULL;$/;"	v	file:
connected_context	src/MQTTAsync.c	/^	void* connected_context; \/* the context to be associated with the connected callback*\/$/;"	m	struct:MQTTAsync_struct	file:
connecting	test/test_issue373.c	/^int connecting = 0;$/;"	v
connection	src/samples/pubsub_opts.h	/^	char* connection;$/;"	m	struct:pubsub_opts
connection	test/sync_client_test.c	/^	char* connection;         \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test1.c	/^	char* connection;         \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test10.c	/^	char* connection;         \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test11.c	/^	char* connection;         \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test15.c	/^	char* connection;         \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test2.c	/^	char* connection;         \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test3.c	/^	char connection[100];$/;"	m	struct:Options	file:
connection	test/test4.c	/^	char* connection;         \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test45.c	/^	char* connection;         \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test5.c	/^	char connection[100]; \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test6.c	/^	char* connection;         \/**< connection to system under test. *\/$/;"	m	struct:__anon111	file:
connection	test/test8.c	/^	char* connection;         \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test9.c	/^	char* connection;            \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test95.c	/^	char* connection;            \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test_connect_destroy.c	/^	char* connection;         \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test_issue373.c	/^	char* connection;            \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test_mqtt4async.c	/^	char* connection;         \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test_mqtt4sync.c	/^	char* connection;         \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connection	test/test_sync_session_present.c	/^    char* connection;         \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
connectionLost	test/python/mqttasync_module.c	/^void connectionLost(void* context, char* cause)$/;"	f
connectionLost	test/python/mqttclient_module.c	/^void connectionLost(void* context, char* cause)$/;"	f
connectionLost	test/python/test1.py	/^def connectionLost(context, cause):$/;"	f
connectionLost	test/python/test2.py	/^def connectionLost(context, cause):$/;"	f
connectionLost	test/python/test_offline.py	/^def connectionLost(context, cause):$/;"	f
connectionLost	test/test6.c	/^void connectionLost(void* context, char* cause)$/;"	f
connectionLost_call	src/MQTTClient.c	/^static thread_return_type WINAPI connectionLost_call(void* context)$/;"	f	file:
connection_count	test/test6.c	/^	int connection_count;$/;"	m	struct:__anon111	file:
connection_lost	test/test6.c	/^int connection_lost = 0; \/* for use with the persistence option *\/$/;"	v
connections	test/test6.c	/^	char** connections;        \/**< HA connection list *\/$/;"	m	struct:__anon111	file:
connlost	src/samples/MQTTAsync_publish.c	/^void connlost(void *context, char *cause)$/;"	f
connlost	src/samples/MQTTAsync_subscribe.c	/^void connlost(void *context, char *cause)$/;"	f
connlost	src/samples/MQTTClient_publish_async.c	/^void connlost(void *context, char *cause)$/;"	f
connlost	src/samples/MQTTClient_subscribe.c	/^void connlost(void *context, char *cause)$/;"	f
connlost	test_package/test_package.c	/^void connlost(void *context, char *cause)$/;"	f
const	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
containskeyUnix	src/MQTTPersistenceDefault.c	/^int containskeyUnix(char *dirname, char *key)$/;"	f
containskeyWin32	src/MQTTPersistenceDefault.c	/^int containskeyWin32(char *dirname, char *key)$/;"	f
content	src/LinkedList.h	/^	void* content;					\/**< pointer to element content *\/$/;"	m	struct:ListElementStruct
content	src/Tree.h	/^	void* content;				 \/**< pointer to element content *\/$/;"	m	struct:NodeStruct
context	src/Clients.h	/^	void* context; \/* calling context - used when calling disconnect_internal *\/$/;"	m	struct:__anon19
context	src/MQTTAsync.c	/^	void* context;$/;"	m	struct:__anon4	file:
context	src/MQTTAsync.h	/^	void* context;$/;"	m	struct:MQTTAsync_responseOptions
context	src/MQTTAsync.h	/^	void* context;$/;"	m	struct:__anon93
context	src/MQTTAsync.h	/^	void* context;$/;"	m	struct:__anon95
context	src/MQTTClient.c	/^	void* context;$/;"	m	struct:__anon28	file:
context	src/MQTTClientPersistence.h	/^	void* context;$/;"	m	struct:__anon56
context	test/python/mqttasync_module.c	/^	PyObject *context;$/;"	m	struct:__anon114	file:
context	test/python/mqttasync_module.c	/^	PyObject *context;$/;"	m	struct:__anon115	file:
context	test/python/mqttasync_module.c	/^	PyObject *context;$/;"	m	struct:__anon116	file:
context	test/python/mqttclient_module.c	/^	PyObject *context;$/;"	m	struct:__anon117	file:
context	test/sync_client_test.c	/^	void* context;$/;"	m	struct:__anon104	file:
context	test/test3.c	/^	void* context;$/;"	m	struct:__anon129	file:
control_client	test/test6.c	/^MQTTAsync control_client;$/;"	v
control_connection	test/test6.c	/^	char* control_connection; \/**< MQTT control connection, for test sync *\/$/;"	m	struct:__anon111	file:
control_connectionLost	test/test6.c	/^void control_connectionLost(void* context, char* cause)$/;"	f
control_found	test/test6.c	/^int control_found = 0;$/;"	v
control_messageArrived	test/test6.c	/^int control_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* m)$/;"	f
control_onConnect	test/test6.c	/^void control_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
control_onFailure	test/test6.c	/^void control_onFailure(void* context, MQTTAsync_failureData* response)$/;"	f
control_onSubscribe	test/test6.c	/^void control_onSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
control_send	test/test6.c	/^int control_send(char* message)$/;"	f
control_subscribed	test/test6.c	/^static int control_subscribed = 0;$/;"	v	file:
control_topic	test/test6.c	/^	char* control_topic;$/;"	m	struct:__anon111	file:
control_wait	test/test6.c	/^int control_wait(char* message)$/;"	f
control_which	test/test6.c	/^int control_which(char* message1, char* message2)$/;"	f
controlvmnetworkstate	test/python/controlVMnetworkstate.py	/^def controlvmnetworkstate():$/;"	f
correlation_id	test/test10.c	/^	char* correlation_id;$/;"	m	struct:__anon107	file:
correlation_id	test/test11.c	/^	char* correlation_id;$/;"	m	struct:__anon125	file:
count	src/LinkedList.h	/^	int count;  \/**< no of items *\/$/;"	m	struct:__anon53
count	src/MQTTAsync.c	/^			int count;$/;"	m	struct:__anon4::__anon5::__anon6	file:
count	src/MQTTAsync.c	/^			int count;$/;"	m	struct:__anon4::__anon5::__anon7	file:
count	src/MQTTProperties.h	/^  int count;     \/**< number of property entries in the array *\/$/;"	m	struct:MQTTProperties
count	src/Socket.h	/^	int count;         \/**> number of buffers\/buflens\/frees *\/$/;"	m	struct:__anon23
count	src/SocketBuffer.h	/^	int socket, count;$/;"	m	struct:__anon30
count	src/Tree.h	/^		count;    \/**< no of items *\/$/;"	m	struct:__anon54
createOptions	src/MQTTAsync.c	/^	MQTTAsync_createOptions* createOptions;$/;"	m	struct:MQTTAsync_struct	file:
ctx	src/Clients.h	/^	SSL_CTX* ctx;$/;"	m	struct:__anon18
ctx	test/sync_client_test.c	/^	SSL_CTX* ctx;$/;"	m	struct:__anon102	file:
cur_clientsds	src/Socket.h	/^	ListElement* cur_clientsds; \/**< current client socket descriptor (iterator) *\/$/;"	m	struct:__anon24
cur_output	test/test1.c	/^char* cur_output = output;$/;"	v
cur_output	test/test10.c	/^char* cur_output = output;$/;"	v
cur_output	test/test11.c	/^char* cur_output = output;$/;"	v
cur_output	test/test15.c	/^char* cur_output = output;$/;"	v
cur_output	test/test2.c	/^char* cur_output = output;$/;"	v
cur_output	test/test3.c	/^char* cur_output = output;$/;"	v
cur_output	test/test4.c	/^char* cur_output = output;$/;"	v
cur_output	test/test45.c	/^char* cur_output = output;$/;"	v
cur_output	test/test5.c	/^char* cur_output = output;$/;"	v
cur_output	test/test9.c	/^char* cur_output = output;$/;"	v
cur_output	test/test95.c	/^char* cur_output = output;$/;"	v
cur_output	test/test_connect_destroy.c	/^char* cur_output = output;$/;"	v
cur_output	test/test_mqtt4async.c	/^char* cur_output = output;$/;"	v
cur_output	test/test_mqtt4sync.c	/^char* cur_output = output;$/;"	v
cur_output	test/test_sync_session_present.c	/^char* cur_output = output;$/;"	v
cur_output	test/thread.c	/^char* cur_output = output;$/;"	v
current	src/LinkedList.h	/^				*current;	\/**< current element in the list, for iteration *\/$/;"	m	struct:__anon53
currentInterval	src/MQTTAsync.c	/^	int currentInterval;$/;"	m	struct:MQTTAsync_struct	file:
currentIntervalBase	src/MQTTAsync.c	/^	int currentIntervalBase;$/;"	m	struct:MQTTAsync_struct	file:
currentServerURI	src/MQTTClient.c	/^	const char* currentServerURI; \/* when using HA options, set the currently used serverURI *\/$/;"	m	struct:__anon28	file:
currentURI	src/MQTTAsync.c	/^			int currentURI;$/;"	m	struct:__anon4::__anon5::__anon10	file:
current_depth	src/StackTrace.c	/^	int current_depth;$/;"	m	struct:__anon22	file:
current_size	src/Heap.h	/^	size_t current_size;	\/**< current size of the heap in bytes *\/$/;"	m	struct:__anon96
d	test/test10.c	/^MQTTClient c, d;$/;"	v
data	src/MQTTAsync.h	/^		const void* data;  \/**< binary password data *\/$/;"	m	struct:__anon93::__anon94
data	src/MQTTAsync.h	/^		const void* data;  \/**< binary payload data *\/$/;"	m	struct:__anon89::__anon90
data	src/MQTTClient.h	/^		const void* data;  \/**< binary password data *\/$/;"	m	struct:__anon70::__anon72
data	src/MQTTClient.h	/^		const void* data;  \/**< binary payload data *\/$/;"	m	struct:__anon66::__anon67
data	src/MQTTProperties.h	/^	char* data; \/**< pointer to the string data *\/$/;"	m	struct:__anon48
data	src/MQTTProperties.h	/^      MQTTLenString data;  \/**< The value of a string property, or the name of a user property. *\/$/;"	m	struct:__anon49::__anon50::__anon51
data	src/utf-8.c	/^	char data[20];$/;"	m	struct:__anon14	file:
datadup	src/MQTTProperties.c	/^static char* datadup(const MQTTLenString* str)$/;"	f	file:
datalen	src/SocketBuffer.h	/^		datalen; 			\/**< current length of data in buf *\/$/;"	m	struct:__anon29
datarootdir	Makefile	/^datarootdir = $(prefix)\/share$/;"	m
dc	src/MQTTAsync.c	/^	MQTTAsync_deliveryComplete* dc;$/;"	m	struct:MQTTAsync_struct	file:
dc	src/MQTTClient.c	/^	MQTTClient_deliveryComplete* dc;$/;"	m	struct:__anon28	file:
dc	test/python/mqttasync_module.c	/^	PyObject *cl, *ma, *dc;$/;"	m	struct:__anon114	file:
dc	test/python/mqttclient_module.c	/^	PyObject *cl, *ma, *dc;$/;"	m	struct:__anon117	file:
dc	test/sync_client_test.c	/^	MQTTClient_deliveryComplete* dc;$/;"	m	struct:__anon104	file:
dc	test/test3.c	/^	MQTTClient_deliveryComplete* dc;$/;"	m	struct:__anon129	file:
dcContext	src/MQTTAsync.c	/^	void* dcContext; \/* the context to be associated with the deliv complete callback*\/$/;"	m	struct:MQTTAsync_struct	file:
decode	test/MQTTV311.py	/^  def decode(self, buffer):$/;"	m	class:FixedHeaders
decode	test/MQTTV3112.py	/^  def decode(self, buffer):$/;"	m	class:FixedHeaders
decode	test/MQTTV5.py	/^  def decode(buffer):$/;"	m	class:VBIs
def_queue	src/SocketBuffer.c	/^static socket_queue* def_queue;$/;"	v	file:
define_macros	test/python/setup.py	/^              define_macros = [('NO_HEAP_TRACKING', '1')],$/;"	v
deleteOldestMessages	src/MQTTAsync.h	/^	int deleteOldestMessages;$/;"	m	struct:__anon88
delimiter	src/samples/pubsub_opts.h	/^	char* delimiter;$/;"	m	struct:pubsub_opts
delivered	src/samples/MQTTClient_publish_async.c	/^void delivered(void *context, MQTTClient_deliveryToken dt)$/;"	f
delivered	src/samples/MQTTClient_subscribe.c	/^void delivered(void *context, MQTTClient_deliveryToken dt)$/;"	f
delivered	test_package/test_package.c	/^void delivered(void *context, MQTTClient_deliveryToken dt)$/;"	f
deliveredtoken	src/samples/MQTTClient_publish_async.c	/^MQTTClient_deliveryToken deliveredtoken;$/;"	v
deliveredtoken	src/samples/MQTTClient_subscribe.c	/^volatile MQTTClient_deliveryToken deliveredtoken;$/;"	v
deliveredtoken	test_package/test_package.c	/^volatile MQTTClient_deliveryToken deliveredtoken;$/;"	v
deliveryComplete	test/python/mqttasync_module.c	/^void deliveryComplete(void* context, MQTTAsync_token dt)$/;"	f
deliveryComplete	test/python/mqttclient_module.c	/^void deliveryComplete(void* context, MQTTClient_deliveryToken dt)$/;"	f
deliveryComplete	test/python/test1.py	/^def deliveryComplete(context, msgid):$/;"	f
deliveryComplete	test/python/test2.py	/^def deliveryComplete(context, msgid):$/;"	f
deliveryComplete	test/python/test_offline.py	/^def deliveryComplete(context, msgid):$/;"	f
deliveryCompleted_mutex	test/test2.c	/^mutex_type deliveryCompleted_mutex = &deliveryCompleted_mutex_store;$/;"	v
deliveryCompleted_mutex	test/test2.c	/^mutex_type deliveryCompleted_mutex = NULL;$/;"	v
deliveryCompleted_mutex_store	test/test2.c	/^pthread_mutex_t deliveryCompleted_mutex_store = PTHREAD_MUTEX_INITIALIZER;$/;"	v
depth	src/Log.c	/^	int depth;$/;"	m	struct:__anon59	file:
description	test/python/setup.py	/^       description = 'Binding to the Eclipse Paho C clients',$/;"	v
destinationName	src/MQTTAsync.c	/^			char* destinationName;$/;"	m	struct:__anon4::__anon5::__anon8	file:
destinationName	src/MQTTAsync.h	/^			char* destinationName;     \/**< the topic destination for the message *\/$/;"	m	struct:__anon78::__anon79::__anon80
destinationName	src/MQTTAsync.h	/^			char* destinationName;     \/**< the topic destination for the message *\/$/;"	m	struct:__anon82::__anon83::__anon85
details	src/MQTTAsync.c	/^	} details;$/;"	m	struct:__anon4	typeref:union:__anon4::__anon5	file:
dis	src/MQTTAsync.c	/^		} dis;$/;"	m	union:__anon4::__anon5	typeref:struct:__anon4::__anon5::__anon9	file:
disableDefaultTrustStore	src/MQTTAsync.h	/^	int disableDefaultTrustStore;$/;"	m	struct:__anon91
disableDefaultTrustStore	src/MQTTClient.h	/^	int disableDefaultTrustStore;$/;"	m	struct:__anon68
disc_finished	src/samples/MQTTAsync_subscribe.c	/^int disc_finished = 0;$/;"	v
disconnect	src/MQTTAsync.c	/^	MQTTAsync_command disconnect;		\/* Disconnect operation properties *\/$/;"	m	struct:MQTTAsync_struct	file:
disconnected	src/MQTTAsync.c	/^	MQTTAsync_disconnected* disconnected;$/;"	m	struct:MQTTAsync_struct	file:
disconnected	src/MQTTClient.c	/^	MQTTClient_disconnected* disconnected;$/;"	m	struct:__anon28	file:
disconnected	src/samples/paho_c_pub.c	/^static int disconnected = 0;$/;"	v	file:
disconnected	src/samples/paho_c_sub.c	/^int disconnected = 0;$/;"	v
disconnected	test/test10.c	/^	int disconnected;$/;"	m	struct:__anon105	file:
disconnected	test/test10.c	/^void disconnected(void* context, MQTTProperties* props, enum MQTTReasonCodes rc)$/;"	f
disconnected	test/test11.c	/^	int disconnected;$/;"	m	struct:__anon119	file:
disconnected_context	src/MQTTAsync.c	/^	void* disconnected_context; \/* the context to be associated with the disconnected callback*\/$/;"	m	struct:MQTTAsync_struct	file:
disconnected_context	src/MQTTClient.c	/^	void* disconnected_context; \/* the context to be associated with the disconnected callback*\/$/;"	m	struct:__anon28	file:
do_openssl_init	src/MQTTAsync.h	/^	int do_openssl_init;$/;"	m	struct:__anon74
do_openssl_init	src/MQTTClient.h	/^	int do_openssl_init;$/;"	m	struct:__anon63
docdir	Makefile	/^  docdir = $(blddir)\/doc$/;"	m
docdir_work	Makefile	/^  docdir_work = $(blddir)\/..\/doc$/;"	m
dollar_topics_test	test/sync_client_test.c	/^int dollar_topics_test(void)$/;"	f
dup	src/MQTTAsync.h	/^	int dup;$/;"	m	struct:__anon75
dup	src/MQTTClient.h	/^	int dup;$/;"	m	struct:__anon64
dup	src/MQTTPacket.h	/^		bool dup : 1;			\/**< DUP flag bit *\/$/;"	m	struct:__anon32::__anon33
dup	src/MQTTPacket.h	/^		bool dup : 1;			\/**< DUP flag bit *\/$/;"	m	struct:__anon32::__anon34
dup	src/MQTTPersistence.h	/^	int dup;$/;"	m	struct:__anon57
elapsed	src/Thread.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	src/Thread.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test1.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test1.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test10.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test10.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test11.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test11.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test15.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test15.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test2.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test2.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test3.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test3.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test4.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test4.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test45.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test45.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test5.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test5.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test6.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test6.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test8.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test8.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test9.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test9.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test95.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test95.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test_connect_destroy.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test_connect_destroy.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test_mqtt4async.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test_mqtt4async.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test_mqtt4sync.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test_mqtt4sync.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/test_sync_session_present.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/test_sync_session_present.c	/^long elapsed(struct timespec start)$/;"	f
elapsed	test/thread.c	/^long elapsed(START_TIME_TYPE start_time)$/;"	f
elapsed	test/thread.c	/^long elapsed(struct timespec start)$/;"	f
enableServerCertAuth	src/MQTTAsync.h	/^    int enableServerCertAuth;$/;"	m	struct:__anon91
enableServerCertAuth	src/MQTTClient.h	/^    int enableServerCertAuth;$/;"	m	struct:__anon68
enabledCipherSuites	src/MQTTAsync.h	/^	const char* enabledCipherSuites;$/;"	m	struct:__anon91
enabledCipherSuites	src/MQTTClient.h	/^	const char* enabledCipherSuites;$/;"	m	struct:__anon68
encode	test/MQTTV311.py	/^  def encode(self, x):$/;"	m	class:FixedHeaders
encode	test/MQTTV3112.py	/^  def encode(self, x):$/;"	m	class:FixedHeaders
encode	test/MQTTV5.py	/^  def encode(x):$/;"	m	class:VBIs
errmsg	src/Heap.c	/^static const char *errmsg = "Memory allocation error";$/;"	v	file:
errors	src/MQTTPacket.h	/^enum errors$/;"	g
errors	test/test6.c	/^int errors = 0;$/;"	v
exec_prefix	Makefile	/^	exec_prefix = ${prefix}$/;"	m
expectedCount	test/test6.c	/^int expectedCount = 0;$/;"	v
ext_modules	test/python/setup.py	/^       ext_modules = [paho_mqtt3c, paho_mqtt3a])$/;"	v
eyecatcher	src/Heap.c	/^static eyecatcherType eyecatcher = (eyecatcherType)0x8888888888888888;$/;"	v	file:
eyecatcherType	src/Heap.c	/^typedef double eyecatcherType;$/;"	t	file:
eyecatchers	src/MQTTVersion.c	/^ static const char* eyecatchers[] = {"MQTTAsyncV3_Version", "MQTTAsyncV3_Timestamp",$/;"	v	file:
failedPublishCnt	test/test_issue373.c	/^int failedPublishCnt = 0;$/;"	v
failures	src/Thread.c	/^int tests = 0, failures = 0;$/;"	v
failures	test/sync_client_test.c	/^int failures = 0;$/;"	v
failures	test/test1.c	/^int failures = 0;$/;"	v
failures	test/test10.c	/^int failures = 0;$/;"	v
failures	test/test11.c	/^int failures = 0;$/;"	v
failures	test/test15.c	/^int failures = 0;$/;"	v
failures	test/test2.c	/^int failures = 0;$/;"	v
failures	test/test3.c	/^int failures = 0;$/;"	v
failures	test/test4.c	/^int failures = 0;$/;"	v
failures	test/test45.c	/^int failures = 0;$/;"	v
failures	test/test5.c	/^int failures = 0;$/;"	v
failures	test/test8.c	/^int failures = 0;$/;"	v
failures	test/test9.c	/^int failures = 0;$/;"	v
failures	test/test95.c	/^int failures = 0;$/;"	v
failures	test/test_connect_destroy.c	/^int failures = 0;$/;"	v
failures	test/test_issue373.c	/^int failures = 0;$/;"	v
failures	test/test_mqtt4async.c	/^int failures = 0;$/;"	v
failures	test/test_mqtt4sync.c	/^int failures = 0;$/;"	v
failures	test/test_sync_session_present.c	/^int failures = 0;$/;"	v
failures	test/thread.c	/^int failures = 0;$/;"	v
features	build/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
fh	test/MQTTV311.py	/^  fh = FixedHeaders(CONNECT)$/;"	v
fh	test/MQTTV3112.py	/^  fh = FixedHeaders(CONNECT)$/;"	v
file	src/Heap.c	/^	char* file;		\/**< the name of the source file where the storage was allocated *\/$/;"	m	struct:__anon1	file:
filename	src/samples/pubsub_opts.h	/^	char* filename;$/;"	m	struct:pubsub_opts
finished	src/samples/MQTTAsync_publish.c	/^int finished = 0;$/;"	v
finished	src/samples/MQTTAsync_subscribe.c	/^int finished = 0;$/;"	v
finished	src/samples/paho_c_sub.c	/^volatile int finished = 0;$/;"	v
first	src/LinkedList.h	/^	ListElement *first,	\/**< first element in the list *\/$/;"	m	struct:__anon53
fixed_header	src/SocketBuffer.h	/^	char fixed_header[5];	\/**< header plus up to 4 length bytes *\/$/;"	m	struct:__anon29
flags	src/MQTTPacket.h	/^	} flags;	 \/**< connack flags byte *\/$/;"	m	struct:__anon39	typeref:union:__anon39::__anon40
flags	src/MQTTPacket.h	/^	} flags;	\/**< connect flags byte *\/$/;"	m	struct:__anon35	typeref:union:__anon35::__anon36
flow_control_trace_callback	test/test11.c	/^void flow_control_trace_callback(enum MQTTASYNC_TRACE_LEVELS level, char* message)$/;"	f
frameData	src/WebSocket.c	/^struct frameData {$/;"	s	file:
frame_buffer	src/WebSocket.c	/^static char * frame_buffer = NULL;$/;"	v	file:
frame_buffer_data_len	src/WebSocket.c	/^static size_t frame_buffer_data_len = 0;$/;"	v	file:
frame_buffer_index	src/WebSocket.c	/^static size_t frame_buffer_index = 0;$/;"	v	file:
frame_buffer_len	src/WebSocket.c	/^static size_t frame_buffer_len = 0;$/;"	v	file:
free	src/Heap.c	499;"	d	file:
free	src/Heap.c	49;"	d	file:
free	src/Heap.h	55;"	d
free	src/Thread.c	39;"	d	file:
free	test/test_issue373.c	39;"	d	file:
frees	src/Socket.h	/^	int* frees;        \/**> array of flags indicating whether each buffer needs to be freed *\/$/;"	m	struct:__anon23
frees	src/SocketBuffer.h	/^	int frees[5];$/;"	m	struct:__anon30
func_type	src/MQTTVersion.c	/^typedef MQTTAsync_nameValue* (*func_type)(void);$/;"	t	file:
g_InitOnce	src/MQTTAsync.c	/^static INIT_ONCE g_InitOnce = INIT_ONCE_STATIC_INIT; \/* Global for one time initialization *\/$/;"	v	file:
g_InitOnce	src/MQTTClient.c	/^static INIT_ONCE g_InitOnce = INIT_ONCE_STATIC_INIT; \/* Static initialization *\/$/;"	v	file:
generators	test_package/conanfile.py	/^    generators = "cmake"$/;"	v	class:TestPackageConan
getId	test/MQTTV5.py	/^  def getId(self, name):$/;"	m	class:ReasonCodes
getIdentFromName	test/MQTTV5.py	/^  def getIdentFromName(self, compressedName):$/;"	m	class:Properties
getName	test/MQTTV5.py	/^  def getName(self):$/;"	m	class:ReasonCodes
getNameFromIdent	test/MQTTV5.py	/^  def getNameFromIdent(self, identifier):$/;"	m	class:Properties
getPacket	test/MQTTV311.py	/^def getPacket(aSocket):$/;"	f
getPacket	test/MQTTV3112.py	/^def getPacket(aSocket):$/;"	f
getPacket	test/MQTTV5.py	/^def getPacket(aSocket):$/;"	f
getResponseOptions	test/python/mqttasync_module.c	/^int getResponseOptions(MQTTAsync c, PyObject *pyoptions, MQTTAsync_responseOptions* responseOptions,$/;"	f
getheaders	test/mqttsas.py	/^    def getheaders(self, data):$/;"	m	class:MyHandler
getopts	src/samples/pubsub_opts.c	/^int getopts(int argc, char** argv, struct pubsub_opts* opts)$/;"	f
getopts	test/sync_client_test.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test1.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test10.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test11.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test15.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test2.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test3.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test4.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test45.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test5.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test6.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test8.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test9.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test95.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test_connect_destroy.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test_issue373.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test_mqtt4async.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test_mqtt4sync.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/test_sync_session_present.c	/^void getopts(int argc, char** argv)$/;"	f
getopts	test/thread.c	/^void getopts(int argc, char** argv)$/;"	f
global_initialized	src/MQTTAsync.c	/^static volatile int global_initialized = 0;$/;"	v	file:
global_start_time	test/test1.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test10.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test11.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test15.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test2.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test3.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test4.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test45.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test5.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test6.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test8.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test9.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test95.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test_connect_destroy.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test_mqtt4async.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test_mqtt4sync.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/test_sync_session_present.c	/^START_TIME_TYPE global_start_time;$/;"	v
global_start_time	test/thread.c	/^START_TIME_TYPE global_start_time;$/;"	v
good	src/Clients.h	/^	unsigned int good : 1; 			  \/**< if we have an error on the socket we turn this off *\/$/;"	m	struct:__anon19
good	test/sync_client_test.c	/^	unsigned int good : 1; 			\/**< if we have an error on the socket we turn this off *\/$/;"	m	struct:__anon103	file:
good	test/test3.c	/^	unsigned int good : 1; 			\/**< if we have an error on the socket we turn this off *\/$/;"	m	struct:__anon128	file:
goodPublishCnt	test/test_issue373.c	/^int goodPublishCnt = 0;$/;"	v
h	src/SHA1.h	/^	uint32_t h[5];$/;"	m	struct:SHA_CTX_S
hHash	src/SHA1.h	/^	HCRYPTHASH hHash;$/;"	m	struct:SHA_CTX_S
hProv	src/SHA1.h	/^	HCRYPTPROV hProv;$/;"	m	struct:SHA_CTX_S
haconnections	test/test1.c	/^	char** haconnections;$/;"	m	struct:Options	file:
haconnections	test/test10.c	/^	char** haconnections;$/;"	m	struct:Options	file:
haconnections	test/test15.c	/^	char** haconnections;$/;"	m	struct:Options	file:
haconnections	test/test2.c	/^	char** haconnections;$/;"	m	struct:Options	file:
haconnections	test/test3.c	/^	char** haconnections;         	\/**< connection to system under test. *\/$/;"	m	struct:Options	file:
haconnections	test/test_connect_destroy.c	/^	char** haconnections;$/;"	m	struct:Options	file:
haconnections	test/test_mqtt4async.c	/^	char** haconnections;$/;"	m	struct:Options	file:
haconnections	test/test_mqtt4sync.c	/^	char** haconnections;$/;"	m	struct:Options	file:
haconnections	test/test_sync_session_present.c	/^    char** haconnections;$/;"	m	struct:Options	file:
hacount	test/test1.c	/^	int hacount;$/;"	m	struct:Options	file:
hacount	test/test10.c	/^	int hacount;$/;"	m	struct:Options	file:
hacount	test/test15.c	/^	int hacount;$/;"	m	struct:Options	file:
hacount	test/test2.c	/^	int hacount;$/;"	m	struct:Options	file:
hacount	test/test3.c	/^	int hacount;$/;"	m	struct:Options	file:
hacount	test/test_connect_destroy.c	/^	int hacount;$/;"	m	struct:Options	file:
hacount	test/test_mqtt4async.c	/^	int hacount;$/;"	m	struct:Options	file:
hacount	test/test_mqtt4sync.c	/^	int hacount;$/;"	m	struct:Options	file:
hacount	test/test_sync_session_present.c	/^    int hacount;$/;"	m	struct:Options	file:
handle	test/mqttsas.py	/^    def handle(self):$/;"	m	class:MyHandler
handleTrace	test/test5.c	/^void handleTrace(enum MQTTASYNC_TRACE_LEVELS level, char* message)$/;"	f
handleTrace	test/test9.c	/^void handleTrace(enum MQTTASYNC_TRACE_LEVELS level, char* message)$/;"	f
handleTrace	test/test95.c	/^void handleTrace(enum MQTTASYNC_TRACE_LEVELS level, char* message)$/;"	f
handleTrace	test/test_issue373.c	/^void handleTrace(enum MQTTASYNC_TRACE_LEVELS level, char* message)$/;"	f
handle_openssl_init	src/SSLSocket.c	/^static int handle_openssl_init = 1;$/;"	v	file:
handles	src/MQTTAsync.c	/^static List* handles = NULL;$/;"	v	file:
handles	src/MQTTClient.c	/^static List* handles = NULL;$/;"	v	file:
handshake	test/mqttsas.py	/^    def handshake(self, client):$/;"	m	class:MyHandler
has_rc	src/Log.c	/^	int has_rc;$/;"	m	struct:__anon59	file:
header	src/MQTTPacket.h	/^	Header header;	\/**< MQTT header byte *\/$/;"	m	struct:__anon35
header	src/MQTTPacket.h	/^	Header header;	\/**< MQTT header byte *\/$/;"	m	struct:__anon43
header	src/MQTTPacket.h	/^	Header header;	\/**< MQTT header byte *\/$/;"	m	struct:__anon44
header	src/MQTTPacket.h	/^	Header header;	\/**< MQTT header byte *\/$/;"	m	struct:__anon45
header	src/MQTTPacket.h	/^	Header header;	\/**< MQTT header byte *\/$/;"	m	struct:__anon46
header	src/MQTTPacket.h	/^	Header header;	\/**< MQTT header byte *\/$/;"	m	struct:__anon47
header	src/MQTTPacket.h	/^	Header header; \/**< MQTT header byte *\/$/;"	m	struct:__anon39
headerlen	src/SocketBuffer.h	/^	size_t headerlen;$/;"	m	struct:__anon29
heap	src/Heap.c	/^static Tree heap;	\/**< Tree that holds the allocation records *\/$/;"	v	file:
heap_info	src/Heap.h	/^} heap_info;$/;"	t	typeref:struct:__anon96
heap_mutex	src/Heap.c	/^mutex_type heap_mutex;$/;"	v
heap_mutex	src/Heap.c	/^static mutex_type heap_mutex = &heap_mutex_store;$/;"	v	file:
heap_mutex_store	src/Heap.c	/^static pthread_mutex_t heap_mutex_store = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
heap_tracking	src/Tree.h	/^	unsigned int heap_tracking : 1; \/**< switch on heap tracking for this tree? *\/$/;"	m	struct:__anon54
host	src/samples/pubsub_opts.h	/^	char* host;$/;"	m	struct:pubsub_opts
host	test/python/test1.py	/^host = "localhost"$/;"	v
hostname	test/python/test2.py	/^hostname = "localhost"$/;"	v
hostname	test/python/test_offline.py	/^hostname = "localhost"$/;"	v
htobe16	src/WebSocket.c	49;"	d	file:
htobe16	src/WebSocket.c	65;"	d	file:
htobe16	src/WebSocket.c	72;"	d	file:
htobe32	src/SHA1.c	60;"	d	file:
htobe32	src/WebSocket.c	50;"	d	file:
htobe32	src/WebSocket.c	66;"	d	file:
htobe32	src/WebSocket.c	73;"	d	file:
htobe64	src/WebSocket.c	51;"	d	file:
htobe64	src/WebSocket.c	67;"	d	file:
htobe64	src/WebSocket.c	74;"	d	file:
htonll	src/WebSocket.c	41;"	d	file:
htonll	src/WebSocket.c	61;"	d	file:
httpHeaders	src/Clients.h	/^	const MQTTClient_nameValue* httpHeaders;$/;"	m	struct:__anon18
httpHeaders	src/MQTTAsync.h	/^	const MQTTAsync_nameValue* httpHeaders;$/;"	m	struct:__anon93
httpHeaders	src/MQTTClient.h	/^	const MQTTClient_nameValue* httpHeaders;$/;"	m	struct:__anon70
http_proxy	src/Clients.h	/^	char *http_proxy;$/;"	m	struct:__anon18
http_proxy_auth	src/Clients.h	/^	char *http_proxy_auth;$/;"	m	struct:__anon18
https_proxy	src/Clients.h	/^	char *https_proxy;$/;"	m	struct:__anon18
https_proxy_auth	src/Clients.h	/^	char *https_proxy_auth;$/;"	m	struct:__anon18
id	src/StackTrace.c	/^	thread_id_type id;$/;"	m	struct:__anon22	file:
identifier	src/MQTTProperties.h	/^  enum MQTTPropertyCodes identifier; \/**<  The MQTT V5 property id. A multi-byte integer. *\/$/;"	m	struct:__anon49	typeref:enum:__anon49::MQTTPropertyCodes
imports	test_package/conanfile.py	/^    def imports(self):$/;"	m	class:TestPackageConan
in_frames	src/WebSocket.c	/^static List* in_frames = NULL;$/;"	v	file:
inboundMsgs	src/Clients.h	/^	List* inboundMsgs;              \/**< inbound in flight messages *\/$/;"	m	struct:__anon19
inboundMsgs	test/test3.c	/^	void* inboundMsgs;$/;"	m	struct:__anon128	file:
include_dirs	test/python/setup.py	/^              include_dirs = ['..\/..\/src'])$/;"	v
includedir	Makefile	/^includedir = $(prefix)\/include$/;"	m
index	src/SocketBuffer.h	/^	unsigned int index;$/;"	m	struct:__anon29
index	src/Tree.h	/^	} index[2];$/;"	m	struct:__anon54	typeref:struct:__anon54::__anon55
index	test/test4.c	/^	int index;$/;"	m	struct:__anon99	file:
index	test/test45.c	/^	int index;$/;"	m	struct:__anon112	file:
index	test/test8.c	/^	int index;$/;"	m	struct:__anon118	file:
indexes	src/Tree.h	/^	int indexes,  \/**< no of indexes into tree *\/$/;"	m	struct:__anon54
indexes	test/MQTTV5.py	/^  indexes = range(1, 16)$/;"	v	class:PacketTypes
info_arch	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_platform	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_version	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
initpaho_mqtt3a	test/python/mqttasync_module.c	/^PyMODINIT_FUNC initpaho_mqtt3a(void)$/;"	f
initpaho_mqtt3c	test/python/mqttclient_module.c	/^PyMODINIT_FUNC initpaho_mqtt3c(void)$/;"	f
inline	src/StackTrace.h	42;"	d
input_sel	test/python/controlVMnetworkstate.py	/^def input_sel(prompt,max_,selectionoption):$/;"	f
insecure	src/samples/pubsub_opts.h	/^	int insecure;$/;"	m	struct:pubsub_opts
intcompare	src/LinkedList.c	/^int intcompare(void* a, void* b)$/;"	f
integer2	src/MQTTProperties.h	/^    unsigned short integer2;  \/**< holds the value of a 2 byte integer property type *\/$/;"	m	union:__anon49::__anon50
integer4	src/MQTTProperties.h	/^    unsigned int integer4;    \/**< holds the value of a 4 byte integer property type *\/$/;"	m	union:__anon49::__anon50
internal	src/MQTTAsync.c	/^			int internal;$/;"	m	struct:__anon4::__anon5::__anon9	file:
invalid_strings	src/utf-8.c	/^tests invalid_strings[] =$/;"	v
iobuf	src/SocketBuffer.h	/^	typedef WSABUF iobuf;$/;"	t
iobuf	src/SocketBuffer.h	/^	typedef struct iovec iobuf;$/;"	t	typeref:struct:iovec
ioctl	src/Socket.h	45;"	d
iov_base	src/SSLSocket.c	84;"	d	file:
iov_base	src/Socket.c	60;"	d	file:
iov_base	src/SocketBuffer.c	39;"	d	file:
iov_len	src/SSLSocket.c	83;"	d	file:
iov_len	src/Socket.c	59;"	d	file:
iov_len	src/SocketBuffer.c	38;"	d	file:
iovecs	src/SocketBuffer.h	/^	iobuf iovecs[5];$/;"	m	struct:__anon30
isBlack	src/Tree.c	/^int isBlack(Node* aNode)$/;"	f
isEmpty	test/MQTTV5.py	/^  def isEmpty(self):$/;"	m	class:Properties
isReady	src/Socket.c	/^int isReady(int socket, fd_set* read_set, fd_set* write_set)$/;"	f
isRed	src/Tree.c	/^int isRed(Node* aNode)$/;"	f
iterations	test/sync_client_test.c	/^	int iterations;$/;"	m	struct:Options	file:
iterations	test/test1.c	/^	int iterations;$/;"	m	struct:Options	file:
iterations	test/test10.c	/^	int iterations;$/;"	m	struct:Options	file:
iterations	test/test11.c	/^	int iterations;$/;"	m	struct:Options	file:
iterations	test/test15.c	/^	int iterations;$/;"	m	struct:Options	file:
iterations	test/test2.c	/^	int iterations;$/;"	m	struct:Options	file:
iterations	test/test2.c	/^static int iterations = 50;$/;"	v	file:
iterations	test/test4.c	/^	int iterations;$/;"	m	struct:Options	file:
iterations	test/test45.c	/^	int iterations;$/;"	m	struct:Options	file:
iterations	test/test_connect_destroy.c	/^	int iterations;$/;"	m	struct:Options	file:
iterations	test/test_mqtt4async.c	/^	int iterations;$/;"	m	struct:Options	file:
iterations	test/test_mqtt4sync.c	/^	int iterations;$/;"	m	struct:Options	file:
iterations	test/test_sync_session_present.c	/^    int iterations;$/;"	m	struct:Options	file:
iterations	test/thread.c	/^	int iterations;$/;"	m	struct:Options	file:
iterrations	test/test_issue373.c	/^	unsigned int iterrations;$/;"	m	struct:Options	file:
keepAliveInterval	src/Clients.h	/^	int keepAliveInterval;          \/**< the MQTT keep alive interval *\/$/;"	m	struct:__anon19
keepAliveInterval	src/MQTTAsync.h	/^	int keepAliveInterval;$/;"	m	struct:__anon93
keepAliveInterval	src/MQTTClient.h	/^	int keepAliveInterval;$/;"	m	struct:__anon70
keepAliveInterval	test/test3.c	/^	int keepAliveInterval;$/;"	m	struct:__anon128	file:
keepAliveTimer	src/MQTTPacket.h	/^	int keepAliveTimer;		\/**< keepalive timeout value in seconds *\/$/;"	m	struct:__anon35
keepalive	src/samples/pubsub_opts.h	/^	int keepalive;$/;"	m	struct:pubsub_opts
keepalive_test	test/sync_client_test.c	/^int keepalive_test(void)$/;"	f
key	src/samples/pubsub_opts.h	/^	char* key;$/;"	m	struct:pubsub_opts
keyStore	src/MQTTAsync.h	/^	const char* keyStore;$/;"	m	struct:__anon91
keyStore	src/MQTTClient.h	/^	const char* keyStore;$/;"	m	struct:__anon68
keypass	src/samples/pubsub_opts.h	/^	char* keypass;$/;"	m	struct:pubsub_opts
keysUnix	src/MQTTPersistenceDefault.c	/^int keysUnix(char *dirname, char ***keys, int *nkeys)$/;"	f
keysWin32	src/MQTTPersistenceDefault.c	/^int keysWin32(char *dirname, char ***keys, int *nkeys)$/;"	f
last	src/LinkedList.h	/^				*last,	\/**< last element in the list *\/$/;"	m	struct:__anon53
lastConnectionFailedTime	src/MQTTAsync.c	/^	START_TIME_TYPE lastConnectionFailedTime;$/;"	m	struct:MQTTAsync_struct	file:
lastContact	test/sync_client_test.c	/^	time_t lastContact;$/;"	m	struct:__anon102	file:
lastContact	test/test3.c	/^	time_t lastContact;$/;"	m	struct:__anon128	file:
lastPing	src/Clients.h	/^	START_TIME_TYPE lastPing;$/;"	m	struct:__anon18
lastReceived	src/Clients.h	/^	START_TIME_TYPE lastReceived;$/;"	m	struct:__anon18
lastSent	src/Clients.h	/^	START_TIME_TYPE lastSent;$/;"	m	struct:__anon18
lastTouch	src/Clients.h	/^	START_TIME_TYPE lastTouch;		    \/**> used for retry and expiry *\/$/;"	m	struct:__anon16
last_completion_time	test/test6.c	/^long last_completion_time = -1;$/;"	v
last_frame	src/WebSocket.c	/^struct ws_frame *last_frame = NULL;$/;"	v	typeref:struct:ws_frame
last_ts	src/Log.c	/^struct timeb now_ts, last_ts;$/;"	v	typeref:struct:
last_ts	src/Log.c	/^struct timeval now_ts, last_ts;$/;"	v	typeref:struct:
len	src/Clients.h	/^	int len;				\/**> length of the whole structure+data *\/$/;"	m	struct:__anon16
len	src/MQTTAsync.h	/^		int len;            \/**< binary password length *\/$/;"	m	struct:__anon93::__anon94
len	src/MQTTAsync.h	/^  	int len;            \/**< binary payload length *\/$/;"	m	struct:__anon89::__anon90
len	src/MQTTClient.h	/^		int len;            \/**< binary payload length *\/$/;"	m	struct:__anon66::__anon67
len	src/MQTTClient.h	/^		int len;           \/**< binary password length *\/$/;"	m	struct:__anon70::__anon72
len	src/MQTTProperties.h	/^	int len; \/**< the length of the string *\/$/;"	m	struct:__anon48
len	src/WebSocket.c	/^	size_t len; \/**< length of frame *\/$/;"	m	struct:ws_frame	file:
len	src/utf-8.c	/^	int len; \/**< number of elements in the following array (1 to 4) *\/$/;"	m	struct:__anon12	file:
len	src/utf-8.c	/^	int len;$/;"	m	struct:__anon14	file:
length	src/MQTTProperties.h	/^  int length;    \/**< mbi: byte length of all properties *\/$/;"	m	struct:MQTTProperties
level	src/Log.c	/^	enum LOG_LEVELS level;$/;"	m	struct:__anon59	typeref:enum:__anon59::LOG_LEVELS	file:
libdir	Makefile	/^libdir = $(exec_prefix)\/lib$/;"	m
libpaho-mqtt3_c_includes	android/Android.mk	/^libpaho-mqtt3_c_includes := $(LOCAL_PATH)\/$(libpaho-mqtt3_lib_path) \\$/;"	m
libpaho-mqtt3_lib_path	android/Android.mk	/^libpaho-mqtt3_lib_path := ..\/src$/;"	m
libpaho-mqtt3_local_src_c_files_a	android/Android.mk	/^libpaho-mqtt3_local_src_c_files_a := \\$/;"	m
libpaho-mqtt3_local_src_c_files_as	android/Android.mk	/^libpaho-mqtt3_local_src_c_files_as := \\$/;"	m
libpaho-mqtt3_local_src_c_files_c	android/Android.mk	/^libpaho-mqtt3_local_src_c_files_c := \\$/;"	m
libpaho-mqtt3_local_src_c_files_common	android/Android.mk	/^libpaho-mqtt3_local_src_c_files_common := \\$/;"	m
libpaho-mqtt3_local_src_c_files_cs	android/Android.mk	/^libpaho-mqtt3_local_src_c_files_cs := \\$/;"	m
libraries	src/MQTTVersion.c	/^ static const char* libraries[] = {"paho-mqtt3c", "paho-mqtt3cs", "paho-mqtt3a", "paho-mqtt3as"};$/;"	v	file:
libraries	test/python/setup.py	/^					    libraries = ['paho-mqtt3c'],$/;"	v
libraries	test/python/setup.py	/^                        libraries = ['paho-mqtt3a'],$/;"	v
library_dirs	test/python/setup.py	/^						library_dirs = ['..\/..\/build\/output'],$/;"	v
library_dirs	test/python/setup.py	/^                        library_dirs = ['..\/..\/build\/output'],$/;"	v
library_initialized	src/MQTTClient.c	/^static volatile int library_initialized = 0;$/;"	v	file:
line	src/Heap.c	/^	int line;		\/**< the line no in the source file where it was allocated *\/$/;"	m	struct:__anon1	file:
line	src/Log.c	/^	int line;$/;"	m	struct:__anon59	file:
line	src/StackTrace.c	/^	int line;$/;"	m	struct:__anon21	file:
lines_written	src/Log.c	/^static int lines_written = 0; \/**< number of lines written to the current output file *\/$/;"	v	file:
loadandcall	src/MQTTVersion.c	/^int loadandcall(const char* libname)$/;"	f
lock_mutex	test/test2.c	/^void lock_mutex(mutex_type amutex)$/;"	f
lock_mutex	test/test_connect_destroy.c	/^void lock_mutex(mutex_type amutex)$/;"	f
log	test/test_sync_session_present.c	/^    char* log;$/;"	m	struct:Options	file:
logProperties	src/samples/pubsub_opts.c	/^void logProperties(MQTTProperties *props)$/;"	f
logProperties	test/test10.c	/^void logProperties(MQTTProperties *props)$/;"	f
logProperties	test/test11.c	/^void logProperties(MQTTProperties *props)$/;"	f
logProperties	test/test15.c	/^void logProperties(MQTTProperties *props)$/;"	f
logProperties	test/test45.c	/^void logProperties(MQTTProperties *props)$/;"	f
logProperties	test/test95.c	/^void logProperties(MQTTProperties *props)$/;"	f
log_mutex	src/Log.c	/^mutex_type log_mutex;$/;"	v
log_mutex	src/Log.c	/^static mutex_type log_mutex = &log_mutex_store;$/;"	v	file:
log_mutex_store	src/Log.c	/^static pthread_mutex_t log_mutex_store = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
logger	test/MQTTV311.py	/^logger = logging.getLogger("mqttsas")$/;"	v
logger	test/MQTTV3112.py	/^logger = logging.getLogger("mqttsas")$/;"	v
logger	test/MQTTV5.py	/^logger = logging.getLogger('MQTTV5')$/;"	v
logging	test/mqttsas.py	/^logging = True$/;"	v
lower	src/utf-8.c	/^		char lower; \/**< lower limit of valid range *\/$/;"	m	struct:__anon12::__anon13	file:
lstat	src/OsWrapper.h	24;"	d
m	src/MQTTClient.c	/^	MQTTClients* m;$/;"	m	struct:props_rc_parms	file:
m	test/sync_client_test.c	/^	MQTTClient_message* m;$/;"	m	struct:__anon101	file:
ma	src/MQTTAsync.c	/^	MQTTAsync_messageArrived* ma;$/;"	m	struct:MQTTAsync_struct	file:
ma	src/MQTTClient.c	/^	MQTTClient_messageArrived* ma;$/;"	m	struct:__anon28	file:
ma	test/python/mqttasync_module.c	/^	PyObject *cl, *ma, *dc;$/;"	m	struct:__anon114	file:
ma	test/python/mqttclient_module.c	/^	PyObject *cl, *ma, *dc;$/;"	m	struct:__anon117	file:
ma	test/sync_client_test.c	/^	MQTTClient_messageArrived* ma;$/;"	m	struct:__anon104	file:
ma	test/test3.c	/^	MQTTClient_messageArrived* ma;$/;"	m	struct:__anon129	file:
maContext	src/MQTTAsync.c	/^	void* maContext; \/* the context to be associated with the msg arrived callback*\/$/;"	m	struct:MQTTAsync_struct	file:
main	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	src/Base64.c	/^int main(int argc, char *argv[])$/;"	f
main	src/Heap.c	/^int main(int argc, char *argv[])$/;"	f
main	src/LinkedList.c	/^int main(int argc, char *argv[])$/;"	f
main	src/MQTTPersistenceDefault.c	/^int main (int argc, char *argv[])$/;"	f
main	src/MQTTVersion.c	/^int main(int argc, char** argv)$/;"	f
main	src/MQTTVersion.c	/^int main(void)$/;"	f
main	src/SHA1.c	/^int main(int argc, char *argv[])$/;"	f
main	src/Socket.c	/^int main(int argc, char *argv[])$/;"	f
main	src/Thread.c	/^int main(int argc, char *argv[])$/;"	f
main	src/Tree.c	/^int main(int argc, char *argv[])$/;"	f
main	src/samples/MQTTAsync_publish.c	/^int main(int argc, char* argv[])$/;"	f
main	src/samples/MQTTAsync_subscribe.c	/^int main(int argc, char* argv[])$/;"	f
main	src/samples/MQTTClient_publish.c	/^int main(int argc, char* argv[])$/;"	f
main	src/samples/MQTTClient_publish_async.c	/^int main(int argc, char* argv[])$/;"	f
main	src/samples/MQTTClient_subscribe.c	/^int main(int argc, char* argv[])$/;"	f
main	src/samples/paho_c_pub.c	/^int main(int argc, char** argv)$/;"	f
main	src/samples/paho_c_sub.c	/^int main(int argc, char** argv)$/;"	f
main	src/samples/paho_cs_pub.c	/^int main(int argc, char** argv)$/;"	f
main	src/samples/paho_cs_sub.c	/^int main(int argc, char** argv)$/;"	f
main	src/utf-8.c	/^int main (int argc, char *argv[])$/;"	f
main	test/sync_client_test.c	/^int main(int argc, char** argv)$/;"	f
main	test/test1.c	/^int main(int argc, char** argv)$/;"	f
main	test/test10.c	/^int main(int argc, char** argv)$/;"	f
main	test/test11.c	/^int main(int argc, char** argv)$/;"	f
main	test/test15.c	/^int main(int argc, char** argv)$/;"	f
main	test/test2.c	/^int main(int argc, char** argv)$/;"	f
main	test/test3.c	/^int main(int argc, char** argv)$/;"	f
main	test/test4.c	/^int main(int argc, char** argv)$/;"	f
main	test/test45.c	/^int main(int argc, char** argv)$/;"	f
main	test/test5.c	/^int main(int argc, char** argv)$/;"	f
main	test/test6.c	/^int main(int argc, char** argv)$/;"	f
main	test/test8.c	/^int main(int argc, char** argv)$/;"	f
main	test/test9.c	/^int main(int argc, char** argv)$/;"	f
main	test/test95.c	/^int main(int argc, char** argv)$/;"	f
main	test/test_connect_destroy.c	/^int main(int argc, char** argv)$/;"	f
main	test/test_issue373.c	/^int main(int argc, char** argv)$/;"	f
main	test/test_mqtt4async.c	/^int main(int argc, char** argv)$/;"	f
main	test/test_mqtt4sync.c	/^int main(int argc, char** argv)$/;"	f
main	test/test_sync_session_present.c	/^int main(int argc, char** argv)$/;"	f
main	test/thread.c	/^int main(int argc, char** argv)$/;"	f
main	test_package/test_package.c	/^int main(int argc, char *argv[])$/;"	f
malloc	src/Heap.c	47;"	d	file:
malloc	src/Heap.c	497;"	d	file:
malloc	src/Heap.h	41;"	d
malloc	src/Thread.c	37;"	d	file:
malloc	test/test_issue373.c	37;"	d	file:
man1dir	Makefile	/^man1dir = $(mandir)\/man1$/;"	m
man2dir	Makefile	/^man2dir = $(mandir)\/man2$/;"	m
man3dir	Makefile	/^man3dir = $(mandir)\/man3$/;"	m
mandir	Makefile	/^mandir = $(datarootdir)\/man$/;"	m
mask	src/Clients.h	/^	uint8_t mask[4];$/;"	m	struct:__anon15
mask	src/MQTTPacket.h	/^	uint8_t mask[4]; \/**< the websockets mask the payload is masked with, if any *\/$/;"	m	struct:__anon46
mask	src/Socket.h	/^	uint8_t mask[4];   \/**> websocket mask used to mask the buffer data, if any *\/$/;"	m	struct:__anon23
max	src/Socket.h	88;"	d
max	src/Tree.c	98;"	d	file:
maxBufferedMessages	src/MQTTAsync.h	/^	int maxBufferedMessages;$/;"	m	struct:__anon88
maxInflight	src/MQTTAsync.h	/^	int maxInflight;$/;"	m	struct:__anon93
maxInflightMessages	src/Clients.h	/^	int maxInflightMessages;        \/**< the max number of inflight outbound messages we allow *\/$/;"	m	struct:__anon19
maxInflightMessages	src/MQTTClient.h	/^	int maxInflightMessages;$/;"	m	struct:__anon70
maxInflightMessages	test/test3.c	/^	int maxInflightMessages;$/;"	m	struct:__anon128	file:
maxRetryInterval	src/MQTTAsync.c	/^	int maxRetryInterval;$/;"	m	struct:MQTTAsync_struct	file:
maxRetryInterval	src/MQTTAsync.h	/^	int maxRetryInterval;$/;"	m	struct:__anon93
max_count	src/MQTTProperties.h	/^  int max_count; \/**< max number of properties that the currently allocated array can store *\/$/;"	m	struct:MQTTProperties
max_lines_per_file	src/Log.c	/^static int max_lines_per_file = 1000; \/**< maximum number of lines to write to one trace file *\/$/;"	v	file:
max_msg_len	src/Messages.c	35;"	d	file:
max_size	src/Heap.h	/^	size_t max_size;		\/**< max size the heap has reached in bytes *\/$/;"	m	struct:__anon96
max_trace_entries	src/Log.h	/^	int max_trace_entries;		\/**< max no of entries in the trace buffer *\/$/;"	m	struct:__anon25
maxdatalen	src/samples/pubsub_opts.h	/^	int maxdatalen;$/;"	m	struct:pubsub_opts
maxdepth	src/StackTrace.c	/^	int maxdepth;$/;"	m	struct:__anon22	file:
maxfdp1	src/Socket.h	/^	int maxfdp1; \/**< max descriptor used +1 (again see select doc) *\/$/;"	m	struct:__anon24
maxmsgs	test/test5.c	/^	int maxmsgs;$/;"	m	struct:__anon110	file:
measuring	test/test6.c	/^int measuring = 0;$/;"	v
message	src/MQTTAsync.h	/^			MQTTAsync_message message; \/**< the message being sent to the server *\/$/;"	m	struct:__anon78::__anon79::__anon80
message	src/MQTTAsync.h	/^			MQTTAsync_message message; \/**< the message being sent to the server *\/$/;"	m	struct:__anon82::__anon83::__anon85
message	src/MQTTAsync.h	/^	const char *message;$/;"	m	struct:__anon76
message	src/MQTTAsync.h	/^	const char *message;$/;"	m	struct:__anon77
message	src/MQTTAsync.h	/^	const char* message;$/;"	m	struct:__anon89
message	src/MQTTClient.h	/^	const char* message;$/;"	m	struct:__anon66
message	src/samples/pubsub_opts.h	/^	char* message;$/;"	m	struct:pubsub_opts
messageArrived	src/samples/MQTTAsync_publish.c	/^int messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* m)$/;"	f
messageArrived	src/samples/paho_c_pub.c	/^int messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* m)$/;"	f
messageArrived	src/samples/paho_c_sub.c	/^int messageArrived(void *context, char *topicName, int topicLen, MQTTAsync_message *message)$/;"	f
messageArrived	src/samples/paho_cs_pub.c	/^int messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* m)$/;"	f
messageArrived	test/python/mqttasync_module.c	/^int messageArrived(void* context, char* topicName, int topicLen,$/;"	f
messageArrived	test/python/mqttclient_module.c	/^int messageArrived(void* context, char* topicName, int topicLen,$/;"	f
messageArrived	test/python/test1.py	/^def messageArrived(context, topicName, message):$/;"	f
messageArrived	test/python/test2.py	/^def messageArrived(context, topicName, message):$/;"	f
messageArrived	test/python/test_offline.py	/^def messageArrived(context, topicName, message):$/;"	f
messageArrived	test/sync_client_test.c	/^int messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* m)$/;"	f
messageArrived	test/test10.c	/^int messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* message)$/;"	f
messageArrived	test/test6.c	/^int messageArrived(void* context, char* topicName, int topicLen,$/;"	f
messageCount	test/sync_client_test.c	/^int messageCount = 0;$/;"	v
messageIDCompare	src/MQTTProtocolClient.c	/^int messageIDCompare(void* a, void* b)$/;"	f
messageQueue	src/Clients.h	/^	List* messageQueue;             \/**< inbound complete but undelivered messages *\/$/;"	m	struct:__anon19
messageQueue	test/test3.c	/^	void* messageQueue;$/;"	m	struct:__anon128	file:
messageSent	test/test6.c	/^void messageSent(void* context, MQTTAsync_successData* response)$/;"	f
messageStruct	test/sync_client_test.c	/^} messageStruct;$/;"	t	typeref:struct:__anon101	file:
message_count	test/test11.c	/^	int message_count;$/;"	m	struct:__anon127	file:
message_count	test/test4.c	/^	int	message_count;$/;"	m	struct:__anon99	file:
message_count	test/test45.c	/^	int	message_count;$/;"	m	struct:__anon112	file:
message_count	test/test5.c	/^	int message_count;$/;"	m	struct:Options	file:
message_count	test/test8.c	/^	int	message_count;$/;"	m	struct:__anon118	file:
message_expiry	src/samples/pubsub_opts.h	/^	int message_expiry;$/;"	m	struct:pubsub_opts
messagesArrived	test/sync_client_test.c	/^messageStruct messagesArrived[1000];$/;"	v
messagesSent	test/test6.c	/^int messagesSent = 0;$/;"	v
messages_arrived	test/test10.c	/^	int messages_arrived;$/;"	m	struct:__anon107	file:
messages_arrived	test/test10.c	/^	int messages_arrived;$/;"	m	struct:__anon108	file:
messages_arrived	test/test10.c	/^	int messages_arrived;$/;"	m	struct:__anon109	file:
messages_arrived	test/test10.c	/^static int messages_arrived = 0;$/;"	v	file:
messages_arrived	test/test11.c	/^	int messages_arrived;$/;"	m	struct:__anon120	file:
messages_arrived	test/test11.c	/^	int messages_arrived;$/;"	m	struct:__anon121	file:
messages_arrived	test/test11.c	/^	int messages_arrived;$/;"	m	struct:__anon122	file:
messages_arrived	test/test11.c	/^	int messages_arrived;$/;"	m	struct:__anon123	file:
messages_arrived	test/test11.c	/^	int messages_arrived;$/;"	m	struct:__anon125	file:
messages_arrived	test/test11.c	/^	int messages_arrived;$/;"	m	struct:__anon126	file:
messages_arrived	test/test11.c	/^	int messages_arrived;$/;"	m	struct:__anon127	file:
min	src/Log.c	64;"	d	file:
min	src/MQTTAsync.c	88;"	d	file:
min	src/MQTTPacket.c	44;"	d	file:
min	src/MQTTProtocolClient.c	44;"	d	file:
min	test/test45.c	979;"	d	file:
minRetryInterval	src/MQTTAsync.c	/^	int minRetryInterval;$/;"	m	struct:MQTTAsync_struct	file:
minRetryInterval	src/MQTTAsync.h	/^	int minRetryInterval;$/;"	m	struct:__anon93
mod_s	src/Socket.c	/^Sockets mod_s;$/;"	v
mqsleep	src/Thread.c	460;"	d	file:
mqsleep	src/Thread.c	468;"	d	file:
mqsleep	src/Thread.c	477;"	d	file:
mqsleep	test/sync_client_test.c	183;"	d	file:
mqsleep	test/test1.c	176;"	d	file:
mqsleep	test/test1.c	184;"	d	file:
mqsleep	test/test1.c	193;"	d	file:
mqsleep	test/test10.c	195;"	d	file:
mqsleep	test/test10.c	203;"	d	file:
mqsleep	test/test10.c	212;"	d	file:
mqsleep	test/test11.c	153;"	d	file:
mqsleep	test/test11.c	161;"	d	file:
mqsleep	test/test11.c	170;"	d	file:
mqsleep	test/test15.c	182;"	d	file:
mqsleep	test/test15.c	190;"	d	file:
mqsleep	test/test15.c	199;"	d	file:
mqsleep	test/test2.c	167;"	d	file:
mqsleep	test/test2.c	175;"	d	file:
mqsleep	test/test2.c	184;"	d	file:
mqsleep	test/test3.c	295;"	d	file:
mqsleep	test/test3.c	303;"	d	file:
mqsleep	test/test3.c	312;"	d	file:
mqsleep	test/test4.c	152;"	d	file:
mqsleep	test/test4.c	160;"	d	file:
mqsleep	test/test4.c	169;"	d	file:
mqsleep	test/test5.c	260;"	d	file:
mqsleep	test/test5.c	268;"	d	file:
mqsleep	test/test5.c	277;"	d	file:
mqsleep	test/test8.c	128;"	d	file:
mqsleep	test/test8.c	136;"	d	file:
mqsleep	test/test8.c	145;"	d	file:
mqsleep	test/test_mqtt4async.c	169;"	d	file:
mqsleep	test/test_mqtt4async.c	177;"	d	file:
mqsleep	test/test_mqtt4async.c	186;"	d	file:
mqsleep	test/test_mqtt4sync.c	169;"	d	file:
mqsleep	test/test_mqtt4sync.c	177;"	d	file:
mqsleep	test/test_mqtt4sync.c	186;"	d	file:
mqsleep	test/test_sync_session_present.c	220;"	d	file:
mqsleep	test/test_sync_session_present.c	228;"	d	file:
mqsleep	test/test_sync_session_present.c	237;"	d	file:
mqttasync_mutex	src/MQTTAsync.c	/^static mutex_type mqttasync_mutex = &mqttasync_mutex_store;$/;"	v	file:
mqttasync_mutex	src/MQTTAsync.c	/^static mutex_type mqttasync_mutex = NULL;$/;"	v	file:
mqttasync_mutex_store	src/MQTTAsync.c	/^static pthread_mutex_t mqttasync_mutex_store = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mqttclient_mutex	src/MQTTClient.c	/^static mutex_type mqttclient_mutex = &mqttclient_mutex_store;$/;"	v	file:
mqttclient_mutex	src/MQTTClient.c	/^static mutex_type mqttclient_mutex = NULL;$/;"	v	file:
mqttclient_mutex_store	src/MQTTClient.c	/^static pthread_mutex_t mqttclient_mutex_store = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mqttcommand_mutex	src/MQTTAsync.c	/^static mutex_type mqttcommand_mutex = &mqttcommand_mutex_store;$/;"	v	file:
mqttcommand_mutex	src/MQTTAsync.c	/^static mutex_type mqttcommand_mutex = NULL;$/;"	v	file:
mqttcommand_mutex_store	src/MQTTAsync.c	/^static pthread_mutex_t mqttcommand_mutex_store = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mqttv3_connect	test/python/mqttasync_module.c	/^static PyObject* mqttv3_connect(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_connect	test/python/mqttclient_module.c	/^static PyObject* mqttv3_connect(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_create	test/python/mqttasync_module.c	/^static PyObject* mqttv3_create(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_create	test/python/mqttclient_module.c	/^static PyObject* mqttv3_create(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_destroy	test/python/mqttasync_module.c	/^static PyObject* mqttv3_destroy(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_destroy	test/python/mqttclient_module.c	/^static PyObject* mqttv3_destroy(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_disconnect	test/python/mqttasync_module.c	/^static PyObject* mqttv3_disconnect(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_disconnect	test/python/mqttclient_module.c	/^static PyObject* mqttv3_disconnect(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_getPendingDeliveryTokens	test/python/mqttclient_module.c	/^static PyObject* mqttv3_getPendingDeliveryTokens(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_getPendingTokens	test/python/mqttasync_module.c	/^static PyObject* mqttv3_getPendingTokens(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_isConnected	test/python/mqttasync_module.c	/^static PyObject* mqttv3_isConnected(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_isConnected	test/python/mqttclient_module.c	/^static PyObject* mqttv3_isConnected(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_publish	test/python/mqttclient_module.c	/^static PyObject* mqttv3_publish(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_publishMessage	test/python/mqttclient_module.c	/^static PyObject* mqttv3_publishMessage(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_receive	test/python/mqttclient_module.c	/^static PyObject* mqttv3_receive(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_send	test/python/mqttasync_module.c	/^static PyObject* mqttv3_send(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_sendMessage	test/python/mqttasync_module.c	/^static PyObject* mqttv3_sendMessage(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_setcallbacks	test/python/mqttasync_module.c	/^static PyObject* mqttv3_setcallbacks(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_setcallbacks	test/python/mqttclient_module.c	/^static PyObject* mqttv3_setcallbacks(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_setconnected	test/python/mqttasync_module.c	/^static PyObject* mqttv3_setconnected(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_subscribe	test/python/mqttasync_module.c	/^static PyObject* mqttv3_subscribe(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_subscribe	test/python/mqttclient_module.c	/^static PyObject* mqttv3_subscribe(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_subscribeMany	test/python/mqttasync_module.c	/^static PyObject* mqttv3_subscribeMany(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_subscribeMany	test/python/mqttclient_module.c	/^static PyObject* mqttv3_subscribeMany(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_unsubscribe	test/python/mqttasync_module.c	/^static PyObject* mqttv3_unsubscribe(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_unsubscribe	test/python/mqttclient_module.c	/^static PyObject* mqttv3_unsubscribe(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_unsubscribeMany	test/python/mqttasync_module.c	/^static PyObject* mqttv3_unsubscribeMany(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_unsubscribeMany	test/python/mqttclient_module.c	/^static PyObject* mqttv3_unsubscribeMany(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_waitForCompletion	test/python/mqttasync_module.c	/^static PyObject* mqttv3_waitForCompletion(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_waitForCompletion	test/python/mqttclient_module.c	/^static PyObject* mqttv3_waitForCompletion(PyObject* self, PyObject *args)$/;"	f	file:
mqttv3_yield	test/python/mqttclient_module.c	/^static PyObject* mqttv3_yield(PyObject* self, PyObject *args)$/;"	f	file:
msg	src/MQTTAsync.c	/^	MQTTAsync_message* msg;$/;"	m	struct:__anon3	file:
msg	src/MQTTClient.c	/^	MQTTClient_message* msg;$/;"	m	struct:__anon27	file:
msg	src/MQTTPersistence.h	/^	MQTTPersistence_message* msg;$/;"	m	struct:__anon58
msgID	src/Clients.h	/^	int msgID;                      \/**< the MQTT message id *\/$/;"	m	struct:__anon19
msgID	test/test3.c	/^	int msgID;$/;"	m	struct:__anon128	file:
msgId	src/MQTTPacket.h	/^	int msgId;		\/**< MQTT message id *\/$/;"	m	struct:__anon44
msgId	src/MQTTPacket.h	/^	int msgId;		\/**< MQTT message id *\/$/;"	m	struct:__anon45
msgId	src/MQTTPacket.h	/^	int msgId;		\/**< MQTT message id *\/$/;"	m	struct:__anon46
msgId	src/MQTTPacket.h	/^	int msgId;		\/**< MQTT message id *\/$/;"	m	struct:__anon47
msgType	test/python/mqttasync_module.c	/^	enum msgTypes msgType;$/;"	m	struct:__anon116	typeref:enum:__anon116::msgTypes	file:
msgTypes	src/MQTTPacket.h	/^enum msgTypes$/;"	g
msgTypes	test/python/mqttasync_module.c	/^enum msgTypes$/;"	g	file:
msgTypes	test/test10.c	/^enum msgTypes$/;"	g	file:
msg_buf	src/Log.c	/^static char msg_buf[512];$/;"	v	file:
msg_count	test/test11.c	/^	int msg_count;$/;"	m	struct:__anon120	file:
msgarrvd	src/samples/MQTTAsync_subscribe.c	/^int msgarrvd(void *context, char *topicName, int topicLen, MQTTAsync_message *message)$/;"	f
msgarrvd	src/samples/MQTTClient_publish_async.c	/^int msgarrvd(void *context, char *topicName, int topicLen, MQTTClient_message *message)$/;"	f
msgarrvd	src/samples/MQTTClient_subscribe.c	/^int msgarrvd(void *context, char *topicName, int topicLen, MQTTClient_message *message)$/;"	f
msgarrvd	test_package/test_package.c	/^int msgarrvd(void *context, char *topicName, int topicLen, MQTTClient_message *message)$/;"	f
msgid	src/Clients.h	/^	int msgid;$/;"	m	struct:__anon16
msgid	src/MQTTAsync.h	/^	int msgid;$/;"	m	struct:__anon75
msgid	src/MQTTClient.h	/^	int msgid;$/;"	m	struct:__anon64
msgid	src/MQTTPersistence.h	/^	int msgid;$/;"	m	struct:__anon57
msgs_received	src/MQTTProtocol.h	/^	unsigned int msgs_received;$/;"	m	struct:__anon98
msgs_sent	src/MQTTProtocol.h	/^	unsigned int msgs_sent;$/;"	m	struct:__anon98
msleep	test/sync_client_test.c	175;"	d	file:
msleep	test/sync_client_test.c	192;"	d	file:
multiThread_arrivedcount	test/test3.c	/^volatile int multiThread_arrivedcount = 0;$/;"	v
multiThread_arrivedcount	test/test5.c	/^volatile int multiThread_arrivedcount = 0;$/;"	v
multiThread_deliveryComplete	test/test3.c	/^void multiThread_deliveryComplete(void* context, MQTTClient_deliveryToken dt)$/;"	f
multiThread_deliveryComplete	test/test5.c	/^void multiThread_deliveryComplete(void* context, MQTTAsync_token dt)$/;"	f
multiThread_deliveryCompleted	test/test3.c	/^int multiThread_deliveryCompleted = 0;$/;"	v
multiThread_deliveryCompleted	test/test5.c	/^int multiThread_deliveryCompleted = 0;$/;"	v
multiThread_messageArrived	test/test3.c	/^int multiThread_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* m)$/;"	f
multiThread_messageArrived	test/test5.c	/^int multiThread_messageArrived(void* context, char* topicName, int topicLen,$/;"	f
multiThread_pubmsg	test/test3.c	/^MQTTClient_message multiThread_pubmsg = MQTTClient_message_initializer;$/;"	v
multiThread_pubmsg	test/test5.c	/^MQTTAsync_message multiThread_pubmsg = MQTTAsync_message_initializer;$/;"	v
multiThread_sendAndReceive	test/test3.c	/^void multiThread_sendAndReceive(MQTTClient* c, int qos, char* test_topic)$/;"	f
mutex	src/Thread.h	/^	typedef struct { pthread_cond_t cond; pthread_mutex_t mutex; } cond_type_struct;$/;"	m	struct:__anon2
mutex_secondary	test/thread.c	/^static thread_return_type WINAPI mutex_secondary(void* n)$/;"	f	file:
mutex_type	src/mutex_type.h	19;"	d
mutex_type	src/mutex_type.h	22;"	d
mutual_auth_connection	test/test3.c	/^	char mutual_auth_connection[100];   \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
mutual_auth_connection	test/test5.c	/^	char mutual_auth_connection[100];   \/**< connection to system under test. *\/$/;"	m	struct:Options	file:
myWindow	test/mqttsas.py	/^myWindow = None$/;"	v
my_thread	src/StackTrace.c	/^static threadEntry *my_thread = NULL;$/;"	v	file:
myassert	src/Thread.c	/^void myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myassert	test/sync_client_test.c	/^void myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myassert	test/test1.c	/^void myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myassert	test/test10.c	/^void myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myassert	test/test11.c	/^void myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myassert	test/test15.c	/^void myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myassert	test/test2.c	/^void myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myassert	test/test3.c	/^int myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myassert	test/test4.c	/^void myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myassert	test/test45.c	/^void myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myassert	test/test5.c	/^void myassert(char* filename, int lineno, char* description, int value,$/;"	f
myassert	test/test8.c	/^void myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myassert	test/test9.c	/^void myassert(char* filename, int lineno, char* description, int value,$/;"	f
myassert	test/test95.c	/^void myassert(char* filename, int lineno, char* description, int value,$/;"	f
myassert	test/test_connect_destroy.c	/^void myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myassert	test/test_issue373.c	/^void myassert(char* filename, int lineno, char* description, int value,$/;"	f
myassert	test/test_mqtt4async.c	/^void myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myassert	test/test_mqtt4sync.c	/^void myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myassert	test/test_sync_session_present.c	/^void myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myassert	test/thread.c	/^void myassert(char* filename, int lineno, char* description, int value, char* format, ...)$/;"	f
myclientid	test/python/test1.py	/^myclientid = None$/;"	v
myclientid	test/python/test2.py	/^myclientid = None$/;"	v
myclientid	test/python/test_offline.py	/^myclientid = None$/;"	v
myconnect	src/samples/paho_c_pub.c	/^void myconnect(MQTTAsync client)$/;"	f
myconnect	src/samples/paho_cs_pub.c	/^int myconnect(MQTTClient* client)$/;"	f
myconnect	src/samples/paho_cs_sub.c	/^int myconnect(MQTTClient* client)$/;"	f
myfree	src/Heap.c	/^void myfree(char* file, int line, void* p)$/;"	f
mymalloc	src/Heap.c	/^void* mymalloc(char* file, int line, size_t size)$/;"	f
mypublish	src/samples/paho_c_pub.c	/^int mypublish(MQTTAsync client, int datalen, char* data)$/;"	f
myrealloc	src/Heap.c	/^void *myrealloc(char* file, int line, void* p, size_t size)$/;"	f
mysleep	src/samples/paho_c_pub.c	/^void mysleep(int ms)$/;"	f
mysleep	src/samples/paho_c_sub.c	/^void mysleep(int ms)$/;"	f
mysleep	test/test_sync_session_present.c	/^void mysleep(int seconds)$/;"	f
mysleep	test/thread.c	116;"	d	file:
mysleep	test/thread.c	124;"	d	file:
mysleep	test/thread.c	133;"	d	file:
name	src/Log.c	/^	char name[MAX_FUNCTION_NAME_LENGTH + 1];$/;"	m	struct:__anon59	file:
name	src/Log.h	/^	const char* name;$/;"	m	struct:__anon26
name	src/MQTTAsync.h	/^	const char* name; \/**< name string *\/$/;"	m	struct:__anon92
name	src/MQTTClient.h	/^	const char* name;$/;"	m	struct:__anon69
name	src/MQTTProperties.c	/^	const char* name;$/;"	m	struct:__anon73	file:
name	src/MQTTProperties.c	/^  enum MQTTPropertyCodes name;$/;"	m	struct:nameToType	typeref:enum:nameToType::MQTTPropertyCodes	file:
name	src/MQTTReasonCodes.c	/^	const char* name;$/;"	m	struct:__anon52	file:
name	src/StackTrace.c	/^	char name[MAX_FUNCTION_NAME_LENGTH];$/;"	m	struct:__anon21	file:
name	src/samples/pubsub_opts.h	/^		char *name;$/;"	m	struct:pubsub_opts::__anon60
name	src/samples/pubsub_opts.h	/^	const char* name;$/;"	m	struct:__anon61
nameToString	src/MQTTProperties.c	/^} nameToString[] =$/;"	v	typeref:struct:__anon73
nameToString	src/MQTTReasonCodes.c	/^} nameToString[] =$/;"	v	typeref:struct:__anon52	file:
nameToType	src/MQTTProperties.c	/^static struct nameToType$/;"	s	file:
namesToTypes	src/MQTTProperties.c	/^} namesToTypes[] =$/;"	v	typeref:struct:nameToType	file:
net	src/Clients.h	/^	networkHandles net;             \/**< network info for this client *\/$/;"	m	struct:__anon19
net	test/sync_client_test.c	/^	networkHandles net;$/;"	m	struct:__anon103	file:
networkHandles	src/Clients.h	/^} networkHandles;$/;"	t	typeref:struct:__anon18
networkHandles	test/sync_client_test.c	/^} networkHandles;$/;"	t	typeref:struct:__anon102	file:
new_packets	src/MQTTPacket.c	/^pf new_packets[] =$/;"	v
next	src/LinkedList.h	/^							*next;	\/**< pointer to next list element *\/$/;"	m	struct:ListElementStruct	typeref:struct:ListElementStruct::
nextMessageType	src/Clients.h	/^	char nextMessageType;	\/**> PUBREC, PUBREL, PUBCOMP *\/$/;"	m	struct:__anon16
nextOrClose	src/MQTTAsync.c	/^static void nextOrClose(MQTTAsyncs* m, int rc, char* message)$/;"	f	file:
next_index	src/Log.c	/^			next_index = 0;$/;"	v	file:
noBufferedMessages	src/MQTTAsync.c	/^	int noBufferedMessages; \/* the current number of buffered (publish) messages for this client *\/$/;"	m	struct:MQTTAsync_struct	file:
noLocal	src/MQTTSubscribeOpts.h	/^	unsigned char noLocal;$/;"	m	struct:MQTTSubscribe_options
nocert_mutual_auth_connection	test/test3.c	/^	char nocert_mutual_auth_connection[100];$/;"	m	struct:Options	file:
nocert_mutual_auth_connection	test/test5.c	/^	char nocert_mutual_auth_connection[100];$/;"	m	struct:Options	file:
noclients	test/python/test1.py	/^noclients = 4$/;"	v
noclients	test/python/test2.py	/^noclients = 1$/;"	v
noclients	test/python/test_offline.py	/^noclients = 1$/;"	v
nosubscribe_topics	test/sync_client_test.c	/^char* nosubscribe_topics[] = {"nosubscribe",};$/;"	v
now_ts	src/Log.c	/^struct timeb now_ts, last_ts;$/;"	v	typeref:struct:timeb
now_ts	src/Log.c	/^struct timeval now_ts, last_ts;$/;"	v	typeref:struct:timeval
ntohll	src/WebSocket.c	42;"	d	file:
ntohll	src/WebSocket.c	62;"	d	file:
null_message	src/samples/pubsub_opts.h	/^	int null_message;$/;"	m	struct:pubsub_opts
num_clients	test/test4.c	658;"	d	file:
num_clients	test/test45.c	823;"	d	file:
num_clients	test/test5.c	1987;"	d	file:
number	src/Log.c	/^	int number;$/;"	m	struct:__anon59	file:
offline_message_queueing_test	test/sync_client_test.c	/^int offline_message_queueing_test(void)$/;"	f
onConnect	src/samples/MQTTAsync_publish.c	/^void onConnect(void* context, MQTTAsync_successData* response)$/;"	f
onConnect	src/samples/MQTTAsync_subscribe.c	/^void onConnect(void* context, MQTTAsync_successData* response)$/;"	f
onConnect	src/samples/paho_c_pub.c	/^void onConnect(void* context, MQTTAsync_successData* response)$/;"	f
onConnect	src/samples/paho_c_sub.c	/^void onConnect(void* context, MQTTAsync_successData* response)$/;"	f
onConnect5	src/samples/paho_c_pub.c	/^void onConnect5(void* context, MQTTAsync_successData5* response)$/;"	f
onConnect5	src/samples/paho_c_sub.c	/^void onConnect5(void* context, MQTTAsync_successData5* response)$/;"	f
onConnectFailure	src/samples/MQTTAsync_publish.c	/^void onConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
onConnectFailure	src/samples/MQTTAsync_subscribe.c	/^void onConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
onConnectFailure	src/samples/paho_c_pub.c	/^void onConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
onConnectFailure	src/samples/paho_c_sub.c	/^void onConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
onConnectFailure5	src/samples/paho_c_pub.c	/^void onConnectFailure5(void* context, MQTTAsync_failureData5* response)$/;"	f
onConnectFailure5	src/samples/paho_c_sub.c	/^void onConnectFailure5(void* context, MQTTAsync_failureData5* response)$/;"	f
onDisconnect	src/samples/MQTTAsync_publish.c	/^void onDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
onDisconnect	src/samples/MQTTAsync_subscribe.c	/^void onDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
onDisconnect	src/samples/paho_c_pub.c	/^void onDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
onDisconnect	src/samples/paho_c_sub.c	/^void onDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
onDisconnect5	src/samples/paho_c_pub.c	/^void onDisconnect5(void* context, MQTTAsync_successData5* response)$/;"	f
onDisconnectFailure	src/samples/MQTTAsync_publish.c	/^void onDisconnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
onDisconnectFailure	src/samples/MQTTAsync_subscribe.c	/^void onDisconnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
onFailure	src/MQTTAsync.c	/^	MQTTAsync_onFailure* onFailure;$/;"	m	struct:__anon4	file:
onFailure	src/MQTTAsync.h	/^	MQTTAsync_onFailure* onFailure;$/;"	m	struct:MQTTAsync_responseOptions
onFailure	src/MQTTAsync.h	/^	MQTTAsync_onFailure* onFailure;$/;"	m	struct:__anon93
onFailure	src/MQTTAsync.h	/^	MQTTAsync_onFailure* onFailure;$/;"	m	struct:__anon95
onFailure	test/python/mqttasync_module.c	/^	PyObject *onSuccess, *onFailure;$/;"	m	struct:__anon116	file:
onFailure	test/python/mqttasync_module.c	/^void onFailure(void* context, MQTTAsync_failureData* response)$/;"	f
onFailure	test/python/test2.py	/^def onFailure(context, failureData):$/;"	f
onFailure	test/python/test_offline.py	/^def onFailure(context, failureData):$/;"	f
onFailure5	src/MQTTAsync.c	/^	MQTTAsync_onFailure5* onFailure5;$/;"	m	struct:__anon4	file:
onFailure5	src/MQTTAsync.h	/^	MQTTAsync_onFailure5* onFailure5;$/;"	m	struct:MQTTAsync_responseOptions
onFailure5	src/MQTTAsync.h	/^	MQTTAsync_onFailure5* onFailure5;$/;"	m	struct:__anon93
onFailure5	src/MQTTAsync.h	/^	MQTTAsync_onFailure5* onFailure5;$/;"	m	struct:__anon95
onPSKAuth	src/samples/paho_c_pub.c	/^static unsigned int onPSKAuth(const char* hint,$/;"	f	file:
onPSKAuth	test/test3.c	/^static unsigned int onPSKAuth(const char* hint,$/;"	f	file:
onPSKAuth	test/test5.c	/^static unsigned int onPSKAuth(const char* hint,$/;"	f	file:
onPublish	src/samples/paho_c_pub.c	/^void onPublish(void* context, MQTTAsync_successData* response)$/;"	f
onPublish5	src/samples/paho_c_pub.c	/^void onPublish5(void* context, MQTTAsync_successData5* response)$/;"	f
onPublishFailure	src/samples/paho_c_pub.c	/^void onPublishFailure(void* context, MQTTAsync_failureData* response)$/;"	f
onPublishFailure5	src/samples/paho_c_pub.c	/^void onPublishFailure5(void* context, MQTTAsync_failureData5* response)$/;"	f
onSSLError	src/samples/paho_c_pub.c	/^static int onSSLError(const char *str, size_t len, void *context)$/;"	f	file:
onSend	src/samples/MQTTAsync_publish.c	/^void onSend(void* context, MQTTAsync_successData* response)$/;"	f
onSendFailure	src/samples/MQTTAsync_publish.c	/^void onSendFailure(void* context, MQTTAsync_failureData* response)$/;"	f
onSubscribe	src/samples/MQTTAsync_subscribe.c	/^void onSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
onSubscribe	src/samples/paho_c_sub.c	/^void onSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
onSubscribe5	src/samples/paho_c_sub.c	/^void onSubscribe5(void* context, MQTTAsync_successData5* response)$/;"	f
onSubscribeFailure	src/samples/MQTTAsync_subscribe.c	/^void onSubscribeFailure(void* context, MQTTAsync_failureData* response)$/;"	f
onSubscribeFailure	src/samples/paho_c_sub.c	/^void onSubscribeFailure(void* context, MQTTAsync_failureData* response)$/;"	f
onSubscribeFailure5	src/samples/paho_c_sub.c	/^void onSubscribeFailure5(void* context, MQTTAsync_failureData5* response)$/;"	f
onSuccess	src/MQTTAsync.c	/^	MQTTAsync_onSuccess* onSuccess;$/;"	m	struct:__anon4	file:
onSuccess	src/MQTTAsync.h	/^	MQTTAsync_onSuccess* onSuccess;$/;"	m	struct:MQTTAsync_responseOptions
onSuccess	src/MQTTAsync.h	/^	MQTTAsync_onSuccess* onSuccess;$/;"	m	struct:__anon93
onSuccess	src/MQTTAsync.h	/^	MQTTAsync_onSuccess* onSuccess;$/;"	m	struct:__anon95
onSuccess	test/python/mqttasync_module.c	/^	PyObject *onSuccess, *onFailure;$/;"	m	struct:__anon116	file:
onSuccess	test/python/mqttasync_module.c	/^void onSuccess(void* context, MQTTAsync_successData* response)$/;"	f
onSuccess	test/python/test2.py	/^def onSuccess(context, successData):$/;"	f
onSuccess	test/python/test_offline.py	/^def onSuccess(context, successData):$/;"	f
onSuccess5	src/MQTTAsync.c	/^	MQTTAsync_onSuccess5* onSuccess5;$/;"	m	struct:__anon4	file:
onSuccess5	src/MQTTAsync.h	/^	MQTTAsync_onSuccess5* onSuccess5;$/;"	m	struct:MQTTAsync_responseOptions
onSuccess5	src/MQTTAsync.h	/^	MQTTAsync_onSuccess5* onSuccess5;$/;"	m	struct:__anon93
onSuccess5	src/MQTTAsync.h	/^	MQTTAsync_onSuccess5* onSuccess5;$/;"	m	struct:__anon95
one_iteration	test/test6.c	/^void one_iteration(void)$/;"	f
options	test/sync_client_test.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test1.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test10.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test11.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test15.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test2.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test3.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test4.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test45.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test5.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test8.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test9.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test95.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test_connect_destroy.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test_issue373.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test_mqtt4async.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test_mqtt4sync.c	/^} options =$/;"	v	typeref:struct:Options
options	test/test_sync_session_present.c	/^} options =$/;"	v	typeref:struct:Options
options	test/thread.c	/^} options =$/;"	v	typeref:struct:Options
optlist	src/MQTTAsync.c	/^			MQTTSubscribe_options* optlist;$/;"	m	struct:__anon4::__anon5::__anon6	file:
opts	src/MQTTAsync.c	/^			MQTTSubscribe_options opts;$/;"	m	struct:__anon4::__anon5::__anon6	file:
opts	src/samples/paho_c_pub.c	/^struct pubsub_opts opts =$/;"	v	typeref:struct:pubsub_opts
opts	src/samples/paho_c_sub.c	/^struct pubsub_opts opts =$/;"	v	typeref:struct:pubsub_opts
opts	src/samples/paho_cs_pub.c	/^struct pubsub_opts opts =$/;"	v	typeref:struct:pubsub_opts
opts	src/samples/paho_cs_sub.c	/^struct pubsub_opts opts =$/;"	v	typeref:struct:pubsub_opts
opts	test/test6.c	/^} opts =$/;"	v	typeref:struct:__anon111
outboundMsgs	src/Clients.h	/^	List* outboundMsgs;				\/**< outbound in flight messages *\/$/;"	m	struct:__anon19
outboundMsgs	test/test3.c	/^	void* outboundMsgs;				\/**< in flight *\/$/;"	m	struct:__anon128	file:
output	test/test1.c	/^char output[3000];$/;"	v
output	test/test10.c	/^char output[3000];$/;"	v
output	test/test11.c	/^char output[3000];$/;"	v
output	test/test15.c	/^char output[3000];$/;"	v
output	test/test2.c	/^char output[3000];$/;"	v
output	test/test3.c	/^char output[3000];$/;"	v
output	test/test4.c	/^char output[3000];$/;"	v
output	test/test45.c	/^char output[3000];$/;"	v
output	test/test5.c	/^char output[3000];$/;"	v
output	test/test9.c	/^char output[3000];$/;"	v
output	test/test95.c	/^char output[3000];$/;"	v
output	test/test_connect_destroy.c	/^char output[3000];$/;"	v
output	test/test_mqtt4async.c	/^char output[3000];$/;"	v
output	test/test_mqtt4sync.c	/^char output[3000];$/;"	v
output	test/test_sync_session_present.c	/^char output[3000];$/;"	v
output	test/thread.c	/^char output[3000];$/;"	v
overlapping_subscriptions_test	test/sync_client_test.c	/^int overlapping_subscriptions_test(void)$/;"	f
p	src/MQTTProtocol.h	/^	Publications* p;$/;"	m	struct:__anon97
pack	src/MQTTAsync.c	/^	MQTTPacket* pack;$/;"	m	struct:MQTTAsync_struct	file:
pack	src/MQTTClient.c	/^	MQTTPacket* pack;$/;"	m	struct:__anon28	file:
pack	test/MQTTV311.py	/^  def pack(self):$/;"	m	class:Connacks
pack	test/MQTTV311.py	/^  def pack(self):$/;"	m	class:Connects
pack	test/MQTTV311.py	/^  def pack(self):$/;"	m	class:Packets
pack	test/MQTTV311.py	/^  def pack(self):$/;"	m	class:Pubacks
pack	test/MQTTV311.py	/^  def pack(self):$/;"	m	class:Pubcomps
pack	test/MQTTV311.py	/^  def pack(self):$/;"	m	class:Publishes
pack	test/MQTTV311.py	/^  def pack(self):$/;"	m	class:Pubrecs
pack	test/MQTTV311.py	/^  def pack(self):$/;"	m	class:Pubrels
pack	test/MQTTV311.py	/^  def pack(self):$/;"	m	class:Subacks
pack	test/MQTTV311.py	/^  def pack(self):$/;"	m	class:Subscribes
pack	test/MQTTV311.py	/^  def pack(self):$/;"	m	class:Unsubacks
pack	test/MQTTV311.py	/^  def pack(self):$/;"	m	class:Unsubscribes
pack	test/MQTTV311.py	/^  def pack(self, length):$/;"	m	class:FixedHeaders
pack	test/MQTTV3112.py	/^  def pack(self):    $/;"	m	class:Connects
pack	test/MQTTV3112.py	/^  def pack(self):$/;"	m	class:Connacks
pack	test/MQTTV3112.py	/^  def pack(self):$/;"	m	class:Packets
pack	test/MQTTV3112.py	/^  def pack(self):$/;"	m	class:Pubacks
pack	test/MQTTV3112.py	/^  def pack(self):$/;"	m	class:Pubcomps
pack	test/MQTTV3112.py	/^  def pack(self):$/;"	m	class:Publishes
pack	test/MQTTV3112.py	/^  def pack(self):$/;"	m	class:Pubrecs
pack	test/MQTTV3112.py	/^  def pack(self):$/;"	m	class:Pubrels
pack	test/MQTTV3112.py	/^  def pack(self):$/;"	m	class:Subacks
pack	test/MQTTV3112.py	/^  def pack(self):$/;"	m	class:Subscribes
pack	test/MQTTV3112.py	/^  def pack(self):$/;"	m	class:Unsubacks
pack	test/MQTTV3112.py	/^  def pack(self):$/;"	m	class:Unsubscribes
pack	test/MQTTV3112.py	/^  def pack(self, length):$/;"	m	class:FixedHeaders
pack	test/MQTTV5.py	/^  def pack(self):$/;"	m	class:Acks
pack	test/MQTTV5.py	/^  def pack(self):$/;"	m	class:Auths
pack	test/MQTTV5.py	/^  def pack(self):$/;"	m	class:Connacks
pack	test/MQTTV5.py	/^  def pack(self):$/;"	m	class:Connects
pack	test/MQTTV5.py	/^  def pack(self):$/;"	m	class:Disconnects
pack	test/MQTTV5.py	/^  def pack(self):$/;"	m	class:Packets
pack	test/MQTTV5.py	/^  def pack(self):$/;"	m	class:Properties
pack	test/MQTTV5.py	/^  def pack(self):$/;"	m	class:Publishes
pack	test/MQTTV5.py	/^  def pack(self):$/;"	m	class:ReasonCodes
pack	test/MQTTV5.py	/^  def pack(self):$/;"	m	class:SubscribeOptions
pack	test/MQTTV5.py	/^  def pack(self):$/;"	m	class:Subscribes
pack	test/MQTTV5.py	/^  def pack(self):$/;"	m	class:UnsubSubacks
pack	test/MQTTV5.py	/^  def pack(self):$/;"	m	class:Unsubscribes
pack	test/MQTTV5.py	/^  def pack(self, length):$/;"	m	class:FixedHeaders
pack	test/sync_client_test.c	/^	void* pack;$/;"	m	struct:__anon104	file:
pack	test/test3.c	/^	void* pack;$/;"	m	struct:__anon129	file:
packetNames	test/MQTTV311.py	/^"Pingreq", "Pingresp", "Disconnect"]$/;"	v
packetNames	test/MQTTV3112.py	/^"Pingreq", "Pingresp", "Disconnect"]$/;"	v
packet_names	src/MQTTPacket.c	/^static const char *packet_names[] =$/;"	v	file:
packet_type	src/MQTTAsync.h	/^	int packet_type;$/;"	m	struct:__anon77
packet_type	test/test10.c	/^	int packet_type;$/;"	m	struct:__anon106	file:
pad	src/SHA1.c	/^static unsigned char pad[64] = {$/;"	v	file:
paho_mqtt3a	test/python/setup.py	/^paho_mqtt3a = Extension('paho_mqtt3a',$/;"	v
paho_mqtt3c	test/python/setup.py	/^paho_mqtt3c = Extension('paho_mqtt3c',$/;"	v
parent	src/Tree.h	/^	struct NodeStruct *parent,   \/**< pointer to parent tree node, in case we need it *\/$/;"	m	struct:NodeStruct	typeref:struct:NodeStruct::NodeStruct
password	src/Clients.h	/^	const void* password;					\/**< MQTT v3.1 binary password *\/$/;"	m	struct:__anon19
password	src/MQTTAsync.h	/^	const char* password;$/;"	m	struct:__anon93
password	src/MQTTClient.h	/^	const char* password;$/;"	m	struct:__anon70
password	src/MQTTPacket.h	/^			bool password : 1; 			\/**< 3.1 password *\/$/;"	m	struct:__anon35::__anon36::__anon37
password	src/MQTTPacket.h	/^			bool password : 1; 			\/**< 3.1 password *\/$/;"	m	struct:__anon35::__anon36::__anon38
password	src/samples/pubsub_opts.h	/^	char* password;$/;"	m	struct:pubsub_opts
password	test/sync_client_test.c	/^	char* password;					\/**< MQTT v3.1 password *\/$/;"	m	struct:__anon103	file:
password	test/sync_client_test.c	/^	char* password;$/;"	m	struct:Options	file:
password	test/test3.c	/^	char* password;					\/**< MQTT v3.1 password *\/$/;"	m	struct:__anon128	file:
password	test/test6.c	/^	char* password;$/;"	m	struct:__anon111	file:
password	test/test_sync_session_present.c	/^    char* password;$/;"	m	struct:Options	file:
passwordlen	src/Clients.h	/^	int passwordlen;              \/**< MQTT password length *\/$/;"	m	struct:__anon19
payload	src/Clients.h	/^	char* payload;$/;"	m	struct:__anon15
payload	src/Clients.h	/^	void *payload;$/;"	m	struct:__anon17
payload	src/MQTTAsync.c	/^			void* payload;$/;"	m	struct:__anon4::__anon5::__anon8	file:
payload	src/MQTTAsync.h	/^	void* payload;$/;"	m	struct:__anon75
payload	src/MQTTAsync.h	/^	} payload;$/;"	m	struct:__anon89	typeref:struct:__anon89::__anon90
payload	src/MQTTClient.h	/^	void* payload;$/;"	m	struct:__anon64
payload	src/MQTTClient.h	/^	} payload;$/;"	m	struct:__anon66	typeref:struct:__anon66::__anon67
payload	src/MQTTPacket.h	/^	char* payload;	\/**< binary payload, length delimited *\/$/;"	m	struct:__anon46
payload	src/MQTTPersistence.h	/^	void* payload;$/;"	m	struct:__anon57
payloadlen	src/Clients.h	/^	int payloadlen;$/;"	m	struct:__anon15
payloadlen	src/Clients.h	/^	int payloadlen;$/;"	m	struct:__anon17
payloadlen	src/MQTTAsync.c	/^			int payloadlen;$/;"	m	struct:__anon4::__anon5::__anon8	file:
payloadlen	src/MQTTAsync.h	/^	int payloadlen;$/;"	m	struct:__anon75
payloadlen	src/MQTTClient.h	/^	int payloadlen;$/;"	m	struct:__anon64
payloadlen	src/MQTTPacket.h	/^	int payloadlen;	\/**< payload length *\/$/;"	m	struct:__anon46
payloadlen	src/MQTTPersistence.h	/^	int payloadlen;$/;"	m	struct:__anon57
pclear	src/MQTTClientPersistence.h	/^	Persistence_clear pclear;$/;"	m	struct:__anon56
pclose	src/MQTTClientPersistence.h	/^	Persistence_close pclose;$/;"	m	struct:__anon56
pcontainskey	src/MQTTClientPersistence.h	/^	Persistence_containskey pcontainskey;$/;"	m	struct:__anon56
pem_passwd_cb	src/SSLSocket.c	/^int pem_passwd_cb(char* buf, int size, int rwflag, void* userdata)$/;"	f
pendingMessageCnt	test/test_issue373.c	/^int pendingMessageCnt = 0; \/* counter of messages which are currently queued for publish *\/$/;"	v
pendingMessageCntMax	test/test_issue373.c	/^int pendingMessageCntMax = 0;$/;"	v
pending_reads	src/SSLSocket.c	/^static List pending_reads = {NULL, NULL, NULL, 0, 0};$/;"	v	file:
pending_socketcompare	src/SocketBuffer.c	/^int pending_socketcompare(void* a, void* b)$/;"	f
pending_write	src/MQTTAsync.c	/^	MQTTAsync_command* pending_write;       \/* Is there a socket write pending? *\/$/;"	m	struct:MQTTAsync_struct	file:
pending_write	src/MQTTProtocol.h	/^} pending_write;$/;"	t	typeref:struct:__anon97
pending_writes	src/MQTTProtocol.h	/^	List pending_writes; \/* for qos 0 writes not complete *\/$/;"	m	struct:__anon98
pending_writes	src/SocketBuffer.h	/^} pending_writes;$/;"	t	typeref:struct:__anon30
pending_wset	src/Socket.h	/^	fd_set pending_wset; \/**< socket pending write set for select *\/$/;"	m	struct:__anon24
persistence	src/Clients.h	/^	MQTTClient_persistence* persistence; \/**< a persistence implementation *\/$/;"	m	struct:__anon19
persistence	test/test3.c	/^	MQTTClient_persistence* persistence; \/* a persistence implementation *\/$/;"	m	struct:__anon128	file:
persistence	test/test6.c	/^	int persistence;$/;"	m	struct:__anon111	file:
persistenceStore	test/test3.c	/^char persistenceStore[1024];$/;"	v
persistenceStore	test/test3.c	/^char* persistenceStore = NULL;$/;"	v
pf	src/MQTTPacket.h	/^typedef void* (*pf)(int, unsigned char, char*, size_t);$/;"	t
pget	src/MQTTClientPersistence.h	/^	Persistence_get pget;$/;"	m	struct:__anon56
phandle	src/Clients.h	/^	void* phandle;                  \/**< the persistence handle *\/$/;"	m	struct:__anon19
phandle	test/test3.c	/^	void* phandle;  \/* the persistence handle *\/$/;"	m	struct:__anon128	file:
ping_outstanding	src/Clients.h	/^	unsigned int ping_outstanding : 1;$/;"	m	struct:__anon19
ping_outstanding	test/sync_client_test.c	/^	unsigned int ping_outstanding : 1;$/;"	m	struct:__anon103	file:
ping_outstanding	test/test3.c	/^	unsigned int ping_outstanding : 1;$/;"	m	struct:__anon128	file:
pkeys	src/MQTTClientPersistence.h	/^	Persistence_keys pkeys;$/;"	m	struct:__anon56
popen	src/MQTTClientPersistence.h	/^	Persistence_open popen;$/;"	m	struct:__anon56
port	src/samples/pubsub_opts.h	/^	char* port;$/;"	m	struct:pubsub_opts
pos	src/WebSocket.c	/^	size_t pos; \/**< current position within the buffer *\/$/;"	m	struct:ws_frame	file:
pput	src/MQTTClientPersistence.h	/^	Persistence_put pput;$/;"	m	struct:__anon56
prefix	Makefile	/^	prefix = \/usr\/local$/;"	m
premove	src/MQTTClientPersistence.h	/^	Persistence_remove premove;$/;"	m	struct:__anon56
prev	src/LinkedList.h	/^	struct ListElementStruct *prev, \/**< pointer to previous list element *\/$/;"	m	struct:ListElementStruct	typeref:struct:ListElementStruct::ListElementStruct
printEyecatchers	src/MQTTVersion.c	/^void printEyecatchers(char* filename)$/;"	f
printVersionInfo	src/MQTTVersion.c	/^int printVersionInfo(MQTTAsync_nameValue* info)$/;"	f
printVersionInfo	src/samples/pubsub_opts.c	/^int printVersionInfo(pubsub_opts_nameValue* info)$/;"	f
privateKey	src/MQTTAsync.h	/^	const char* privateKey;$/;"	m	struct:__anon91
privateKey	src/MQTTClient.h	/^	const char* privateKey;$/;"	m	struct:__anon68
privateKeyPassword	src/MQTTAsync.h	/^	const char* privateKeyPassword;$/;"	m	struct:__anon91
privateKeyPassword	src/MQTTClient.h	/^	const char* privateKeyPassword;$/;"	m	struct:__anon68
process_doxygen	Makefile	/^define process_doxygen$/;"	m
properties	src/Clients.h	/^	MQTTProperties properties;$/;"	m	struct:__anon16
properties	src/MQTTAsync.c	/^	MQTTProperties properties;$/;"	m	struct:__anon4	file:
properties	src/MQTTAsync.h	/^	MQTTProperties properties;  	        \/**< MQTT V5 properties returned, if any *\/$/;"	m	struct:__anon82
properties	src/MQTTAsync.h	/^	MQTTProperties properties;$/;"	m	struct:MQTTAsync_responseOptions
properties	src/MQTTAsync.h	/^	MQTTProperties properties;$/;"	m	struct:__anon75
properties	src/MQTTAsync.h	/^	MQTTProperties properties;$/;"	m	struct:__anon77
properties	src/MQTTAsync.h	/^	MQTTProperties properties;$/;"	m	struct:__anon95
properties	src/MQTTClient.c	/^	MQTTProperties* properties;$/;"	m	struct:props_rc_parms	file:
properties	src/MQTTClient.h	/^	MQTTProperties properties;$/;"	m	struct:__anon64
properties	src/MQTTClient.h	/^	MQTTProperties* properties;         \/* optionally, the MQTT 5.0 properties returned *\/$/;"	m	struct:MQTTResponse
properties	src/MQTTPacket.h	/^	MQTTProperties properties; \/**< MQTT 5.0 properties.  Not used for MQTT < 5.0 *\/$/;"	m	struct:__anon39
properties	src/MQTTPacket.h	/^	MQTTProperties properties; \/**< MQTT 5.0 properties.  Not used for MQTT < 5.0 *\/$/;"	m	struct:__anon44
properties	src/MQTTPacket.h	/^	MQTTProperties properties; \/**< MQTT 5.0 properties.  Not used for MQTT < 5.0 *\/$/;"	m	struct:__anon45
properties	src/MQTTPacket.h	/^	MQTTProperties properties; \/**< MQTT 5.0 properties.  Not used for MQTT < 5.0 *\/$/;"	m	struct:__anon46
properties	src/MQTTPacket.h	/^	MQTTProperties properties; \/**< MQTT 5.0 properties.  Not used for MQTT < 5.0 *\/$/;"	m	struct:__anon47
properties	src/MQTTPersistence.h	/^	MQTTProperties properties;$/;"	m	struct:__anon57
property	src/samples/paho_c_pub.c	/^MQTTProperty property;$/;"	v
props	src/samples/paho_c_pub.c	/^MQTTProperties props = MQTTProperties_initializer;$/;"	v
props_rc_parms	src/MQTTClient.c	/^struct props_rc_parms$/;"	s	file:
protocol_message_list	src/Messages.c	/^static const char *protocol_message_list[] =$/;"	v	file:
proxy_connection	test/test1.c	/^	char* proxy_connection;$/;"	m	struct:Options	file:
proxy_connection	test/test10.c	/^	char* proxy_connection;$/;"	m	struct:Options	file:
proxy_connection	test/test15.c	/^	char* proxy_connection;$/;"	m	struct:Options	file:
proxy_connection	test/test9.c	/^	char* proxy_connection;      \/**< connection to proxy *\/$/;"	m	struct:Options	file:
proxy_connection	test/test95.c	/^	char* proxy_connection;      \/**< connection to proxy *\/$/;"	m	struct:Options	file:
proxy_connection	test/test_issue373.c	/^	char* proxy_connection;      \/**< connection to proxy *\/$/;"	m	struct:Options	file:
proxy_connection	test/test_sync_session_present.c	/^    char* proxy_connection;$/;"	m	struct:Options	file:
psk	src/samples/pubsub_opts.h	/^	char* psk;$/;"	m	struct:pubsub_opts
psk_connection	test/test3.c	/^	char psk_connection[100];$/;"	m	struct:Options	file:
psk_connection	test/test5.c	/^	char psk_connection[100];$/;"	m	struct:Options	file:
psk_identity	src/samples/pubsub_opts.h	/^	char* psk_identity;$/;"	m	struct:pubsub_opts
pstclear	src/MQTTPersistenceDefault.c	/^int pstclear(void *handle)$/;"	f
pstclose	src/MQTTPersistenceDefault.c	/^int pstclose(void* handle)$/;"	f
pstcontainskey	src/MQTTPersistenceDefault.c	/^int pstcontainskey(void *handle, char *key)$/;"	f
pstget	src/MQTTPersistenceDefault.c	/^int pstget(void* handle, char* key, char** buffer, int* buflen)$/;"	f
pstkeys	src/MQTTPersistenceDefault.c	/^int pstkeys(void *handle, char ***keys, int *nkeys)$/;"	f
pstmkdir	src/MQTTPersistenceDefault.c	/^int pstmkdir( char *pPathname )$/;"	f
pstopen	src/MQTTPersistenceDefault.c	/^int pstopen(void **handle, const char* clientID, const char* serverURI, void* context)$/;"	f
pstput	src/MQTTPersistenceDefault.c	/^int pstput(void* handle, char* key, int bufcount, char* buffers[], int buflens[])$/;"	f
pstremove	src/MQTTPersistenceDefault.c	/^int pstremove(void* handle, char* key)$/;"	f
ptr	src/Heap.c	/^	void* ptr;		\/**< pointer to the allocated storage *\/$/;"	m	struct:__anon1	file:
ptrCompare	src/Heap.c	/^static int ptrCompare(void* a, void* b, int value)$/;"	f	file:
pub	src/MQTTAsync.c	/^		} pub;$/;"	m	union:__anon4::__anon5	typeref:struct:__anon4::__anon5::__anon8	file:
pub	src/MQTTAsync.h	/^		} pub;$/;"	m	union:__anon78::__anon79	typeref:struct:__anon78::__anon79::__anon80
pub	src/MQTTAsync.h	/^		} pub;$/;"	m	union:__anon82::__anon83	typeref:struct:__anon82::__anon83::__anon85
pub_opts	src/samples/paho_c_pub.c	/^MQTTAsync_responseOptions pub_opts = MQTTAsync_responseOptions_initializer;$/;"	v
pub_topic	test/test6.c	/^static char pub_topic[200];$/;"	v	file:
publications	src/MQTTProtocol.h	/^	List publications;$/;"	m	struct:__anon98
publish	src/Clients.h	/^	Publications *publish;$/;"	m	struct:__anon16
published	src/MQTTClient.c	/^	MQTTClient_published* published;$/;"	m	struct:__anon28	file:
published	src/samples/paho_c_pub.c	/^static int published = 0;$/;"	v	file:
published	test/test10.c	/^	int published;$/;"	m	struct:__anon106	file:
published	test/test10.c	/^void published(void* context, int msgid, int packet_type, MQTTProperties* props, enum MQTTReasonCodes rc)$/;"	f
published_context	src/MQTTClient.c	/^	void* published_context; \/* the context to be associated with the disconnected callback*\/$/;"	m	struct:__anon28	file:
publisher	src/samples/pubsub_opts.h	/^	int publisher;  \/* publisher app? *\/$/;"	m	struct:pubsub_opts
pubsub_opts	src/samples/pubsub_opts.h	/^struct pubsub_opts$/;"	s
pubsub_opts_nameValue	src/samples/pubsub_opts.h	/^} pubsub_opts_nameValue;$/;"	t	typeref:struct:__anon61
qEntry	src/MQTTAsync.c	/^} qEntry;$/;"	t	typeref:struct:__anon3	file:
qEntry	src/MQTTClient.c	/^} qEntry;$/;"	t	typeref:struct:__anon27	file:
qentry_seqno	src/Clients.h	/^	unsigned int qentry_seqno;$/;"	m	struct:__anon19
qnxnto	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qos	src/Clients.h	/^	int qos;$/;"	m	struct:__anon16
qos	src/Clients.h	/^	int qos;$/;"	m	struct:__anon17
qos	src/MQTTAsync.c	/^			int qos;$/;"	m	struct:__anon4::__anon5::__anon8	file:
qos	src/MQTTAsync.h	/^		int qos;$/;"	m	union:__anon78::__anon79
qos	src/MQTTAsync.h	/^	int qos;$/;"	m	struct:__anon75
qos	src/MQTTAsync.h	/^	int qos;$/;"	m	struct:__anon89
qos	src/MQTTClient.h	/^	int qos;$/;"	m	struct:__anon64
qos	src/MQTTClient.h	/^	int qos;$/;"	m	struct:__anon66
qos	src/MQTTPacket.h	/^		unsigned int qos : 2;	\/**< QoS value, 0, 1 or 2 *\/$/;"	m	struct:__anon32::__anon33
qos	src/MQTTPacket.h	/^		unsigned int qos : 2;	\/**< QoS value, 0, 1 or 2 *\/$/;"	m	struct:__anon32::__anon34
qos	src/MQTTPersistence.h	/^	int qos;$/;"	m	struct:__anon57
qos	src/samples/pubsub_opts.h	/^	int qos;$/;"	m	struct:pubsub_opts
qos	test/test2.c	/^	int qos;$/;"	m	struct:thread_parms	file:
qos	test/test6.c	/^	int qos;$/;"	m	struct:__anon111	file:
qosList	src/MQTTAsync.h	/^		int* qosList;$/;"	m	union:__anon78::__anon79
qoss	src/MQTTAsync.c	/^			int* qoss;$/;"	m	struct:__anon4::__anon5::__anon6	file:
qoss	src/MQTTPacket.h	/^	List* qoss;		\/**< list of granted QoSs (MQTT 3\/4) \/ reason codes (MQTT 5) *\/$/;"	m	struct:__anon44
queues	src/SocketBuffer.c	/^static List* queues;$/;"	v	file:
quiet	src/samples/pubsub_opts.h	/^	int quiet;$/;"	m	struct:pubsub_opts
rc	src/Log.c	/^	int rc;$/;"	m	struct:__anon59	file:
rc	src/MQTTClient.c	/^	int rc; \/* getsockopt return code in connect *\/$/;"	m	struct:__anon28	file:
rc	src/MQTTPacket.h	/^	unsigned char rc; \/**< MQTT 5 reason code *\/$/;"	m	struct:__anon47
rc	src/MQTTPacket.h	/^	unsigned char rc; \/**< connack reason code *\/$/;"	m	struct:__anon39
rc	test/sync_client_test.c	/^	int rc; \/* getsockopt return code in connect *\/$/;"	m	struct:__anon104	file:
rc	test/test10.c	/^	enum MQTTReasonCodes rc;$/;"	m	struct:__anon106	typeref:enum:__anon106::MQTTReasonCodes	file:
rc	test/test3.c	/^	int rc; \/* getsockopt return code in connect *\/$/;"	m	struct:__anon129	file:
rcvdmsgs	test/test5.c	/^	int rcvdmsgs[3];$/;"	m	struct:__anon110	file:
readBytes	test/MQTTV311.py	/^def readBytes(buffer):$/;"	f
readBytes	test/MQTTV3112.py	/^def readBytes(buffer):$/;"	f
readBytes	test/MQTTV5.py	/^def readBytes(buffer):$/;"	f
readChar	src/MQTTPacket.c	/^unsigned char readChar(char** pptr)$/;"	f
readInt	src/MQTTPacket.c	/^int readInt(char** pptr)$/;"	f
readInt16	test/MQTTV311.py	/^def readInt16(buf):$/;"	f
readInt16	test/MQTTV3112.py	/^def readInt16(buf):$/;"	f
readInt16	test/MQTTV5.py	/^def readInt16(buf):$/;"	f
readInt32	test/MQTTV5.py	/^def readInt32(buf):$/;"	f
readInt4	src/MQTTPacket.c	/^int readInt4(char** pptr)$/;"	f
readProperty	test/MQTTV5.py	/^  def readProperty(self, buffer, type, propslen):$/;"	m	class:Properties
readUTF	src/MQTTPacket.c	/^char* readUTF(char** pptr, char* enddata)$/;"	f
readUTF	test/MQTTV311.py	/^def readUTF(buffer, maxlen):$/;"	f
readUTF	test/MQTTV3112.py	/^def readUTF(buffer, maxlen):$/;"	f
readUTF	test/MQTTV5.py	/^def readUTF(buffer, maxlen):$/;"	f
readUTFlen	src/MQTTPacket.c	/^static char* readUTFlen(char** pptr, char* enddata, int* len)$/;"	f	file:
readfile	src/samples/pubsub_opts.c	/^char* readfile(int* data_len, struct pubsub_opts* opts)$/;"	f
realloc	src/Heap.c	48;"	d	file:
realloc	src/Heap.c	498;"	d	file:
realloc	src/Heap.h	49;"	d
realloc	src/Thread.c	38;"	d	file:
realloc	test/test_issue373.c	38;"	d	file:
reasonCode	src/MQTTAsync.c	/^			enum MQTTReasonCodes reasonCode;$/;"	m	struct:__anon4::__anon5::__anon9	typeref:enum:__anon4::__anon5::__anon9::MQTTReasonCodes	file:
reasonCode	src/MQTTAsync.h	/^	enum MQTTReasonCodes reasonCode;  	\/**< MQTT V5 reason code returned *\/$/;"	m	struct:__anon82	typeref:enum:__anon82::MQTTReasonCodes
reasonCode	src/MQTTAsync.h	/^	enum MQTTReasonCodes reasonCode;$/;"	m	struct:__anon77	typeref:enum:__anon77::MQTTReasonCodes
reasonCode	src/MQTTAsync.h	/^	enum MQTTReasonCodes reasonCode;$/;"	m	struct:__anon95	typeref:enum:__anon95::MQTTReasonCodes
reasonCode	src/MQTTClient.c	/^	enum MQTTReasonCodes reasonCode;$/;"	m	struct:props_rc_parms	typeref:enum:props_rc_parms::MQTTReasonCodes	file:
reasonCode	src/MQTTClient.h	/^	enum MQTTReasonCodes reasonCode;    \/* the MQTT 5.0 reason code returned *\/$/;"	m	struct:MQTTResponse	typeref:enum:MQTTResponse::MQTTReasonCodes
reasonCodeCount	src/MQTTAsync.h	/^			int reasonCodeCount; \/**< the number of reason codes in the reasonCodes array *\/$/;"	m	struct:__anon82::__anon83::__anon84
reasonCodeCount	src/MQTTAsync.h	/^			int reasonCodeCount; \/**< the number of reason codes in the reasonCodes array *\/$/;"	m	struct:__anon82::__anon83::__anon87
reasonCodeCount	src/MQTTClient.h	/^	int reasonCodeCount;	            \/* the number of reason codes.  Used for subscribeMany5 and unsubscribeMany5 *\/$/;"	m	struct:MQTTResponse
reasonCodes	src/MQTTAsync.h	/^			enum MQTTReasonCodes* reasonCodes; \/**< an array of reasonCodes *\/$/;"	m	struct:__anon82::__anon83::__anon84	typeref:enum:__anon82::__anon83::__anon84::MQTTReasonCodes
reasonCodes	src/MQTTAsync.h	/^			enum MQTTReasonCodes* reasonCodes; \/**< an array of reasonCodes *\/$/;"	m	struct:__anon82::__anon83::__anon87	typeref:enum:__anon82::__anon83::__anon87::MQTTReasonCodes
reasonCodes	src/MQTTClient.h	/^	enum MQTTReasonCodes* reasonCodes;  \/* a list of reason codes.  Used for subscribeMany5 and unsubscribeMany5 *\/$/;"	m	struct:MQTTResponse	typeref:enum:MQTTResponse::MQTTReasonCodes
reasonCodes	src/MQTTPacket.h	/^	List* reasonCodes;	\/**< list of reason codes *\/$/;"	m	struct:__anon45
rebuffer	test/mqttsas.py	/^    def rebuffer(self, data):$/;"	m	class:BufferedSockets
receiveThread_id	src/MQTTAsync.c	/^					receiveThread_id = 0;$/;"	v	file:
receiveThread_state	src/MQTTAsync.c	/^enum MQTTAsync_threadStates receiveThread_state = STOPPED;$/;"	v	typeref:enum:MQTTAsync_threadStates
receive_maximum	test/test11.c	/^	int receive_maximum;$/;"	m	struct:__anon122	file:
reconnectNow	src/MQTTAsync.c	/^	int reconnectNow;$/;"	m	struct:MQTTAsync_struct	file:
reconnect_period	test/test_sync_session_present.c	/^    int reconnect_period;$/;"	m	struct:Options	file:
recreateReconnect	test/test6.c	/^int recreateReconnect(void)$/;"	f
recreated	test/test6.c	/^int recreated = 0;$/;"	v
recv	test/mqttsas.py	/^    def recv(self, bufsize):$/;"	m	class:BufferedSockets
red	src/Tree.h	/^	unsigned int red : 1;$/;"	m	struct:NodeStruct
redelivery_on_reconnect_test	test/sync_client_test.c	/^int redelivery_on_reconnect_test(void)$/;"	f
refcount	src/Clients.h	/^	int refcount;$/;"	m	struct:__anon15
release.version	Makefile	/^  release.version = $(MAJOR_VERSION).$(MINOR_VERSION).$(PATCH_VERSION)$/;"	m
reliable	src/MQTTClient.h	/^	int reliable;$/;"	m	struct:__anon70
request_topic	test/test10.c	/^	char* request_topic;$/;"	m	struct:__anon107	file:
request_topic	test/test11.c	/^	char* request_topic;$/;"	m	struct:__anon125	file:
reserved	src/MQTTPacket.h	/^			unsigned int reserved : 7;	\/**< message type nibble *\/$/;"	m	struct:__anon39::__anon40::__anon41
reserved	src/MQTTPacket.h	/^			unsigned int reserved : 7;	\/**< message type nibble *\/$/;"	m	struct:__anon39::__anon40::__anon42
response_topic	test/test10.c	/^	char* response_topic;$/;"	m	struct:__anon107	file:
response_topic	test/test11.c	/^	char* response_topic;$/;"	m	struct:__anon125	file:
responses	src/MQTTAsync.c	/^	List* responses;$/;"	m	struct:MQTTAsync_struct	file:
restoreMessages	src/MQTTAsync.h	/^	int restoreMessages;$/;"	m	struct:__anon88
retain	src/Clients.h	/^	int retain;$/;"	m	struct:__anon16
retain	src/MQTTPacket.h	/^		bool retain : 1;		\/**< retained flag bit *\/$/;"	m	struct:__anon32::__anon33
retain	src/MQTTPacket.h	/^		bool retain : 1;		\/**< retained flag bit *\/$/;"	m	struct:__anon32::__anon34
retainAsPublished	src/MQTTSubscribeOpts.h	/^	unsigned char retainAsPublished;$/;"	m	struct:MQTTSubscribe_options
retainHandling	src/MQTTSubscribeOpts.h	/^	unsigned char retainHandling;$/;"	m	struct:MQTTSubscribe_options
retained	src/Clients.h	/^	int retained;$/;"	m	struct:__anon17
retained	src/MQTTAsync.c	/^			int retained;$/;"	m	struct:__anon4::__anon5::__anon8	file:
retained	src/MQTTAsync.h	/^	int retained;$/;"	m	struct:__anon75
retained	src/MQTTAsync.h	/^	int retained;$/;"	m	struct:__anon89
retained	src/MQTTClient.h	/^	int retained;$/;"	m	struct:__anon64
retained	src/MQTTClient.h	/^	int retained;$/;"	m	struct:__anon66
retained	src/MQTTPersistence.h	/^	int retained;$/;"	m	struct:__anon57
retained	src/samples/pubsub_opts.h	/^	int retained;$/;"	m	struct:pubsub_opts
retained	test/test6.c	/^	int retained;$/;"	m	struct:__anon111	file:
retained_message_test	test/sync_client_test.c	/^int retained_message_test(void)$/;"	f
retryInterval	src/Clients.h	/^	int retryInterval;$/;"	m	struct:__anon19
retryInterval	src/MQTTAsync.h	/^	int retryInterval;$/;"	m	struct:__anon93
retryInterval	src/MQTTClient.h	/^	int retryInterval;$/;"	m	struct:__anon70
retryInterval	test/test3.c	/^	int retryInterval;$/;"	m	struct:__anon128	file:
retryLoopInterval	src/MQTTAsync.c	/^static int retryLoopInterval = 5;$/;"	v	file:
retryLoopInterval	src/MQTTClient.c	/^static int retryLoopInterval = 5;$/;"	v	file:
retrying	src/MQTTAsync.c	/^	int retrying;$/;"	m	struct:MQTTAsync_struct	file:
returned	src/MQTTClient.h	/^	} returned;$/;"	m	struct:__anon70	typeref:struct:__anon70::__anon71
root	src/Tree.h	/^		Node *root;	\/**< root node pointer *\/$/;"	m	struct:__anon54::__anon55
roundtrip_time	test/test6.c	/^long roundtrip_time = 0L;$/;"	v
rset	src/Socket.h	/^	fd_set rset, \/**< socket read set (see select doc) *\/$/;"	m	struct:__anon24
rset_saved	src/Socket.h	/^		rset_saved; \/**< saved socket read set *\/$/;"	m	struct:__anon24
run	test/mqttsas.py	/^def run():$/;"	f
run_dollar_topics_test	test/sync_client_test.c	/^	int run_dollar_topics_test;$/;"	m	struct:Options	file:
run_id	src/MQTTClient.c	/^static thread_id_type run_id = 0;$/;"	v	file:
run_subscribe_failure_test	test/sync_client_test.c	/^	int run_subscribe_failure_test;$/;"	m	struct:Options	file:
running	src/MQTTClient.c	/^static int running = 0;$/;"	v	file:
sametime_count	src/Log.c	/^	int sametime_count;$/;"	m	struct:__anon59	file:
sametime_count	src/Log.c	/^static int sametime_count = 0;$/;"	v	file:
sem_secondary	src/Thread.c	/^thread_return_type sem_secondary(void* n)$/;"	f
sem_secondary	test/thread.c	/^static thread_return_type WINAPI sem_secondary(void* n)$/;"	f	file:
sem_test	src/Thread.c	/^int sem_test()$/;"	f
sem_type	src/Thread.h	/^	  typedef dispatch_semaphore_t sem_type;$/;"	t
sem_type	src/Thread.h	/^	  typedef sem_t *sem_type;$/;"	t
sem_type	src/Thread.h	36;"	d
send	test/mqttsas.py	/^    def send(self, data):$/;"	m	class:BufferedSockets
sendAndReceive	test/test5.c	/^void sendAndReceive(MQTTAsync* c, int qos, char* test_topic)$/;"	f
sendAndReceive	test/test6.c	/^int sendAndReceive(void)$/;"	f
sendThread_id	src/MQTTAsync.c	/^static thread_id_type sendThread_id = 0,$/;"	v	file:
sendThread_state	src/MQTTAsync.c	/^enum MQTTAsync_threadStates sendThread_state = STOPPED;$/;"	v	typeref:enum:MQTTAsync_threadStates
sendWhileDisconnected	src/MQTTAsync.h	/^	int sendWhileDisconnected;$/;"	m	struct:__anon88
send_cond	src/MQTTAsync.c	/^static cond_type send_cond = &send_cond_store;$/;"	v	file:
send_cond_store	src/MQTTAsync.c	/^static cond_type_struct send_cond_store = { PTHREAD_COND_INITIALIZER, PTHREAD_MUTEX_INITIALIZER };$/;"	v	file:
send_sem	src/MQTTAsync.c	/^static sem_type send_sem = NULL;$/;"	v	file:
sentmsgs	test/test5.c	/^	int sentmsgs[3];$/;"	m	struct:__anon110	file:
seqno	src/MQTTAsync.c	/^	unsigned int seqno; \/* only used on restore *\/$/;"	m	struct:__anon11	file:
seqno	src/MQTTAsync.c	/^	unsigned int seqno; \/* only used on restore *\/$/;"	m	struct:__anon3	file:
seqno	src/MQTTClient.c	/^	unsigned int seqno; \/* only used on restore *\/$/;"	m	struct:__anon27	file:
seqno	src/MQTTPersistence.h	/^	unsigned int seqno; \/* only used on restore *\/$/;"	m	struct:__anon58
serverURI	src/MQTTAsync.c	/^	char* serverURI;$/;"	m	struct:MQTTAsync_struct	file:
serverURI	src/MQTTAsync.h	/^			char* serverURI;  \/**< the connection string of the server *\/$/;"	m	struct:__anon82::__anon83::__anon86
serverURI	src/MQTTAsync.h	/^			char* serverURI; \/**< the connection string of the server *\/$/;"	m	struct:__anon78::__anon79::__anon81
serverURI	src/MQTTClient.c	/^	char* serverURI;$/;"	m	struct:__anon28	file:
serverURI	src/MQTTClient.h	/^		const char* serverURI;     \/**< the serverURI connected to *\/$/;"	m	struct:__anon70::__anon71
serverURI	test/sync_client_test.c	/^	char* serverURI;$/;"	m	struct:__anon104	file:
serverURI	test/test3.c	/^	char* serverURI;$/;"	m	struct:__anon129	file:
serverURIcount	src/MQTTAsync.c	/^	int serverURIcount;$/;"	m	struct:MQTTAsync_struct	file:
serverURIcount	src/MQTTAsync.h	/^	int serverURIcount;$/;"	m	struct:__anon93
serverURIcount	src/MQTTClient.h	/^	int serverURIcount;$/;"	m	struct:__anon70
serverURIs	src/MQTTAsync.c	/^	char** serverURIs;$/;"	m	struct:MQTTAsync_struct	file:
serverURIs	src/MQTTAsync.h	/^	char* const* serverURIs;$/;"	m	struct:__anon93
serverURIs	src/MQTTClient.h	/^	char* const* serverURIs;$/;"	m	struct:__anon70
server_auth_connection	test/test3.c	/^	char server_auth_connection[100];$/;"	m	struct:Options	file:
server_auth_connection	test/test5.c	/^	char server_auth_connection[100];$/;"	m	struct:Options	file:
server_key_file	test/test3.c	/^	char* server_key_file;$/;"	m	struct:Options	file:
server_key_file	test/test5.c	/^	char* server_key_file;$/;"	m	struct:Options	file:
session	src/Clients.h	/^	SSL_SESSION* session;           \/**< SSL session pointer for fast handhake *\/$/;"	m	struct:__anon19
sessionExpiry	src/Clients.h	/^	int sessionExpiry;              \/**< MQTT 5 session expiry *\/$/;"	m	struct:__anon19
sessionPresent	src/MQTTAsync.h	/^			int sessionPresent;  \/**< the session present flag returned from the server *\/$/;"	m	struct:__anon82::__anon83::__anon86
sessionPresent	src/MQTTAsync.h	/^			int sessionPresent; \/**< the session present flag returned from the server *\/$/;"	m	struct:__anon78::__anon79::__anon81
sessionPresent	src/MQTTClient.h	/^		int sessionPresent;  \/**< if the MQTT version is 3.1.1, the value of sessionPresent returned in the connack *\/$/;"	m	struct:__anon70::__anon71
sessionPresent	src/MQTTPacket.h	/^			bool sessionPresent : 1;    \/**< was a session found on the server? *\/$/;"	m	struct:__anon39::__anon40::__anon41
sessionPresent	src/MQTTPacket.h	/^			bool sessionPresent : 1;    \/**< was a session found on the server? *\/$/;"	m	struct:__anon39::__anon40::__anon42
set	test/MQTTV5.py	/^  def set(self, name):$/;"	m	class:ReasonCodes
setRetryLoopInterval	src/MQTTAsync.c	/^static void setRetryLoopInterval(int keepalive)$/;"	f	file:
setRetryLoopInterval	src/MQTTClient.c	/^static void setRetryLoopInterval(int keepalive)$/;"	f	file:
setStack	src/StackTrace.c	/^int setStack(int create)$/;"	f
setenv	test/test1.c	36;"	d	file:
setenv	test/test10.c	50;"	d	file:
setenv	test/test15.c	38;"	d	file:
setenv	test/test2.c	36;"	d	file:
setenv	test/test3.c	32;"	d	file:
setenv	test/test_connect_destroy.c	35;"	d	file:
setenv	test/test_mqtt4async.c	50;"	d	file:
setenv	test/test_mqtt4sync.c	50;"	d	file:
setenv	test/test_sync_session_present.c	35;"	d	file:
settings	test_package/conanfile.py	/^    settings = "os", "compiler", "build_type", "arch"$/;"	v	class:TestPackageConan
shared_topic	test/test10.c	/^	char* shared_topic;$/;"	m	struct:__anon109	file:
shared_topic	test/test11.c	/^	char* shared_topic;$/;"	m	struct:__anon127	file:
shouldBeConnected	src/MQTTAsync.c	/^	int shouldBeConnected;$/;"	m	struct:MQTTAsync_struct	file:
should_fail	test/test4.c	/^	int should_fail;$/;"	m	struct:__anon100	file:
should_fail	test/test45.c	/^	int should_fail;$/;"	m	struct:__anon113	file:
singleThread_sendAndReceive	test/test3.c	/^void singleThread_sendAndReceive(MQTTClient* c, int qos, char* test_topic)$/;"	f
size	src/Heap.c	/^	size_t size;    \/**< size of the allocated storage *\/$/;"	m	struct:__anon1	file:
size	src/LinkedList.h	/^	size_t size;  \/**< heap storage used *\/$/;"	m	struct:__anon53
size	src/SHA1.h	/^	unsigned int size;$/;"	m	struct:SHA_CTX_S
size	src/Tree.h	/^	size_t size;					 \/**< size of content *\/$/;"	m	struct:NodeStruct
size	src/Tree.h	/^	size_t size;  \/**< heap storage used *\/$/;"	m	struct:__anon54
size	test/test11.c	/^	int size;									\/**< size of big message *\/$/;"	m	struct:Options	file:
size	test/test4.c	/^	int size;									\/**< size of big message *\/$/;"	m	struct:Options	file:
size	test/test45.c	/^	int size;									\/**< size of big message *\/$/;"	m	struct:Options	file:
size	test/test5.c	/^	int size;$/;"	m	struct:Options	file:
size	test/test8.c	/^	int size;									\/**< size of big message *\/$/;"	m	struct:Options	file:
skeytmp	test/test3.c	/^char skeytmp[1024];$/;"	v
sleep	src/samples/paho_c_pub.c	29;"	d	file:
sleep	src/samples/paho_c_sub.c	32;"	d	file:
sleep	src/samples/paho_cs_pub.c	28;"	d	file:
sleep	src/samples/paho_cs_sub.c	31;"	d	file:
slot_no	test/test6.c	/^	int slot_no;$/;"	m	struct:__anon111	file:
snprintf	src/Log.c	46;"	d	file:
snprintf	src/StackTrace.c	29;"	d	file:
snprintf	src/WebSocket.c	83;"	d	file:
snprintf	test/test3.c	31;"	d	file:
snprintf	test/test5.c	32;"	d	file:
socket	src/Clients.h	/^	int socket;$/;"	m	struct:__anon18
socket	src/MQTTProtocol.h	/^	int socket;$/;"	m	struct:__anon97
socket	src/SocketBuffer.h	/^	int socket, count;$/;"	m	struct:__anon30
socket	src/SocketBuffer.h	/^	int socket;$/;"	m	struct:__anon29
socket	test/sync_client_test.c	/^	int socket;$/;"	m	struct:__anon102	file:
socket	test/test3.c	/^	int socket;$/;"	m	struct:__anon128	file:
socket_mutex	src/MQTTAsync.c	/^static mutex_type socket_mutex = &socket_mutex_store;$/;"	v	file:
socket_mutex	src/MQTTAsync.c	/^static mutex_type socket_mutex = NULL;$/;"	v	file:
socket_mutex	src/MQTTClient.c	/^static mutex_type socket_mutex = &socket_mutex_store;$/;"	v	file:
socket_mutex	src/MQTTClient.c	/^static mutex_type socket_mutex = NULL;$/;"	v	file:
socket_mutex_store	src/MQTTAsync.c	/^static pthread_mutex_t socket_mutex_store = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
socket_mutex_store	src/MQTTClient.c	/^static pthread_mutex_t socket_mutex_store = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
socket_queue	src/SocketBuffer.h	/^} socket_queue;$/;"	t	typeref:struct:__anon29
socketcompare	src/SocketBuffer.c	/^int socketcompare(void* a, void* b)$/;"	f
socklen_t	src/Socket.h	46;"	d
sources	test/python/setup.py	/^              sources = ['mqttasync_module.c', '..\/..\/src\/LinkedList.c'],$/;"	v
sources	test/python/setup.py	/^              sources = ['mqttclient_module.c', '..\/..\/src\/LinkedList.c'],$/;"	v
srcdir	Makefile	/^  srcdir = src$/;"	m
ssl	src/Clients.h	/^	SSL* ssl;$/;"	m	struct:__anon18
ssl	src/MQTTAsync.c	/^	int ssl;$/;"	m	struct:MQTTAsync_struct	file:
ssl	src/MQTTAsync.h	/^	MQTTAsync_SSLOptions* ssl;$/;"	m	struct:__anon93
ssl	src/MQTTClient.c	/^	int ssl;$/;"	m	struct:__anon28	file:
ssl	src/MQTTClient.h	/^	MQTTClient_SSLOptions* ssl;$/;"	m	struct:__anon70
ssl	src/SocketBuffer.h	/^	SSL* ssl;$/;"	m	struct:__anon30
ssl	test/sync_client_test.c	/^	SSL* ssl;$/;"	m	struct:__anon102	file:
sslCoreMutex	src/SSLSocket.c	/^static ssl_mutex_type sslCoreMutex;$/;"	v	file:
sslLocks	src/SSLSocket.c	/^static ssl_mutex_type* sslLocks = NULL;$/;"	v	file:
sslVersion	src/MQTTAsync.h	/^    int sslVersion;$/;"	m	struct:__anon91
sslVersion	src/MQTTClient.h	/^    int sslVersion;$/;"	m	struct:__anon68
ssl_error_cb	src/MQTTAsync.h	/^    int (*ssl_error_cb) (const char *str, size_t len, void *u);$/;"	m	struct:__anon91
ssl_error_cb	src/MQTTClient.h	/^    int (*ssl_error_cb) (const char *str, size_t len, void *u);$/;"	m	struct:__anon68
ssl_error_context	src/MQTTAsync.h	/^    void* ssl_error_context;$/;"	m	struct:__anon91
ssl_error_context	src/MQTTClient.h	/^    void* ssl_error_context;$/;"	m	struct:__anon68
ssl_mutex_type	src/SSLSocket.h	22;"	d
ssl_mutex_type	src/SSLSocket.h	26;"	d
ssl_psk_cb	src/MQTTAsync.h	/^	unsigned int (*ssl_psk_cb) (const char *hint, char *identity, unsigned int max_identity_len, unsigned char *psk, unsigned int max_psk_len, void *u);$/;"	m	struct:__anon91
ssl_psk_cb	src/MQTTClient.h	/^	unsigned int (*ssl_psk_cb) (const char *hint, char *identity, unsigned int max_identity_len, unsigned char *psk, unsigned int max_psk_len, void *u);$/;"	m	struct:__anon68
ssl_psk_context	src/MQTTAsync.h	/^	void* ssl_psk_context;$/;"	m	struct:__anon91
ssl_psk_context	src/MQTTClient.h	/^	void* ssl_psk_context;$/;"	m	struct:__anon68
sslopts	src/Clients.h	/^	MQTTClient_SSLOptions *sslopts; \/**< the SSL\/TLS connect options *\/$/;"	m	struct:__anon19
stack	src/Heap.c	/^	char* stack;$/;"	m	struct:__anon1	file:
stackEntry	src/StackTrace.c	/^} stackEntry;$/;"	t	typeref:struct:__anon21	file:
stack_mutex	src/StackTrace.c	/^mutex_type stack_mutex;$/;"	v
stack_mutex	src/StackTrace.c	/^static mutex_type stack_mutex = &stack_mutex_store;$/;"	v	file:
stack_mutex_store	src/StackTrace.c	/^static pthread_mutex_t stack_mutex_store = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
start_clock	src/Thread.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/sync_client_test.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test1.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test10.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test11.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test15.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test2.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test3.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test4.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test45.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test5.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test6.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test8.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test9.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test95.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test_connect_destroy.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test_mqtt4async.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test_mqtt4sync.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/test_sync_session_present.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_clock	test/thread.c	/^START_TIME_TYPE start_clock(void)$/;"	f
start_index	src/Log.c	/^static int start_index = -1,$/;"	v	file:
start_port	test/test5.c	/^	int start_port;$/;"	m	struct:Options	file:
start_time	src/MQTTAsync.c	/^	START_TIME_TYPE start_time;$/;"	m	struct:__anon4	file:
start_time	src/Thread.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/sync_client_test.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test1.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test10.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test11.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test15.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test2.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test3.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test4.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test45.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test5.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test6.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test8.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test9.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test95.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test_connect_destroy.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test_mqtt4async.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test_mqtt4sync.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/test_sync_session_present.c	/^static DWORD start_time = 0;$/;"	v	file:
start_time	test/thread.c	/^static DWORD start_time = 0;$/;"	v	file:
state	src/Heap.c	/^static heap_info state = {0, 0}; \/**< global heap state information *\/$/;"	v	file:
state	src/MQTTAsync.c	/^MQTTProtocol state;$/;"	v
state	src/MQTTClient.c	/^MQTTProtocol state;$/;"	v
statustext	test/python/controlVMnetworkstate.py	/^def statustext(result):$/;"	f
stdin_lines	src/samples/pubsub_opts.h	/^	int stdin_lines;$/;"	m	struct:pubsub_opts
stdlin_complete	src/samples/pubsub_opts.h	/^	int stdlin_complete;$/;"	m	struct:pubsub_opts
stopping	test/test6.c	/^int stopping = 0;$/;"	v
storageElement	src/Heap.c	/^} storageElement;$/;"	t	typeref:struct:__anon1	file:
string	src/SSLSocket.c	/^	char* string;$/;"	m	struct:__anon31	file:
stringcompare	src/LinkedList.c	/^int stringcompare(void* a, void* b)$/;"	f
strncasecmp	src/WebSocket.c	60;"	d	file:
strtok_r	src/MQTTPersistenceDefault.c	42;"	d	file:
struct_id	src/MQTTAsync.h	/^	char struct_id[4];    	\/**< The eyecatcher for this structure.  Will be MQSD. *\/$/;"	m	struct:__anon82
struct_id	src/MQTTAsync.h	/^	char struct_id[4];$/;"	m	struct:MQTTAsync_responseOptions
struct_id	src/MQTTAsync.h	/^	char struct_id[4];$/;"	m	struct:__anon74
struct_id	src/MQTTAsync.h	/^	char struct_id[4];$/;"	m	struct:__anon75
struct_id	src/MQTTAsync.h	/^	char struct_id[4];$/;"	m	struct:__anon77
struct_id	src/MQTTAsync.h	/^	char struct_id[4];$/;"	m	struct:__anon88
struct_id	src/MQTTAsync.h	/^	char struct_id[4];$/;"	m	struct:__anon89
struct_id	src/MQTTAsync.h	/^	char struct_id[4];$/;"	m	struct:__anon91
struct_id	src/MQTTAsync.h	/^	char struct_id[4];$/;"	m	struct:__anon93
struct_id	src/MQTTAsync.h	/^	char struct_id[4];$/;"	m	struct:__anon95
struct_id	src/MQTTClient.h	/^	char struct_id[4];$/;"	m	struct:__anon63
struct_id	src/MQTTClient.h	/^	char struct_id[4];$/;"	m	struct:__anon64
struct_id	src/MQTTClient.h	/^	char struct_id[4];$/;"	m	struct:__anon65
struct_id	src/MQTTClient.h	/^	char struct_id[4];$/;"	m	struct:__anon66
struct_id	src/MQTTClient.h	/^	char struct_id[4];$/;"	m	struct:__anon68
struct_id	src/MQTTClient.h	/^	char struct_id[4];$/;"	m	struct:__anon70
struct_id	src/MQTTPersistence.h	/^	char struct_id[4];$/;"	m	struct:__anon57
struct_id	src/MQTTSubscribeOpts.h	/^	char struct_id[4];$/;"	m	struct:MQTTSubscribe_options
struct_version	src/MQTTAsync.h	/^	int struct_version;  	\/**< The version number of this structure.  Will be 0 *\/$/;"	m	struct:__anon82
struct_version	src/MQTTAsync.h	/^	int struct_version;$/;"	m	struct:MQTTAsync_responseOptions
struct_version	src/MQTTAsync.h	/^	int struct_version;$/;"	m	struct:__anon74
struct_version	src/MQTTAsync.h	/^	int struct_version;$/;"	m	struct:__anon75
struct_version	src/MQTTAsync.h	/^	int struct_version;$/;"	m	struct:__anon77
struct_version	src/MQTTAsync.h	/^	int struct_version;$/;"	m	struct:__anon88
struct_version	src/MQTTAsync.h	/^	int struct_version;$/;"	m	struct:__anon89
struct_version	src/MQTTAsync.h	/^	int struct_version;$/;"	m	struct:__anon91
struct_version	src/MQTTAsync.h	/^	int struct_version;$/;"	m	struct:__anon93
struct_version	src/MQTTAsync.h	/^	int struct_version;$/;"	m	struct:__anon95
struct_version	src/MQTTClient.h	/^	int struct_version;$/;"	m	struct:__anon63
struct_version	src/MQTTClient.h	/^	int struct_version;$/;"	m	struct:__anon64
struct_version	src/MQTTClient.h	/^	int struct_version;$/;"	m	struct:__anon65
struct_version	src/MQTTClient.h	/^	int struct_version;$/;"	m	struct:__anon66
struct_version	src/MQTTClient.h	/^	int struct_version;$/;"	m	struct:__anon68
struct_version	src/MQTTClient.h	/^	int struct_version;$/;"	m	struct:__anon70
struct_version	src/MQTTPersistence.h	/^	int struct_version;$/;"	m	struct:__anon57
struct_version	src/MQTTSubscribeOpts.h	/^	int struct_version;$/;"	m	struct:MQTTSubscribe_options
sub	src/MQTTAsync.c	/^		} sub;$/;"	m	union:__anon4::__anon5	typeref:struct:__anon4::__anon5::__anon6	file:
sub	src/MQTTAsync.h	/^		} sub;$/;"	m	union:__anon82::__anon83	typeref:struct:__anon82::__anon83::__anon84
sub_topic	test/test6.c	/^static char sub_topic[200];$/;"	v	file:
suback_sem	src/MQTTClient.c	/^	sem_type suback_sem;$/;"	m	struct:__anon28	file:
suback_sem	test/sync_client_test.c	/^	int suback_sem;$/;"	m	struct:__anon104	file:
suback_sem	test/test3.c	/^	int suback_sem;$/;"	m	struct:__anon129	file:
subscribeOptions	src/MQTTAsync.h	/^	MQTTSubscribe_options subscribeOptions;$/;"	m	struct:MQTTAsync_responseOptions
subscribeOptionsCount	src/MQTTAsync.h	/^	int subscribeOptionsCount;$/;"	m	struct:MQTTAsync_responseOptions
subscribeOptionsList	src/MQTTAsync.h	/^	MQTTSubscribe_options* subscribeOptionsList;$/;"	m	struct:MQTTAsync_responseOptions
subscribe_failure_test	test/sync_client_test.c	/^int subscribe_failure_test(void)$/;"	f
subscribe_mutex	src/MQTTClient.c	/^static mutex_type subscribe_mutex = &subscribe_mutex_store;$/;"	v	file:
subscribe_mutex	src/MQTTClient.c	/^static mutex_type subscribe_mutex = NULL;$/;"	v	file:
subscribe_mutex_store	src/MQTTClient.c	/^static pthread_mutex_t subscribe_mutex_store = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
subscribed	src/samples/MQTTAsync_subscribe.c	/^int subscribed = 0;$/;"	v
subscribed	src/samples/paho_c_sub.c	/^int subscribed = 0;$/;"	v
subscribed	test/test5.c	/^	int subscribed;$/;"	m	struct:__anon110	file:
success	test/test6.c	/^int success(int count)$/;"	f
suspended	test/mqttsas.py	/^suspended = []$/;"	v
test	src/Tree.c	/^int test(int limit)$/;"	f
test	test_package/conanfile.py	/^    def test(self):$/;"	m	class:TestPackageConan
test1	test/test1.c	/^int test1(struct Options options)$/;"	f
test1	test/test15.c	/^int test1(struct Options options)$/;"	f
test1	test/test2.c	/^int test1(struct Options options)$/;"	f
test1	test/test3.c	/^int test1(struct Options options)$/;"	f
test1	test/test4.c	/^int test1(struct Options options)$/;"	f
test1	test/test45.c	/^int test1(struct Options options)$/;"	f
test1	test/test5.c	/^int test1(struct Options options)$/;"	f
test1	test/test8.c	/^int test1(struct Options options)$/;"	f
test1	test/test9.c	/^int test1(struct Options options)$/;"	f
test1	test/test95.c	/^int test1(struct Options options)$/;"	f
test1	test/test_connect_destroy.c	/^int test1(struct Options options)$/;"	f
test1	test/test_mqtt4async.c	/^int test1(struct Options options)$/;"	f
test1	test/test_mqtt4sync.c	/^int test1(struct Options options)$/;"	f
test1	test/test_sync_session_present.c	/^int test1(struct Options options)$/;"	f
test10	test/test5.c	/^int test10(struct Options options)$/;"	f
test10	test/test9.c	/^int test10(struct Options options)$/;"	f
test10Finished	test/test5.c	/^int test10Finished;$/;"	v
test10Finished	test/test9.c	/^int test10Finished = 0;$/;"	v
test10MessageSeqno	test/test9.c	/^int test10MessageSeqno = 3;$/;"	v
test10MessagesToSend	test/test9.c	/^int test10MessagesToSend = 6;$/;"	v
test10OnConnect	test/test5.c	/^void test10OnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test10OnConnectFailure	test/test5.c	/^void test10OnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test10OnFailure	test/test9.c	/^void test10OnFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test10OnFailureCalled	test/test9.c	/^int test10OnFailureCalled = 0;$/;"	v
test10_messageArrived	test/test9.c	/^int test10_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test10_messages_received	test/test9.c	/^int test10_messages_received = 0;$/;"	v
test10cConnected	test/test9.c	/^int test10cConnected = 0;$/;"	v
test10cOnConnect	test/test9.c	/^void test10cOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test10dConnected	test/test9.c	/^int test10dConnected = 0;$/;"	v
test10dOnConnect	test/test9.c	/^void test10dOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test10dSubscribed	test/test9.c	/^int test10dSubscribed = 0;$/;"	v
test10donSubscribe	test/test9.c	/^void test10donSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test1373OnFailure	test/test_issue373.c	/^void test1373OnFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test1Finished	test/test5.c	/^int test1Finished = 0;$/;"	v
test1Finished	test/test9.c	/^int test1Finished = 0;$/;"	v
test1Finished	test/test95.c	/^int test1Finished = 0;$/;"	v
test1OnConnect	test/test5.c	/^void test1OnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test1OnFailure	test/test5.c	/^void test1OnFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test1OnFailureCalled	test/test5.c	/^int test1OnFailureCalled = 0;$/;"	v
test1OnFailureCalled	test/test9.c	/^int test1OnFailureCalled = 0;$/;"	v
test1OnFailureCalled	test/test95.c	/^int test1OnFailureCalled = 0;$/;"	v
test1_arrivedcount	test/test2.c	/^volatile int test1_arrivedcount = 0;$/;"	v
test1_arrivedcount_qos	test/test2.c	/^volatile int test1_arrivedcount_qos[3] = {0, 0, 0};$/;"	v
test1_c1	test/test_sync_session_present.c	/^MQTTClient test1_c1;$/;"	v
test1_connectionLost	test/test_sync_session_present.c	/^void test1_connectionLost(void* context, char* cause)$/;"	f
test1_deliveryComplete	test/test2.c	/^void test1_deliveryComplete(void* context, MQTTClient_deliveryToken dt)$/;"	f
test1_deliveryComplete	test/test_sync_session_present.c	/^void test1_deliveryComplete(void* context, MQTTClient_deliveryToken token)$/;"	f
test1_deliveryCompleted	test/test2.c	/^volatile int test1_deliveryCompleted = 0;$/;"	v
test1_destroy	test/test_connect_destroy.c	/^thread_return_type WINAPI test1_destroy(void* n)$/;"	f
test1_messageArrived	test/test2.c	/^int test1_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* m)$/;"	f
test1_messageArrived	test/test4.c	/^int test1_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test1_messageArrived	test/test45.c	/^int test1_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test1_messageArrived	test/test8.c	/^int test1_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test1_messageArrived	test/test9.c	/^int test1_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test1_messageArrived	test/test95.c	/^int test1_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test1_messageArrived	test/test_sync_session_present.c	/^int test1_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* m)$/;"	f
test1_messages_received	test/test9.c	/^int test1_messages_received = 0;$/;"	v
test1_messages_received	test/test95.c	/^int test1_messages_received = 0;$/;"	v
test1_onConnect	test/test4.c	/^void test1_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
test1_onConnect	test/test45.c	/^void test1_onConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test1_onConnect	test/test8.c	/^void test1_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
test1_onConnect1	test/test_mqtt4async.c	/^void test1_onConnect1(void* context, MQTTAsync_successData* response)$/;"	f
test1_onConnect2	test/test_mqtt4async.c	/^void test1_onConnect2(void* context, MQTTAsync_successData* response)$/;"	f
test1_onConnect3	test/test_mqtt4async.c	/^void test1_onConnect3(void* context, MQTTAsync_successData* response)$/;"	f
test1_onConnectFailure	test/test8.c	/^void test1_onConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test1_onDisconnect	test/test11.c	/^void test1_onDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
test1_onDisconnect	test/test4.c	/^void test1_onDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
test1_onDisconnect	test/test45.c	/^void test1_onDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
test1_onDisconnect	test/test8.c	/^void test1_onDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
test1_onDisconnect1	test/test_mqtt4async.c	/^void test1_onDisconnect1(void* context, MQTTAsync_successData* response)$/;"	f
test1_onDisconnect2	test/test_mqtt4async.c	/^void test1_onDisconnect2(void* context, MQTTAsync_successData* response)$/;"	f
test1_onDisconnect3	test/test_mqtt4async.c	/^void test1_onDisconnect3(void* context, MQTTAsync_successData* response)$/;"	f
test1_onSubscribe	test/test4.c	/^void test1_onSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test1_onSubscribe	test/test45.c	/^void test1_onSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test1_onSubscribe	test/test8.c	/^void test1_onSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test1_onUnsubscribe	test/test4.c	/^void test1_onUnsubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test1_onUnsubscribe	test/test45.c	/^void test1_onUnsubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test1_onUnsubscribe	test/test8.c	/^void test1_onUnsubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test1_pubmsg_check	test/test2.c	/^MQTTClient_message test1_pubmsg_check = MQTTClient_message_initializer;$/;"	v
test1_sendAndReceive	test/test1.c	/^void test1_sendAndReceive(MQTTClient* c, int qos, char* test_topic)$/;"	f
test1_sendAndReceive	test/test15.c	/^void test1_sendAndReceive(MQTTClient* c, int qos, char* test_topic)$/;"	f
test1_sendAndReceive	test/test2.c	/^thread_return_type WINAPI test1_sendAndReceive(void* n)$/;"	f
test1_will_message_received	test/test9.c	/^int test1_will_message_received = 0;$/;"	v
test1_will_message_received	test/test95.c	/^int test1_will_message_received = 0;$/;"	v
test1cConnected	test/test9.c	/^void test1cConnected(void* context, char* cause)$/;"	f
test1cConnected	test/test95.c	/^void test1cConnected(void* context, char* cause)$/;"	f
test1cOnConnect	test/test9.c	/^void test1cOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test1cOnConnect	test/test95.c	/^void test1cOnConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test1cOnFailure	test/test9.c	/^void test1cOnFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test1cOnFailure	test/test95.c	/^void test1cOnFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test1c_connected	test/test9.c	/^int test1c_connected = 0;$/;"	v
test1c_connected	test/test95.c	/^int test1c_connected = 0;$/;"	v
test1dOnConnect	test/test9.c	/^void test1dOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test1dOnConnect	test/test95.c	/^void test1dOnConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test1dOnFailure	test/test9.c	/^void test1dOnFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test1dOnFailure	test/test95.c	/^void test1dOnFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test1dReady	test/test9.c	/^int test1dReady = 0;$/;"	v
test1dReady	test/test95.c	/^int test1dReady = 0;$/;"	v
test1donSubscribe	test/test9.c	/^void test1donSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test1donSubscribe	test/test95.c	/^void test1donSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test2	test/test1.c	/^int test2(struct Options options)$/;"	f
test2	test/test15.c	/^int test2(struct Options options)$/;"	f
test2	test/test2.c	/^int test2(struct Options options)$/;"	f
test2	test/test4.c	/^int test2(struct Options options)$/;"	f
test2	test/test45.c	/^int test2(struct Options options)$/;"	f
test2	test/test8.c	/^int test2(struct Options options)$/;"	f
test2	test/test9.c	/^int test2(struct Options options)$/;"	f
test2	test/test95.c	/^int test2(struct Options options)$/;"	f
test2	test/test_mqtt4async.c	/^int test2(struct Options options)$/;"	f
test2	test/test_mqtt4sync.c	/^int test2(struct Options options)$/;"	f
test2Finished	test/test9.c	/^int test2Finished = 0;$/;"	v
test2Finished	test/test95.c	/^int test2Finished = 0;$/;"	v
test2OnFailureCalled	test/test9.c	/^int test2OnFailureCalled = 0;$/;"	v
test2OnFailureCalled	test/test95.c	/^int test2OnFailureCalled = 0;$/;"	v
test2_arrivedcount	test/test1.c	/^volatile int test2_arrivedcount = 0;$/;"	v
test2_arrivedcount	test/test15.c	/^volatile int test2_arrivedcount = 0;$/;"	v
test2_arrivedcount	test/test2.c	/^volatile int test2_arrivedcount = 0;$/;"	v
test2_arrivedcount	test/test_mqtt4sync.c	/^volatile int test2_arrivedcount = 0;$/;"	v
test2_deliveryComplete	test/test1.c	/^void test2_deliveryComplete(void* context, MQTTClient_deliveryToken dt)$/;"	f
test2_deliveryComplete	test/test15.c	/^void test2_deliveryComplete(void* context, MQTTClient_deliveryToken dt)$/;"	f
test2_deliveryComplete	test/test2.c	/^void test2_deliveryComplete(void* context, MQTTClient_deliveryToken dt)$/;"	f
test2_deliveryComplete	test/test_mqtt4sync.c	/^void test2_deliveryComplete(void* context, MQTTClient_deliveryToken dt)$/;"	f
test2_deliveryCompleted	test/test1.c	/^int test2_deliveryCompleted = 0;$/;"	v
test2_deliveryCompleted	test/test15.c	/^int test2_deliveryCompleted = 0;$/;"	v
test2_deliveryCompleted	test/test2.c	/^volatile int test2_deliveryCompleted = 0;$/;"	v
test2_deliveryCompleted	test/test_mqtt4sync.c	/^int test2_deliveryCompleted = 0;$/;"	v
test2_messageArrived	test/test1.c	/^int test2_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* m)$/;"	f
test2_messageArrived	test/test10.c	/^int test2_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* message)$/;"	f
test2_messageArrived	test/test15.c	/^int test2_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* message)$/;"	f
test2_messageArrived	test/test2.c	/^int test2_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* m)$/;"	f
test2_messageArrived	test/test9.c	/^int test2_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test2_messageArrived	test/test95.c	/^int test2_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test2_messageArrived	test/test_mqtt4sync.c	/^int test2_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* m)$/;"	f
test2_messages_received	test/test9.c	/^int test2_messages_received = 0;$/;"	v
test2_messages_received	test/test95.c	/^int test2_messages_received = 0;$/;"	v
test2_onConnect	test/test4.c	/^void test2_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
test2_onConnect	test/test45.c	/^void test2_onConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test2_onConnect	test/test8.c	/^void test2_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
test2_onConnect1	test/test_mqtt4async.c	/^void test2_onConnect1(void* context, MQTTAsync_successData* response)$/;"	f
test2_onDisconnect	test/test_mqtt4async.c	/^void test2_onDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
test2_onFailure	test/test4.c	/^void test2_onFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test2_onFailure	test/test45.c	/^void test2_onFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test2_onFailure	test/test8.c	/^void test2_onFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test2_onFailure_called	test/test4.c	/^int test2_onFailure_called = 0;$/;"	v
test2_onFailure_called	test/test45.c	/^int test2_onFailure_called = 0;$/;"	v
test2_onFailure_called	test/test8.c	/^int test2_onFailure_called = 0;$/;"	v
test2_onSubscribe1	test/test_mqtt4async.c	/^void test2_onSubscribe1(void* context, MQTTAsync_successData* response)$/;"	f
test2_onSubscribe2	test/test_mqtt4async.c	/^void test2_onSubscribe2(void* context, MQTTAsync_failureData* response)$/;"	f
test2_pubmsg	test/test1.c	/^MQTTClient_message test2_pubmsg = MQTTClient_message_initializer;$/;"	v
test2_pubmsg	test/test15.c	/^MQTTClient_message test2_pubmsg = MQTTClient_message_initializer;$/;"	v
test2_pubmsg	test/test2.c	/^MQTTClient_message test2_pubmsg = MQTTClient_message_initializer;$/;"	v
test2_pubmsg	test/test_mqtt4sync.c	/^MQTTClient_message test2_pubmsg = MQTTClient_message_initializer;$/;"	v
test2_sendAndReceive	test/test1.c	/^void test2_sendAndReceive(MQTTClient* c, int qos, char* test_topic)$/;"	f
test2_sendAndReceive	test/test15.c	/^void test2_sendAndReceive(MQTTClient* c, int qos, char* test_topic)$/;"	f
test2_sendAndReceive	test/test2.c	/^void test2_sendAndReceive(MQTTClient* c, int qos, char* test_topic)$/;"	f
test2_will_message_received	test/test9.c	/^int test2_will_message_received = 0;$/;"	v
test2_will_message_received	test/test95.c	/^int test2_will_message_received = 0;$/;"	v
test2a	test/test5.c	/^int test2a(struct Options options)$/;"	f
test2aOnConnectFailure	test/test5.c	/^void test2aOnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test2aOnPublishFailure	test/test5.c	/^void test2aOnPublishFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test2a_m	test/test3.c	/^int test2a_m(struct Options options)$/;"	f
test2a_s	test/test3.c	/^int test2a_s(struct Options options)$/;"	f
test2b	test/test3.c	/^int test2b(struct Options options)$/;"	f
test2b	test/test5.c	/^int test2b(struct Options options)$/;"	f
test2bFinished	test/test5.c	/^int test2bFinished;$/;"	v
test2bOnConnect	test/test5.c	/^void test2bOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test2bOnConnectFailure	test/test5.c	/^void test2bOnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test2c	test/test3.c	/^int test2c(struct Options options)$/;"	f
test2c	test/test5.c	/^int test2c(struct Options options)$/;"	f
test2cConnected	test/test9.c	/^void test2cConnected(void* context, char* cause)$/;"	f
test2cConnected	test/test95.c	/^void test2cConnected(void* context, char* cause)$/;"	f
test2cFinished	test/test5.c	/^int test2cFinished;$/;"	v
test2cOnConnect	test/test5.c	/^void test2cOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test2cOnConnect	test/test9.c	/^void test2cOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test2cOnConnect	test/test95.c	/^void test2cOnConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test2cOnConnectFailure	test/test5.c	/^void test2cOnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test2cOnFailure	test/test9.c	/^void test2cOnFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test2cOnFailure	test/test95.c	/^void test2cOnFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test2c_connected	test/test9.c	/^int test2c_connected = 0;$/;"	v
test2c_connected	test/test95.c	/^int test2c_connected = 0;$/;"	v
test2d	test/test5.c	/^int test2d(struct Options options)$/;"	f
test2dFinished	test/test5.c	/^int test2dFinished;$/;"	v
test2dOnConnect	test/test5.c	/^void test2dOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test2dOnConnect	test/test9.c	/^void test2dOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test2dOnConnect	test/test95.c	/^void test2dOnConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test2dOnConnectFailure	test/test5.c	/^void test2dOnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test2dOnFailure	test/test9.c	/^void test2dOnFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test2dOnFailure	test/test95.c	/^void test2dOnFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test2dReady	test/test9.c	/^int test2dReady = 0;$/;"	v
test2dReady	test/test95.c	/^int test2dReady = 0;$/;"	v
test2donSubscribe	test/test9.c	/^void test2donSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test2donSubscribe	test/test95.c	/^void test2donSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test2e	test/test5.c	/^int test2e(struct Options options)$/;"	f
test2eOnConnectFailure	test/test5.c	/^void test2eOnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test2eOnPublishFailure	test/test5.c	/^void test2eOnPublishFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test2e_s	test/test3.c	/^int test2e_s(struct Options options)$/;"	f
test3	test/test1.c	/^int test3(struct Options options)$/;"	f
test3	test/test15.c	/^int test3(struct Options options)$/;"	f
test3	test/test4.c	/^int test3(struct Options options)$/;"	f
test3	test/test45.c	/^int test3(struct Options options)$/;"	f
test3	test/test8.c	/^int test3(struct Options options)$/;"	f
test3	test/test9.c	/^int test3(struct Options options)$/;"	f
test3	test/test95.c	/^int test3(struct Options options)$/;"	f
test373ConnectionLost	test/test_issue373.c	/^void test373ConnectionLost(void* context, char* cause)$/;"	f
test373DeliveryComplete	test/test_issue373.c	/^void test373DeliveryComplete(void* context, MQTTAsync_token token)$/;"	f
test373OnConnect	test/test_issue373.c	/^void test373OnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test373Payload	test/test_issue373.c	/^static char test373Payload[] = "No one is interested in this payload";$/;"	v	file:
test373SendPublishMessage	test/test_issue373.c	/^int test373SendPublishMessage(MQTTAsync handle,int id, const unsigned int QoS)$/;"	f
test373_messageArrived	test/test_issue373.c	/^int test373_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test373_onWriteFailure	test/test_issue373.c	/^void test373_onWriteFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test373_onWriteSuccess	test/test_issue373.c	/^void test373_onWriteSuccess(void* context, MQTTAsync_successData* response)$/;"	f
test3Finished	test/test9.c	/^int test3Finished = 0;$/;"	v
test3Finished	test/test95.c	/^int test3Finished = 0;$/;"	v
test3OnFailureCalled	test/test9.c	/^int test3OnFailureCalled = 0;$/;"	v
test3OnFailureCalled	test/test95.c	/^int test3OnFailureCalled = 0;$/;"	v
test3_messageArrived	test/test4.c	/^int test3_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test3_messageArrived	test/test45.c	/^int test3_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test3_messageArrived	test/test8.c	/^int test3_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test3_messageArrived	test/test9.c	/^int test3_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test3_messageArrived	test/test95.c	/^int test3_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test3_messages_received	test/test9.c	/^int test3_messages_received = 0;$/;"	v
test3_messages_received	test/test95.c	/^int test3_messages_received = 0;$/;"	v
test3_onConnect	test/test4.c	/^void test3_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
test3_onConnect	test/test45.c	/^void test3_onConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test3_onConnect	test/test8.c	/^void test3_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
test3_onDisconnect	test/test4.c	/^void test3_onDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
test3_onDisconnect	test/test45.c	/^void test3_onDisconnect(void* context, MQTTAsync_successData5* response)$/;"	f
test3_onDisconnect	test/test8.c	/^void test3_onDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
test3_onFailure	test/test4.c	/^void test3_onFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test3_onFailure	test/test45.c	/^void test3_onFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test3_onFailure	test/test8.c	/^void test3_onFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test3_onPublish	test/test4.c	/^void test3_onPublish(void* context,  MQTTAsync_successData* response)$/;"	f
test3_onPublish	test/test45.c	/^void test3_onPublish(void* context,  MQTTAsync_successData5* response)$/;"	f
test3_onPublish	test/test8.c	/^void test3_onPublish(void* context,  MQTTAsync_successData* response)$/;"	f
test3_onSubscribe	test/test4.c	/^void test3_onSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test3_onSubscribe	test/test45.c	/^void test3_onSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test3_onSubscribe	test/test8.c	/^void test3_onSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test3_onUnsubscribe	test/test4.c	/^void test3_onUnsubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test3_onUnsubscribe	test/test45.c	/^void test3_onUnsubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test3_onUnsubscribe	test/test8.c	/^void test3_onUnsubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test3_will_message_received	test/test9.c	/^int test3_will_message_received = 0;$/;"	v
test3_will_message_received	test/test95.c	/^int test3_will_message_received = 0;$/;"	v
test3a	test/test5.c	/^int test3a(struct Options options)$/;"	f
test3aOnConnectFailure	test/test5.c	/^void test3aOnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test3a_m	test/test3.c	/^int test3a_m(struct Options options)$/;"	f
test3a_s	test/test3.c	/^int test3a_s(struct Options options)$/;"	f
test3b	test/test3.c	/^int test3b(struct Options options)$/;"	f
test3b	test/test5.c	/^int test3b(struct Options options)$/;"	f
test3bFinished	test/test5.c	/^int test3bFinished;$/;"	v
test3bOnConnect	test/test5.c	/^void test3bOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test3bOnConnectFailure	test/test5.c	/^void test3bOnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test3cConnected	test/test9.c	/^void test3cConnected(void* context, char* cause)$/;"	f
test3cConnected	test/test95.c	/^void test3cConnected(void* context, char* cause)$/;"	f
test3cOnConnect	test/test9.c	/^void test3cOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test3cOnConnect	test/test95.c	/^void test3cOnConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test3cOnFailure	test/test9.c	/^void test3cOnFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test3cOnFailure	test/test95.c	/^void test3cOnFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test3c_connected	test/test9.c	/^int test3c_connected = 0;$/;"	v
test3c_connected	test/test95.c	/^int test3c_connected = 0;$/;"	v
test3dOnConnect	test/test9.c	/^void test3dOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test3dOnConnect	test/test95.c	/^void test3dOnConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test3dOnFailure	test/test9.c	/^void test3dOnFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test3dOnFailure	test/test95.c	/^void test3dOnFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test3dReady	test/test9.c	/^int test3dReady = 0;$/;"	v
test3dReady	test/test95.c	/^int test3dReady = 0;$/;"	v
test3donSubscribe	test/test9.c	/^void test3donSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test3donSubscribe	test/test95.c	/^void test3donSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test4	test/test1.c	/^int test4(struct Options options)$/;"	f
test4	test/test15.c	/^int test4(struct Options options)$/;"	f
test4	test/test4.c	/^int test4(struct Options options)$/;"	f
test4	test/test45.c	/^int test4(struct Options options)$/;"	f
test4	test/test5.c	/^int test4(struct Options options)$/;"	f
test4	test/test8.c	/^int test4(struct Options options)$/;"	f
test4	test/test9.c	/^int test4(struct Options options)$/;"	f
test4	test/test95.c	/^int test4(struct Options options)$/;"	f
test4Finished	test/test9.c	/^int test4Finished = 0;$/;"	v
test4Finished	test/test95.c	/^int test4Finished = 0;$/;"	v
test4OnConnectFailure	test/test5.c	/^void test4OnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test4OnFailureCalled	test/test9.c	/^int test4OnFailureCalled = 0;$/;"	v
test4OnFailureCalled	test/test95.c	/^int test4OnFailureCalled = 0;$/;"	v
test4OnPublishFailure	test/test5.c	/^void test4OnPublishFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test4_m	test/test3.c	/^int test4_m(struct Options options)$/;"	f
test4_messageArrived	test/test4.c	/^int test4_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test4_messageArrived	test/test45.c	/^int test4_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test4_messageArrived	test/test8.c	/^int test4_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test4_messageArrived	test/test9.c	/^int test4_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test4_messageArrived	test/test95.c	/^int test4_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test4_messages_received	test/test9.c	/^int test4_messages_received = 0;$/;"	v
test4_messages_received	test/test95.c	/^int test4_messages_received = 0;$/;"	v
test4_onConnect	test/test4.c	/^void test4_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
test4_onConnect	test/test45.c	/^void test4_onConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test4_onConnect	test/test8.c	/^void test4_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
test4_onPublish	test/test4.c	/^void test4_onPublish(void* context, MQTTAsync_successData* response)$/;"	f
test4_onPublish	test/test45.c	/^void test4_onPublish(void* context, MQTTAsync_successData5* response)$/;"	f
test4_onPublish	test/test8.c	/^void test4_onPublish(void* context, MQTTAsync_successData* response)$/;"	f
test4_onSubscribe	test/test4.c	/^void test4_onSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test4_onSubscribe	test/test45.c	/^void test4_onSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test4_onSubscribe	test/test8.c	/^void test4_onSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test4_packet_size	test/test45.c	/^int test4_packet_size = 10000;$/;"	v
test4_payload	test/test4.c	/^void* test4_payload = NULL;$/;"	v
test4_payload	test/test45.c	/^void* test4_payload = NULL;$/;"	v
test4_payload	test/test8.c	/^void* test4_payload = NULL;$/;"	v
test4_payloadlen	test/test4.c	/^int test4_payloadlen = 0;$/;"	v
test4_payloadlen	test/test45.c	/^int test4_payloadlen = 0;$/;"	v
test4_payloadlen	test/test8.c	/^int test4_payloadlen = 0;$/;"	v
test4_run	test/test1.c	/^int test4_run(int qos)$/;"	f
test4_run	test/test15.c	/^int test4_run(int qos, int start_mqtt_version, int restore_mqtt_version)$/;"	f
test4_s	test/test3.c	/^int test4_s(struct Options options)$/;"	f
test4_will_message_received	test/test9.c	/^int test4_will_message_received = 0;$/;"	v
test4_will_message_received	test/test95.c	/^int test4_will_message_received = 0;$/;"	v
test4cConnected	test/test9.c	/^void test4cConnected(void* context, char* cause)$/;"	f
test4cConnected	test/test95.c	/^void test4cConnected(void* context, char* cause)$/;"	f
test4cOnConnect	test/test9.c	/^void test4cOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test4cOnConnect	test/test95.c	/^void test4cOnConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test4cOnFailure	test/test9.c	/^void test4cOnFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test4cOnFailure	test/test95.c	/^void test4cOnFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test4c_connected	test/test9.c	/^int test4c_connected = 0;$/;"	v
test4c_connected	test/test95.c	/^int test4c_connected = 0;$/;"	v
test4dOnConnect	test/test9.c	/^void test4dOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test4dOnConnect	test/test95.c	/^void test4dOnConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test4dOnFailure	test/test9.c	/^void test4dOnFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test4dOnFailure	test/test95.c	/^void test4dOnFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test4dReady	test/test9.c	/^int test4dReady = 0;$/;"	v
test4dReady	test/test95.c	/^int test4dReady = 0;$/;"	v
test4donSubscribe	test/test9.c	/^void test4donSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test4donSubscribe	test/test95.c	/^void test4donSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test5	test/test1.c	/^int test5(struct Options options)$/;"	f
test5	test/test15.c	/^int test5(struct Options options)$/;"	f
test5	test/test4.c	/^int test5(struct Options options)$/;"	f
test5	test/test45.c	/^int test5(struct Options options)$/;"	f
test5	test/test9.c	/^int test5(struct Options options)$/;"	f
test5	test/test95.c	/^int test5(struct Options options)$/;"	f
test5Finished	test/test9.c	/^int test5Finished = 0;$/;"	v
test5Finished	test/test95.c	/^int test5Finished = 0;$/;"	v
test5OnFailureCalled	test/test9.c	/^int test5OnFailureCalled = 0;$/;"	v
test5OnFailureCalled	test/test95.c	/^int test5OnFailureCalled = 0;$/;"	v
test5_messageArrived	test/test9.c	/^int test5_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test5_messageArrived	test/test95.c	/^int test5_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test5_messages_received	test/test9.c	/^int test5_messages_received = 0;$/;"	v
test5_messages_received	test/test95.c	/^int test5_messages_received = 0;$/;"	v
test5_onConnect	test/test4.c	/^void test5_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
test5_onConnect	test/test45.c	/^void test5_onConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test5_onConnect	test/test8.c	/^void test5_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
test5_onConnectFailure	test/test4.c	/^void test5_onConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test5_onConnectFailure	test/test45.c	/^void test5_onConnectFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test5_onConnectFailure	test/test8.c	/^void test5_onConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test5_onConnect_called	test/test8.c	/^int test5_onConnect_called = 0;$/;"	v
test5_onFailure_called	test/test8.c	/^int test5_onFailure_called = 0;$/;"	v
test5_will_message_received	test/test9.c	/^int test5_will_message_received = 0;$/;"	v
test5_will_message_received	test/test95.c	/^int test5_will_message_received = 0;$/;"	v
test5a	test/test3.c	/^int test5a(struct Options options)$/;"	f
test5a	test/test5.c	/^int test5a(struct Options options)$/;"	f
test5a	test/test8.c	/^int test5a(struct Options options)$/;"	f
test5aOnConnectFailure	test/test5.c	/^void test5aOnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test5aOnPublishFailure	test/test5.c	/^void test5aOnPublishFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test5b	test/test3.c	/^int test5b(struct Options options)$/;"	f
test5b	test/test5.c	/^int test5b(struct Options options)$/;"	f
test5b	test/test8.c	/^int test5b(struct Options options)$/;"	f
test5bOnConnectFailure	test/test5.c	/^void test5bOnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test5bOnPublishFailure	test/test5.c	/^void test5bOnPublishFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test5c	test/test3.c	/^int test5c(struct Options options)$/;"	f
test5c	test/test5.c	/^int test5c(struct Options options)$/;"	f
test5c	test/test8.c	/^int test5c(struct Options options)$/;"	f
test5cConnected	test/test9.c	/^void test5cConnected(void* context, char* cause)$/;"	f
test5cConnected	test/test95.c	/^void test5cConnected(void* context, char* cause)$/;"	f
test5cFinished	test/test5.c	/^int test5cFinished;$/;"	v
test5cOnConnect	test/test5.c	/^void test5cOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test5cOnConnect	test/test9.c	/^void test5cOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test5cOnConnect	test/test95.c	/^void test5cOnConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test5cOnConnectFailure	test/test5.c	/^void test5cOnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test5cOnFailure	test/test9.c	/^void test5cOnFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test5cOnFailure	test/test95.c	/^void test5cOnFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test5c_connected	test/test9.c	/^int test5c_connected = 0;$/;"	v
test5c_connected	test/test95.c	/^int test5c_connected = 0;$/;"	v
test5dOnConnect	test/test9.c	/^void test5dOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test5dOnConnect	test/test95.c	/^void test5dOnConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test5dOnFailure	test/test9.c	/^void test5dOnFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test5dOnFailure	test/test95.c	/^void test5dOnFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test5dReady	test/test9.c	/^int test5dReady = 0;$/;"	v
test5dReady	test/test95.c	/^int test5dReady = 0;$/;"	v
test5donSubscribe	test/test9.c	/^void test5donSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test5donSubscribe	test/test95.c	/^void test5donSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test6	test/test1.c	/^int test6(struct Options options)$/;"	f
test6	test/test15.c	/^int test6(struct Options options)$/;"	f
test6	test/test3.c	/^int test6(struct Options options)$/;"	f
test6	test/test4.c	/^int test6(struct Options options)$/;"	f
test6	test/test45.c	/^int test6(struct Options options)$/;"	f
test6	test/test5.c	/^int test6(struct Options options)$/;"	f
test6	test/test9.c	/^int test6(struct Options options)$/;"	f
test6	test/test95.c	/^int test6(struct Options options)$/;"	f
test6OnConnectFailure	test/test5.c	/^void test6OnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test6OnPublishFailure	test/test5.c	/^void test6OnPublishFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test6_c1	test/test1.c	/^MQTTClient test6_c1, test6_c2;$/;"	v
test6_c1	test/test15.c	/^MQTTClient test6_c1, test6_c2;$/;"	v
test6_c2	test/test1.c	/^MQTTClient test6_c1, test6_c2;$/;"	v
test6_c2	test/test15.c	/^MQTTClient test6_c1, test6_c2;$/;"	v
test6_client_info	test/test4.c	/^} test6_client_info;$/;"	t	typeref:struct:__anon100	file:
test6_client_info	test/test45.c	/^} test6_client_info;$/;"	t	typeref:struct:__anon113	file:
test6_connectionLost	test/test1.c	/^void test6_connectionLost(void* context, char* cause)$/;"	f
test6_connectionLost	test/test15.c	/^void test6_connectionLost(void* context, char* cause)$/;"	f
test6_connection_lost_called	test/test1.c	/^volatile int test6_connection_lost_called = 0;$/;"	v
test6_connection_lost_called	test/test15.c	/^volatile int test6_connection_lost_called = 0;$/;"	v
test6_deliveryComplete	test/test1.c	/^void test6_deliveryComplete(void* context, MQTTClient_deliveryToken token)$/;"	f
test6_deliveryComplete	test/test15.c	/^void test6_deliveryComplete(void* context, MQTTClient_deliveryToken token)$/;"	f
test6_messageArrived	test/test1.c	/^int test6_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* m)$/;"	f
test6_messageArrived	test/test15.c	/^int test6_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* m)$/;"	f
test6_onConnect	test/test4.c	/^void test6_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
test6_onConnect	test/test45.c	/^void test6_onConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test6_onConnectFailure	test/test4.c	/^void test6_onConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test6_onConnectFailure	test/test45.c	/^void test6_onConnectFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test6_onDisconnect	test/test4.c	/^void test6_onDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
test6_onDisconnect5	test/test45.c	/^void test6_onDisconnect5(void* context, MQTTAsync_successData5* response)$/;"	f
test6_socket_close	test/sync_client_test.c	/^int test6_socket_close(int socket)$/;"	f
test6_socket_error	test/sync_client_test.c	/^int test6_socket_error(char* aString, int sock)$/;"	f
test6_will_message	test/test1.c	/^char* test6_will_message = "will message from Client-1";$/;"	v
test6_will_message	test/test15.c	/^char* test6_will_message = "will message from Client-1";$/;"	v
test6_will_message_arrived	test/test1.c	/^volatile int test6_will_message_arrived = 0;$/;"	v
test6_will_message_arrived	test/test15.c	/^volatile int test6_will_message_arrived = 0;$/;"	v
test6_will_topic	test/test1.c	/^char* test6_will_topic = "C Test 2: will topic";$/;"	v
test6_will_topic	test/test15.c	/^char* test6_will_topic = "C Test 2: will topic";$/;"	v
test6a	test/test1.c	/^int test6a(struct Options options)$/;"	f
test6a	test/test15.c	/^int test6a(struct Options options)$/;"	f
test7	test/test4.c	/^int test7(struct Options options)$/;"	f
test7	test/test45.c	/^int test7(struct Options options)$/;"	f
test7	test/test5.c	/^int test7(struct Options options)$/;"	f
test7	test/test9.c	/^int test7(struct Options options)$/;"	f
test7	test/test95.c	/^int test7(struct Options options)$/;"	f
test7Finished	test/test9.c	/^int test7Finished = 0;$/;"	v
test7Finished	test/test95.c	/^int test7Finished = 0;$/;"	v
test7MessageArrived	test/test5.c	/^int test7MessageArrived(void* context, char* topicName, int topicLen,$/;"	f
test7OnConnect	test/test5.c	/^void test7OnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test7OnConnectFailure	test/test5.c	/^void test7OnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test7OnFailureCalled	test/test9.c	/^int test7OnFailureCalled = 0;$/;"	v
test7OnFailureCalled	test/test95.c	/^int test7OnFailureCalled = 0;$/;"	v
test7OnPublishFailure	test/test5.c	/^void test7OnPublishFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test7OnPublishSuccess	test/test5.c	/^void test7OnPublishSuccess(void* context, MQTTAsync_successData* response)$/;"	f
test7OnPublishSuccessCount	test/test5.c	/^int test7OnPublishSuccessCount = 0;$/;"	v
test7OnSubscribe	test/test5.c	/^void test7OnSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test7OnUnsubscribe	test/test5.c	/^void test7OnUnsubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test7OnUnsubscribed	test/test5.c	/^int test7OnUnsubscribed = 0;$/;"	v
test7_just_connect	test/test45.c	/^static int test7_just_connect = 0;$/;"	v	file:
test7_messageArrived	test/test4.c	/^int test7_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test7_messageArrived	test/test45.c	/^int test7_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test7_messageArrived	test/test9.c	/^int test7_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test7_messageArrived	test/test95.c	/^int test7_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test7_messageCount	test/test4.c	/^int test7_messageCount = 0;$/;"	v
test7_messageCount	test/test45.c	/^int test7_messageCount = 0;$/;"	v
test7_messages_received	test/test9.c	/^int test7_messages_received = 0;$/;"	v
test7_messages_received	test/test95.c	/^int test7_messages_received = 0;$/;"	v
test7_onConnect	test/test4.c	/^void test7_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
test7_onConnect	test/test45.c	/^void test7_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
test7_onConnect5	test/test45.c	/^void test7_onConnect5(void* context, MQTTAsync_successData5* response)$/;"	f
test7_onConnectOnly	test/test4.c	/^void test7_onConnectOnly(void* context, MQTTAsync_successData* response)$/;"	f
test7_onDisconnect	test/test4.c	/^void test7_onDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
test7_onDisconnect	test/test45.c	/^void test7_onDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
test7_onDisconnect5	test/test45.c	/^void test7_onDisconnect5(void* context, MQTTAsync_successData5* response)$/;"	f
test7_onDisconnectFailure	test/test4.c	/^void test7_onDisconnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test7_onDisconnectFailure	test/test45.c	/^void test7_onDisconnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test7_onDisconnectFailure5	test/test45.c	/^void test7_onDisconnectFailure5(void* context, MQTTAsync_failureData5* response)$/;"	f
test7_onSubscribe	test/test4.c	/^void test7_onSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test7_onSubscribe	test/test45.c	/^void test7_onSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test7_onSubscribe5	test/test45.c	/^void test7_onSubscribe5(void* context, MQTTAsync_successData5* response)$/;"	f
test7_onUnsubscribe	test/test4.c	/^void test7_onUnsubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test7_onUnsubscribe	test/test45.c	/^void test7_onUnsubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test7_onUnsubscribe5	test/test45.c	/^void test7_onUnsubscribe5(void* context, MQTTAsync_successData5* response)$/;"	f
test7_payload	test/test5.c	/^void* test7_payload = NULL;$/;"	v
test7_payloadlen	test/test5.c	/^int test7_payloadlen = 0;$/;"	v
test7_run	test/test45.c	/^int test7_run(int qos, int start_mqtt_version, int restore_mqtt_version)$/;"	f
test7_subscribed	test/test4.c	/^static int test7_subscribed = 0;$/;"	v	file:
test7_subscribed	test/test45.c	/^static int test7_subscribed = 0;$/;"	v	file:
test7_topic	test/test4.c	/^char* test7_topic = "C client test7";$/;"	v
test7_topic	test/test45.c	/^char* test7_topic = "C client test7";$/;"	v
test7_will_message_received	test/test9.c	/^int test7_will_message_received = 0;$/;"	v
test7_will_message_received	test/test95.c	/^int test7_will_message_received = 0;$/;"	v
test7cConnected	test/test9.c	/^void test7cConnected(void* context, char* cause)$/;"	f
test7cConnected	test/test95.c	/^void test7cConnected(void* context, char* cause)$/;"	f
test7cOnConnectFailure	test/test9.c	/^void test7cOnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test7cOnConnectFailure	test/test95.c	/^void test7cOnConnectFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test7cOnConnectSuccess	test/test9.c	/^void test7cOnConnectSuccess(void* context, MQTTAsync_successData* response)$/;"	f
test7cOnConnectSuccess	test/test95.c	/^void test7cOnConnectSuccess(void* context, MQTTAsync_successData5* response)$/;"	f
test7c_connected	test/test9.c	/^int test7c_connected = 0;$/;"	v
test7c_connected	test/test95.c	/^int test7c_connected = 0;$/;"	v
test7dOnConnectFailure	test/test9.c	/^void test7dOnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test7dOnConnectFailure	test/test95.c	/^void test7dOnConnectFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test7dOnConnectSuccess	test/test9.c	/^void test7dOnConnectSuccess(void* context, MQTTAsync_successData* response)$/;"	f
test7dOnConnectSuccess	test/test95.c	/^void test7dOnConnectSuccess(void* context, MQTTAsync_successData5* response)$/;"	f
test7dReady	test/test9.c	/^int test7dReady = 0;$/;"	v
test7dReady	test/test95.c	/^int test7dReady = 0;$/;"	v
test7donSubscribe	test/test9.c	/^void test7donSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test7donSubscribe	test/test95.c	/^void test7donSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test8	test/test4.c	/^int test8(struct Options options)$/;"	f
test8	test/test45.c	/^int test8(struct Options options)$/;"	f
test8	test/test5.c	/^int test8(struct Options options)$/;"	f
test8	test/test9.c	/^int test8(struct Options options)$/;"	f
test8Finished	test/test9.c	/^int test8Finished = 0;$/;"	v
test8OnFailure	test/test9.c	/^void test8OnFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test8OnFailureCalled	test/test9.c	/^int test8OnFailureCalled = 0;$/;"	v
test8_messageArrived	test/test4.c	/^int test8_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test8_messageArrived	test/test45.c	/^int test8_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test8_messageArrived	test/test9.c	/^int test8_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test8_messageCount	test/test4.c	/^int test8_messageCount = 0;$/;"	v
test8_messageCount	test/test45.c	/^int test8_messageCount = 0;$/;"	v
test8_messages_received	test/test9.c	/^int test8_messages_received = 0;$/;"	v
test8_onConnect	test/test4.c	/^void test8_onConnect(void* context, MQTTAsync_successData* response)$/;"	f
test8_onConnect	test/test45.c	/^void test8_onConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test8_onDisconnect	test/test4.c	/^void test8_onDisconnect(void* context, MQTTAsync_successData* response)$/;"	f
test8_onDisconnect	test/test45.c	/^void test8_onDisconnect(void* context, MQTTAsync_successData5* response)$/;"	f
test8_onDisconnectFailure	test/test4.c	/^void test8_onDisconnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test8_onDisconnectFailure	test/test45.c	/^void test8_onDisconnectFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test8_onPublish	test/test4.c	/^void test8_onPublish(void* context, MQTTAsync_successData* response)$/;"	f
test8_onPublish	test/test45.c	/^void test8_onPublish(void* context, MQTTAsync_successData5* response)$/;"	f
test8_onPublishFailure	test/test4.c	/^void test8_onPublishFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test8_onPublishFailure	test/test45.c	/^void test8_onPublishFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test8_onSubscribe	test/test4.c	/^void test8_onSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test8_onSubscribe	test/test45.c	/^void test8_onSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test8_publishFailures	test/test4.c	/^int test8_publishFailures = 0;$/;"	v
test8_publishFailures	test/test45.c	/^int test8_publishFailures = 0;$/;"	v
test8_subscribed	test/test4.c	/^int test8_subscribed = 0;$/;"	v
test8_subscribed	test/test45.c	/^int test8_subscribed = 0;$/;"	v
test8_topic	test/test4.c	/^char* test8_topic = "C client test8";$/;"	v
test8_topic	test/test45.c	/^char* test8_topic = "C client test8";$/;"	v
test8cConnected	test/test9.c	/^int test8cConnected = 0;$/;"	v
test8cOnConnect	test/test9.c	/^void test8cOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test8dConnected	test/test9.c	/^int test8dConnected = 0;$/;"	v
test8dOnConnect	test/test9.c	/^void test8dOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
test8dSubscribed	test/test9.c	/^int test8dSubscribed = 0;$/;"	v
test8donSubscribe	test/test9.c	/^void test8donSubscribe(void* context, MQTTAsync_successData* response)$/;"	f
test9	test/test5.c	/^int test9(struct Options options)$/;"	f
test9	test/test9.c	/^int test9(struct Options options)$/;"	f
test9Finished	test/test9.c	/^int test9Finished = 0;$/;"	v
test9OnConnectFailure	test/test5.c	/^void test9OnConnectFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test9OnFailure	test/test9.c	/^void test9OnFailure(void* context, MQTTAsync_failureData* response)$/;"	f
test9OnFailureCalled	test/test9.c	/^int test9OnFailureCalled = 0;$/;"	v
test9_messages_received	test/test9.c	/^int test9_messages_received = 0;$/;"	v
test9cConnected	test/test9.c	/^int test9cConnected = 0;$/;"	v
test9cOnConnect	test/test9.c	/^void test9cOnConnect(void* context, MQTTAsync_successData* response)$/;"	f
testFinished	test/test5.c	/^	int testFinished;$/;"	m	struct:__anon110	file:
test_373	test/test_issue373.c	/^int test_373(struct Options options)$/;"	f
test_client_topic_aliases	test/test10.c	/^int test_client_topic_aliases(struct Options options)$/;"	f
test_client_topic_aliases	test/test11.c	/^int test_client_topic_aliases(struct Options options)$/;"	f
test_client_topic_aliases_disconnected	test/test11.c	/^void test_client_topic_aliases_disconnected(void* context, MQTTProperties* props, enum MQTTReasonCodes rc)$/;"	f
test_client_topic_aliases_globals	test/test11.c	/^} test_client_topic_aliases_globals =$/;"	v	typeref:struct:__anon119
test_client_topic_aliases_messageArrived	test/test11.c	/^int test_client_topic_aliases_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test_client_topic_aliases_onConnect	test/test11.c	/^void test_client_topic_aliases_onConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test_client_topic_aliases_onSubscribe	test/test11.c	/^void test_client_topic_aliases_onSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test_cond	test/thread.c	/^int test_cond(struct Options options)$/;"	f
test_count	test/test6.c	/^int test_count = 1000;$/;"	v
test_error_reporting	test/test10.c	/^int test_error_reporting(struct Options options)$/;"	f
test_error_reporting	test/test11.c	/^int test_error_reporting(struct Options options)$/;"	f
test_error_reporting_globals	test/test11.c	/^} test_error_reporting_globals =$/;"	v	typeref:struct:__anon123
test_error_reporting_onConnect	test/test11.c	/^void test_error_reporting_onConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test_error_reporting_onSubscribe	test/test11.c	/^void test_error_reporting_onSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test_error_reporting_onUnsubscribe	test/test11.c	/^void test_error_reporting_onUnsubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test_finished	test/test11.c	/^	int test_finished;$/;"	m	struct:__anon119	file:
test_finished	test/test11.c	/^	int test_finished;$/;"	m	struct:__anon120	file:
test_finished	test/test11.c	/^	int test_finished;$/;"	m	struct:__anon121	file:
test_finished	test/test11.c	/^	int test_finished;$/;"	m	struct:__anon122	file:
test_finished	test/test11.c	/^	int test_finished;$/;"	m	struct:__anon123	file:
test_finished	test/test11.c	/^	int test_finished;$/;"	m	struct:__anon124	file:
test_finished	test/test11.c	/^	int test_finished;$/;"	m	struct:__anon125	file:
test_finished	test/test11.c	/^	int test_finished;$/;"	m	struct:__anon126	file:
test_finished	test/test11.c	/^	int test_finished;$/;"	m	struct:__anon127	file:
test_finished	test/test4.c	/^volatile int test_finished = 0;$/;"	v
test_finished	test/test45.c	/^volatile int test_finished = 0;$/;"	v
test_finished	test/test8.c	/^volatile int test_finished = 0;$/;"	v
test_finished	test/test_mqtt4async.c	/^int test_finished = 0;$/;"	v
test_flow_control	test/test10.c	/^int test_flow_control(struct Options options)$/;"	f
test_flow_control	test/test11.c	/^int test_flow_control(struct Options options)$/;"	f
test_flow_control_globals	test/test11.c	/^} test_flow_control_globals =$/;"	v	typeref:struct:__anon122
test_flow_control_messageArrived	test/test10.c	/^int test_flow_control_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* message)$/;"	f
test_flow_control_messageArrived	test/test11.c	/^int test_flow_control_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test_flow_control_onConnect	test/test11.c	/^void test_flow_control_onConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test_flow_control_onSubscribe	test/test11.c	/^void test_flow_control_onSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test_flow_control_trace_callback	test/test10.c	/^void test_flow_control_trace_callback(enum MQTTCLIENT_TRACE_LEVELS level, char* message)$/;"	f
test_map	test/test3.c	/^char* test_map[] =$/;"	v
test_mutex	test/thread.c	/^int test_mutex(struct Options options)$/;"	f
test_no	test/test1.c	/^	int test_no;$/;"	m	struct:Options	file:
test_no	test/test10.c	/^	int test_no;$/;"	m	struct:Options	file:
test_no	test/test11.c	/^	int test_no;$/;"	m	struct:Options	file:
test_no	test/test15.c	/^	int test_no;$/;"	m	struct:Options	file:
test_no	test/test2.c	/^	int test_no;$/;"	m	struct:Options	file:
test_no	test/test3.c	/^	int test_no;$/;"	m	struct:Options	file:
test_no	test/test4.c	/^	int test_no;$/;"	m	struct:Options	file:
test_no	test/test45.c	/^	int test_no;$/;"	m	struct:Options	file:
test_no	test/test5.c	/^	int test_no;$/;"	m	struct:Options	file:
test_no	test/test8.c	/^  int test_no;$/;"	m	struct:Options	file:
test_no	test/test9.c	/^	int test_no;$/;"	m	struct:Options	file:
test_no	test/test95.c	/^	int test_no;$/;"	m	struct:Options	file:
test_no	test/test_connect_destroy.c	/^	int test_no;$/;"	m	struct:Options	file:
test_no	test/test_issue373.c	/^	int test_no;$/;"	m	struct:Options	file:
test_no	test/test_mqtt4async.c	/^	int test_no;$/;"	m	struct:Options	file:
test_no	test/test_mqtt4sync.c	/^	int test_no;$/;"	m	struct:Options	file:
test_no	test/test_sync_session_present.c	/^    int test_no;$/;"	m	struct:Options	file:
test_no	test/thread.c	/^	int test_no;$/;"	m	struct:Options	file:
test_qos_1_2_errors	test/test10.c	/^int test_qos_1_2_errors(struct Options options)$/;"	f
test_qos_1_2_errors	test/test11.c	/^int test_qos_1_2_errors(struct Options options)$/;"	f
test_qos_1_2_errors_globals	test/test10.c	/^} test_qos_1_2_errors_globals =$/;"	v	typeref:struct:__anon106
test_qos_1_2_errors_globals	test/test11.c	/^} test_qos_1_2_errors_globals =$/;"	v	typeref:struct:__anon124
test_qos_1_2_errors_onConnect	test/test11.c	/^void test_qos_1_2_errors_onConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test_qos_1_2_errors_onPublishFailure	test/test11.c	/^void test_qos_1_2_errors_onPublishFailure(void* context, MQTTAsync_failureData5* response)$/;"	f
test_qos_1_2_errors_onPublishFailure2	test/test11.c	/^void test_qos_1_2_errors_onPublishFailure2(void* context, MQTTAsync_failureData5* response)$/;"	f
test_qos_1_2_errors_onPublishFailure3	test/test11.c	/^void test_qos_1_2_errors_onPublishFailure3(void* context, MQTTAsync_failureData5* response)$/;"	f
test_qos_1_2_errors_onPublishSuccess	test/test11.c	/^void test_qos_1_2_errors_onPublishSuccess(void* context, MQTTAsync_successData5* response)$/;"	f
test_request_response	test/test10.c	/^int test_request_response(struct Options options)$/;"	f
test_request_response	test/test11.c	/^int test_request_response(struct Options options)$/;"	f
test_request_response_globals	test/test10.c	/^} test_request_response_globals =$/;"	v	typeref:struct:__anon107
test_request_response_globals	test/test11.c	/^} test_request_response_globals =$/;"	v	typeref:struct:__anon125
test_request_response_messageArrived	test/test10.c	/^int test_request_response_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* message)$/;"	f
test_request_response_messageArrived	test/test11.c	/^int test_request_response_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test_request_response_onConnect	test/test11.c	/^void test_request_response_onConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test_request_response_onSubscribe	test/test11.c	/^void test_request_response_onSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test_sem	test/thread.c	/^int test_sem(struct Options options)$/;"	f
test_server_topic_aliases	test/test10.c	/^int test_server_topic_aliases(struct Options options)$/;"	f
test_server_topic_aliases	test/test11.c	/^int test_server_topic_aliases(struct Options options)$/;"	f
test_server_topic_aliases_globals	test/test11.c	/^} test_server_topic_aliases_globals =$/;"	v	typeref:struct:__anon120
test_server_topic_aliases_messageArrived	test/test11.c	/^int test_server_topic_aliases_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test_server_topic_aliases_onConnect	test/test11.c	/^void test_server_topic_aliases_onConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test_server_topic_aliases_onSubscribe	test/test11.c	/^void test_server_topic_aliases_onSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test_shared_subscriptions	test/test10.c	/^int test_shared_subscriptions(struct Options options)$/;"	f
test_shared_subscriptions	test/test11.c	/^int test_shared_subscriptions(struct Options options)$/;"	f
test_shared_subscriptions_globals	test/test10.c	/^} test_shared_subscriptions_globals =$/;"	v	typeref:struct:__anon109
test_shared_subscriptions_globals	test/test11.c	/^} test_shared_subscriptions_globals =$/;"	v	typeref:struct:__anon127
test_shared_subscriptions_messageArrived	test/test10.c	/^int test_shared_subscriptions_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* message)$/;"	f
test_shared_subscriptions_messageArrived	test/test11.c	/^int test_shared_subscriptions_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test_shared_subscriptions_onConnectc	test/test11.c	/^void test_shared_subscriptions_onConnectc(void* context, MQTTAsync_successData5* response)$/;"	f
test_shared_subscriptions_onConnectd	test/test11.c	/^void test_shared_subscriptions_onConnectd(void* context, MQTTAsync_successData5* response)$/;"	f
test_shared_subscriptions_onSubscribe	test/test11.c	/^void test_shared_subscriptions_onSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test_subscribeOptions	test/test11.c	/^int test_subscribeOptions(struct Options options)$/;"	f
test_subscribeOptions_globals	test/test11.c	/^} test_subscribeOptions_globals =$/;"	v	typeref:struct:__anon126
test_subscribeOptions_messageArrived	test/test11.c	/^int test_subscribeOptions_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test_subscribeOptions_onConnect	test/test11.c	/^void test_subscribeOptions_onConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test_subscribeOptions_onSubscribe	test/test11.c	/^void test_subscribeOptions_onSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test_subscribe_options	test/test10.c	/^int test_subscribe_options(struct Options options)$/;"	f
test_subscribe_options_globals	test/test10.c	/^} test_subscribe_options_globals =$/;"	v	typeref:struct:__anon108
test_subscribe_options_messageArrived	test/test10.c	/^int test_subscribe_options_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* message)$/;"	f
test_subscription_ids	test/test10.c	/^int test_subscription_ids(struct Options options)$/;"	f
test_subscription_ids	test/test11.c	/^int test_subscription_ids(struct Options options)$/;"	f
test_subscription_ids_globals	test/test11.c	/^} test_subscription_ids_globals =$/;"	v	typeref:struct:__anon121
test_subscription_ids_messageArrived	test/test10.c	/^int test_subscription_ids_messageArrived(void* context, char* topicName, int topicLen, MQTTClient_message* message)$/;"	f
test_subscription_ids_messageArrived	test/test11.c	/^int test_subscription_ids_messageArrived(void* context, char* topicName, int topicLen, MQTTAsync_message* message)$/;"	f
test_subscription_ids_onConnect	test/test11.c	/^void test_subscription_ids_onConnect(void* context, MQTTAsync_successData5* response)$/;"	f
test_subscription_ids_onSubscribe	test/test11.c	/^void test_subscription_ids_onSubscribe(void* context, MQTTAsync_successData5* response)$/;"	f
test_topic	test/test11.c	/^	char * test_topic;$/;"	m	struct:__anon122	file:
test_topic	test/test11.c	/^	char* test_topic;$/;"	m	struct:__anon119	file:
test_topic	test/test11.c	/^	char* test_topic;$/;"	m	struct:__anon120	file:
test_topic	test/test11.c	/^	char* test_topic;$/;"	m	struct:__anon121	file:
test_topic	test/test11.c	/^	char* test_topic;$/;"	m	struct:__anon123	file:
test_topic	test/test11.c	/^	char* test_topic;$/;"	m	struct:__anon124	file:
test_topic	test/test2.c	/^	char* test_topic;$/;"	m	struct:thread_parms	file:
test_topic	test/test4.c	/^	char test_topic[100];$/;"	m	struct:__anon99	file:
test_topic	test/test4.c	/^char* test_topic = "async test topic";$/;"	v
test_topic	test/test45.c	/^	char test_topic[100];$/;"	m	struct:__anon112	file:
test_topic	test/test45.c	/^char* test_topic = "async test topic";$/;"	v
test_topic	test/test8.c	/^	char test_topic[100];$/;"	m	struct:__anon118	file:
test_topic	test/test8.c	/^char* test_topic = "async test topic";$/;"	v
test_topic	test/test9.c	/^char test_topic[50];$/;"	v
test_topic	test/test95.c	/^char test_topic[50];$/;"	v
test_topic_aliases_globals	test/test10.c	/^} test_topic_aliases_globals =$/;"	v	typeref:struct:__anon105
test_trace_callback	test/test10.c	/^void test_trace_callback(enum MQTTCLIENT_TRACE_LEVELS level, char* message)$/;"	f
tests	src/Thread.c	/^int tests = 0, failures = 0;$/;"	v
tests	src/utf-8.c	/^} tests;$/;"	t	typeref:struct:__anon14	file:
tests	test/MQTTV311.py	/^  tests = [0, 56, 127, 128, 8888, 16383, 16384, 65535, 2097151, 2097152,$/;"	v
tests	test/MQTTV3112.py	/^  tests = [0, 56, 127, 128, 8888, 16383, 16384, 65535, 2097151, 2097152,$/;"	v
tests	test/sync_client_test.c	/^int tests = 0;$/;"	v
tests	test/test1.c	/^int tests = 0;$/;"	v
tests	test/test10.c	/^int tests = 0;$/;"	v
tests	test/test11.c	/^int tests = 0;$/;"	v
tests	test/test15.c	/^int tests = 0;$/;"	v
tests	test/test2.c	/^int tests = 0;$/;"	v
tests	test/test3.c	/^int tests = 0;$/;"	v
tests	test/test4.c	/^int tests = 0;$/;"	v
tests	test/test45.c	/^int tests = 0;$/;"	v
tests	test/test5.c	/^int tests = 0;$/;"	v
tests	test/test8.c	/^int tests = 0;$/;"	v
tests	test/test9.c	/^int tests = 0;$/;"	v
tests	test/test95.c	/^int tests = 0;$/;"	v
tests	test/test_connect_destroy.c	/^int tests = 0;$/;"	v
tests	test/test_issue373.c	/^int tests = 0;$/;"	v
tests	test/test_mqtt4async.c	/^int tests = 0;$/;"	v
tests	test/test_mqtt4sync.c	/^int tests = 0;$/;"	v
tests	test/test_sync_session_present.c	/^int tests = 0;$/;"	v
tests	test/thread.c	/^int tests = 0;$/;"	v
threadEntry	src/StackTrace.c	/^} threadEntry;$/;"	t	typeref:struct:__anon22	file:
thread_count	src/StackTrace.c	/^static int thread_count = 0;$/;"	v	file:
thread_fn	src/Thread.h	/^	typedef thread_return_type (*thread_fn)(void*);$/;"	t
thread_fn	src/Thread.h	34;"	d
thread_id	src/Log.c	/^	int thread_id;$/;"	m	struct:__anon59	file:
thread_id_type	src/Thread.h	32;"	d
thread_id_type	src/Thread.h	43;"	d
thread_parms	test/test2.c	/^struct thread_parms$/;"	s	file:
thread_parms	test/test_connect_destroy.c	/^struct thread_parms$/;"	s	file:
thread_return_type	src/Thread.h	33;"	d
thread_return_type	src/Thread.h	44;"	d
thread_type	src/Thread.h	31;"	d
thread_type	src/Thread.h	42;"	d
threadid	src/StackTrace.c	/^	thread_id_type threadid;$/;"	m	struct:__anon21	file:
threads	src/StackTrace.c	/^static threadEntry threads[MAX_THREADS];$/;"	v	file:
timeout	src/MQTTAsync.c	/^			int timeout;$/;"	m	struct:__anon4::__anon5::__anon9	file:
timeout	src/MQTTAsync.h	/^	int timeout;$/;"	m	struct:__anon95
timersub	src/OsWrapper.h	29;"	d
timestamp	test/mqttsas.py	/^def timestamp():$/;"	f
tls_ex_index_ssl_opts	src/SSLSocket.c	/^static int tls_ex_index_ssl_opts;$/;"	v	file:
toStop	src/samples/paho_c_pub.c	/^volatile int toStop = 0;$/;"	v
toStop	src/samples/paho_cs_pub.c	/^volatile int toStop = 0;$/;"	v
toStop	src/samples/paho_cs_sub.c	/^volatile int toStop = 0;$/;"	v
token	src/MQTTAsync.c	/^	MQTTAsync_token token;$/;"	m	struct:__anon4	file:
token	src/MQTTAsync.h	/^	MQTTAsync_token token;$/;"	m	struct:MQTTAsync_responseOptions
token	src/MQTTAsync.h	/^	MQTTAsync_token token;$/;"	m	struct:__anon76
token	src/MQTTAsync.h	/^	MQTTAsync_token token;$/;"	m	struct:__anon77
token	src/MQTTAsync.h	/^	MQTTAsync_token token;$/;"	m	struct:__anon78
token	src/MQTTAsync.h	/^	MQTTAsync_token token;$/;"	m	struct:__anon82
topic	src/Clients.h	/^	char *topic;$/;"	m	struct:__anon15
topic	src/Clients.h	/^	char *topic;$/;"	m	struct:__anon17
topic	src/MQTTPacket.h	/^	char* topic;	\/**< topic string *\/$/;"	m	struct:__anon46
topic	src/samples/pubsub_opts.h	/^	char* topic;$/;"	m	struct:pubsub_opts
topic	test/python/test2.py	/^topic = "test2_topic"$/;"	v
topic	test/python/test_offline.py	/^topic = "test2_topic"$/;"	v
topic	test/test10.c	/^	char* topic;$/;"	m	struct:__anon108	file:
topic	test/test10.c	/^	char* topic;$/;"	m	struct:__anon109	file:
topic	test/test11.c	/^	char* topic;$/;"	m	struct:__anon127	file:
topic	test/test5.c	/^	char topic[100];$/;"	m	struct:__anon110	file:
topic	test/test6.c	/^	char* topic;$/;"	m	struct:__anon111	file:
topic1	test/test11.c	/^	char* topic1;$/;"	m	struct:__anon126	file:
topic2	test/test11.c	/^	char* topic2;$/;"	m	struct:__anon126	file:
topicLen	src/MQTTAsync.c	/^	int topicLen;$/;"	m	struct:__anon3	file:
topicLen	src/MQTTClient.c	/^	int topicLen;$/;"	m	struct:__anon27	file:
topicLen	src/MQTTPersistence.h	/^	int topicLen;$/;"	m	struct:__anon58
topicLen	test/sync_client_test.c	/^	int topicLen;$/;"	m	struct:__anon101	file:
topicName	src/MQTTAsync.c	/^	char* topicName;$/;"	m	struct:__anon3	file:
topicName	src/MQTTAsync.h	/^	const char* topicName;$/;"	m	struct:__anon89
topicName	src/MQTTClient.c	/^	char* topicName;$/;"	m	struct:__anon27	file:
topicName	src/MQTTClient.h	/^	const char* topicName;$/;"	m	struct:__anon66
topicName	src/MQTTPersistence.h	/^	char* topicName;$/;"	m	struct:__anon58
topicName	test/sync_client_test.c	/^	char* topicName;$/;"	m	struct:__anon101	file:
topiclen	src/Clients.h	/^	int topiclen;$/;"	m	struct:__anon15
topiclen	src/MQTTPacket.h	/^	int topiclen;$/;"	m	struct:__anon46
topics	src/MQTTAsync.c	/^			char** topics;$/;"	m	struct:__anon4::__anon5::__anon6	file:
topics	src/MQTTAsync.c	/^			char** topics;$/;"	m	struct:__anon4::__anon5::__anon7	file:
topics	test/sync_client_test.c	/^char* topics[] =  {"TopicA", "TopicA\/B", "Topic\/C", "TopicA\/C", "\/TopicA"};$/;"	v
tostop	src/MQTTAsync.c	/^static int tostop = 0;$/;"	v	file:
tostop	src/MQTTClient.c	/^static int tostop = 0;$/;"	v	file:
total	src/SHA1.h	/^	unsigned int total;$/;"	m	struct:SHA_CTX_S
total	src/SocketBuffer.h	/^	size_t total;$/;"	m	struct:__anon30
traceEntry	src/Log.c	/^} traceEntry;$/;"	t	typeref:struct:__anon59	file:
trace_callback	src/Log.c	/^static Log_traceCallback* trace_callback = NULL;$/;"	v	file:
trace_callback	src/samples/paho_c_pub.c	/^void trace_callback(enum MQTTASYNC_TRACE_LEVELS level, char* message)$/;"	f
trace_callback	src/samples/paho_c_sub.c	/^void trace_callback(enum MQTTASYNC_TRACE_LEVELS level, char* message)$/;"	f
trace_callback	src/samples/paho_cs_pub.c	/^void trace_callback(enum MQTTCLIENT_TRACE_LEVELS level, char* message)$/;"	f
trace_callback	src/samples/paho_cs_sub.c	/^void trace_callback(enum MQTTCLIENT_TRACE_LEVELS level, char* message)$/;"	f
trace_callback	test/test11.c	/^void trace_callback(enum MQTTASYNC_TRACE_LEVELS level, char* message)$/;"	f
trace_callback	test/test4.c	/^void trace_callback(enum MQTTASYNC_TRACE_LEVELS level, char* message)$/;"	f
trace_callback	test/test45.c	/^void trace_callback(enum MQTTASYNC_TRACE_LEVELS level, char* message)$/;"	f
trace_callback	test/test6.c	/^void trace_callback(enum MQTTASYNC_TRACE_LEVELS level, char* message)$/;"	f
trace_callback	test/test8.c	/^void trace_callback(enum MQTTASYNC_TRACE_LEVELS level, char* message)$/;"	f
trace_destination	src/Log.c	/^static FILE* trace_destination = NULL;	\/**< flag to indicate if trace is to be sent to a stream *\/$/;"	v	file:
trace_destination_backup_name	src/Log.c	/^static char* trace_destination_backup_name = NULL; \/**< the name of the backup trace file *\/$/;"	v	file:
trace_destination_name	src/Log.c	/^static char* trace_destination_name = NULL; \/**< the name of the trace file *\/$/;"	v	file:
trace_level	src/Log.h	/^	enum LOG_LEVELS trace_level;	\/**< trace level *\/$/;"	m	struct:__anon25	typeref:enum:__anon25::LOG_LEVELS
trace_message_list	src/Messages.c	/^static const char *trace_message_list[] =$/;"	v	file:
trace_output_level	src/Log.c	/^static enum LOG_LEVELS trace_output_level = INVALID_LEVEL;$/;"	v	typeref:enum:LOG_LEVELS	file:
trace_output_level	src/Log.h	/^	enum LOG_LEVELS trace_output_level;		\/**< trace level to output to destination *\/$/;"	m	struct:__anon25	typeref:enum:__anon25::LOG_LEVELS
trace_queue	src/Log.c	/^static traceEntry* trace_queue = NULL;$/;"	v	file:
trace_queue_size	src/Log.c	/^static int trace_queue_size = 0;$/;"	v	file:
trace_settings	src/Log.c	/^trace_settings_type trace_settings =$/;"	v
trace_settings_type	src/Log.h	/^} trace_settings_type;$/;"	t	typeref:struct:__anon25
tracelevel	src/samples/pubsub_opts.h	/^	int tracelevel;$/;"	m	struct:pubsub_opts
traverse	src/Tree.c	/^int traverse(Tree *t, int lookfor)$/;"	f
trustStore	src/MQTTAsync.h	/^	const char* trustStore;$/;"	m	struct:__anon91
trustStore	src/MQTTClient.h	/^	const char* trustStore;$/;"	m	struct:__anon68
ts	src/Log.c	/^	struct timeval ts;$/;"	m	struct:__anon59	typeref:struct:__anon59::timeval	file:
type	src/MQTTAsync.c	/^	int type;$/;"	m	struct:__anon4	file:
type	src/MQTTPacket.h	/^		unsigned int type : 4;	\/**< message type nibble *\/$/;"	m	struct:__anon32::__anon33
type	src/MQTTPacket.h	/^		unsigned int type : 4;	\/**< message type nibble *\/$/;"	m	struct:__anon32::__anon34
type	src/MQTTProperties.c	/^  enum MQTTPropertyTypes type;$/;"	m	struct:nameToType	typeref:enum:nameToType::MQTTPropertyTypes	file:
unique	test/test9.c	/^char unique[50]; \/\/ unique suffix\/prefix to add to clientid\/topic etc$/;"	v
unique	test/test95.c	/^char unique[50]; \/\/ unique suffix\/prefix to add to clientid\/topic etc$/;"	v
unique	test/test_issue373.c	/^char unique[50]; \/\/ unique suffix\/prefix to add to clientid\/topic etc$/;"	v
unlock_mutex	test/test2.c	/^void unlock_mutex(mutex_type amutex)$/;"	f
unlock_mutex	test/test_connect_destroy.c	/^void unlock_mutex(mutex_type amutex)$/;"	f
unpack	test/MQTTV311.py	/^  def unpack(self, buffer):$/;"	m	class:Connacks
unpack	test/MQTTV311.py	/^  def unpack(self, buffer):$/;"	m	class:Connects
unpack	test/MQTTV311.py	/^  def unpack(self, buffer):$/;"	m	class:Disconnects
unpack	test/MQTTV311.py	/^  def unpack(self, buffer):$/;"	m	class:FixedHeaders
unpack	test/MQTTV311.py	/^  def unpack(self, buffer):$/;"	m	class:Pingreqs
unpack	test/MQTTV311.py	/^  def unpack(self, buffer):$/;"	m	class:Pingresps
unpack	test/MQTTV311.py	/^  def unpack(self, buffer):$/;"	m	class:Pubacks
unpack	test/MQTTV311.py	/^  def unpack(self, buffer):$/;"	m	class:Pubcomps
unpack	test/MQTTV311.py	/^  def unpack(self, buffer):$/;"	m	class:Publishes
unpack	test/MQTTV311.py	/^  def unpack(self, buffer):$/;"	m	class:Pubrecs
unpack	test/MQTTV311.py	/^  def unpack(self, buffer):$/;"	m	class:Pubrels
unpack	test/MQTTV311.py	/^  def unpack(self, buffer):$/;"	m	class:Subacks
unpack	test/MQTTV311.py	/^  def unpack(self, buffer):$/;"	m	class:Subscribes
unpack	test/MQTTV311.py	/^  def unpack(self, buffer):$/;"	m	class:Unsubacks
unpack	test/MQTTV311.py	/^  def unpack(self, buffer):$/;"	m	class:Unsubscribes
unpack	test/MQTTV3112.py	/^  def unpack(self, buffer):$/;"	m	class:Connacks
unpack	test/MQTTV3112.py	/^  def unpack(self, buffer):$/;"	m	class:Connects
unpack	test/MQTTV3112.py	/^  def unpack(self, buffer):$/;"	m	class:Disconnects
unpack	test/MQTTV3112.py	/^  def unpack(self, buffer):$/;"	m	class:FixedHeaders
unpack	test/MQTTV3112.py	/^  def unpack(self, buffer):$/;"	m	class:Pingreqs
unpack	test/MQTTV3112.py	/^  def unpack(self, buffer):$/;"	m	class:Pingresps
unpack	test/MQTTV3112.py	/^  def unpack(self, buffer):$/;"	m	class:Pubacks
unpack	test/MQTTV3112.py	/^  def unpack(self, buffer):$/;"	m	class:Pubcomps
unpack	test/MQTTV3112.py	/^  def unpack(self, buffer):$/;"	m	class:Publishes
unpack	test/MQTTV3112.py	/^  def unpack(self, buffer):$/;"	m	class:Pubrecs
unpack	test/MQTTV3112.py	/^  def unpack(self, buffer):$/;"	m	class:Pubrels
unpack	test/MQTTV3112.py	/^  def unpack(self, buffer):$/;"	m	class:Subacks
unpack	test/MQTTV3112.py	/^  def unpack(self, buffer):$/;"	m	class:Subscribes
unpack	test/MQTTV3112.py	/^  def unpack(self, buffer):$/;"	m	class:Unsubacks
unpack	test/MQTTV3112.py	/^  def unpack(self, buffer):$/;"	m	class:Unsubscribes
unpack	test/MQTTV5.py	/^  def unpack(self, buffer):$/;"	m	class:Properties
unpack	test/MQTTV5.py	/^  def unpack(self, buffer):$/;"	m	class:ReasonCodes
unpack	test/MQTTV5.py	/^  def unpack(self, buffer):$/;"	m	class:SubscribeOptions
unpack	test/MQTTV5.py	/^  def unpack(self, buffer, maximumPacketSize):$/;"	m	class:Acks
unpack	test/MQTTV5.py	/^  def unpack(self, buffer, maximumPacketSize):$/;"	m	class:Auths
unpack	test/MQTTV5.py	/^  def unpack(self, buffer, maximumPacketSize):$/;"	m	class:Connacks
unpack	test/MQTTV5.py	/^  def unpack(self, buffer, maximumPacketSize):$/;"	m	class:Connects
unpack	test/MQTTV5.py	/^  def unpack(self, buffer, maximumPacketSize):$/;"	m	class:Disconnects
unpack	test/MQTTV5.py	/^  def unpack(self, buffer, maximumPacketSize):$/;"	m	class:FixedHeaders
unpack	test/MQTTV5.py	/^  def unpack(self, buffer, maximumPacketSize):$/;"	m	class:Pingreqs
unpack	test/MQTTV5.py	/^  def unpack(self, buffer, maximumPacketSize):$/;"	m	class:Pingresps
unpack	test/MQTTV5.py	/^  def unpack(self, buffer, maximumPacketSize):$/;"	m	class:Publishes
unpack	test/MQTTV5.py	/^  def unpack(self, buffer, maximumPacketSize):$/;"	m	class:Subscribes
unpack	test/MQTTV5.py	/^  def unpack(self, buffer, maximumPacketSize):$/;"	m	class:UnsubSubacks
unpack	test/MQTTV5.py	/^  def unpack(self, buffer, maximumPacketSize):$/;"	m	class:Unsubscribes
unpackPacket	test/MQTTV311.py	/^def unpackPacket(buffer):$/;"	f
unpackPacket	test/MQTTV3112.py	/^def unpackPacket(buffer):$/;"	f
unpackPacket	test/MQTTV5.py	/^def unpackPacket(buffer, maximumPacketSize=MAX_PACKET_SIZE):$/;"	f
unsub	src/MQTTAsync.c	/^		} unsub;$/;"	m	union:__anon4::__anon5	typeref:struct:__anon4::__anon5::__anon7	file:
unsub	src/MQTTAsync.h	/^		} unsub;$/;"	m	union:__anon82::__anon83	typeref:struct:__anon82::__anon83::__anon87
unsuback_sem	src/MQTTClient.c	/^	sem_type unsuback_sem;$/;"	m	struct:__anon28	file:
unsuback_sem	test/sync_client_test.c	/^	int unsuback_sem;$/;"	m	struct:__anon104	file:
unsuback_sem	test/test3.c	/^	int unsuback_sem;$/;"	m	struct:__anon129	file:
unsubscribe_mutex	src/MQTTClient.c	/^static mutex_type unsubscribe_mutex = &unsubscribe_mutex_store;$/;"	v	file:
unsubscribe_mutex	src/MQTTClient.c	/^static mutex_type unsubscribe_mutex = NULL;$/;"	v	file:
unsubscribe_mutex_store	src/MQTTClient.c	/^static pthread_mutex_t unsubscribe_mutex_store = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
upper	src/utf-8.c	/^		char upper; \/**< upper limit of valid range *\/$/;"	m	struct:__anon12::__anon13	file:
usage	src/samples/pubsub_opts.c	/^void usage(struct pubsub_opts* opts, pubsub_opts_nameValue* name_values, const char* program_name)$/;"	f
usage	test/sync_client_test.c	/^void usage(void)$/;"	f
usage	test/test1.c	/^void usage(void)$/;"	f
usage	test/test10.c	/^void usage(void)$/;"	f
usage	test/test11.c	/^void usage(void)$/;"	f
usage	test/test15.c	/^void usage(void)$/;"	f
usage	test/test2.c	/^void usage(void)$/;"	f
usage	test/test3.c	/^void usage(void)$/;"	f
usage	test/test4.c	/^void usage(void)$/;"	f
usage	test/test45.c	/^void usage(void)$/;"	f
usage	test/test5.c	/^void usage(void)$/;"	f
usage	test/test6.c	/^void usage(void)$/;"	f
usage	test/test8.c	/^void usage(void)$/;"	f
usage	test/test9.c	/^void usage(void)$/;"	f
usage	test/test95.c	/^void usage(void)$/;"	f
usage	test/test_connect_destroy.c	/^void usage(void)$/;"	f
usage	test/test_issue373.c	/^void usage(void)$/;"	f
usage	test/test_mqtt4async.c	/^void usage(void)$/;"	f
usage	test/test_mqtt4sync.c	/^void usage(void)$/;"	f
usage	test/test_sync_session_present.c	/^void usage(void)$/;"	f
usage	test/thread.c	/^void usage(void)$/;"	f
useconds_t	src/OsWrapper.h	/^typedef unsigned long useconds_t;$/;"	t
user_property	src/samples/pubsub_opts.h	/^	} user_property;$/;"	m	struct:pubsub_opts	typeref:struct:pubsub_opts::__anon60
username	src/Clients.h	/^	const char* username;					\/**< MQTT v3.1 user name *\/$/;"	m	struct:__anon19
username	src/MQTTAsync.h	/^	const char* username;$/;"	m	struct:__anon93
username	src/MQTTClient.h	/^	const char* username;$/;"	m	struct:__anon70
username	src/MQTTPacket.h	/^			bool username : 1;			\/**< 3.1 user name *\/$/;"	m	struct:__anon35::__anon36::__anon37
username	src/MQTTPacket.h	/^			bool username : 1;			\/**< 3.1 user name *\/$/;"	m	struct:__anon35::__anon36::__anon38
username	src/samples/pubsub_opts.h	/^	char* username;$/;"	m	struct:pubsub_opts
username	test/sync_client_test.c	/^	char* username;					\/**< MQTT v3.1 user name *\/$/;"	m	struct:__anon103	file:
username	test/sync_client_test.c	/^	char* username;$/;"	m	struct:Options	file:
username	test/test3.c	/^	char* username;					\/**< MQTT v3.1 user name *\/$/;"	m	struct:__anon128	file:
username	test/test6.c	/^	char* username;$/;"	m	struct:__anon111	file:
username	test/test_sync_session_present.c	/^    char* username;$/;"	m	struct:Options	file:
usleep	src/OsWrapper.c	/^void usleep(useconds_t useconds)$/;"	f
uuid_generate	src/WebSocket.c	/^void uuid_generate( uuid_t out )$/;"	f
uuid_t	src/WebSocket.c	/^typedef unsigned char uuid_t[16];$/;"	t	file:
uuid_unparse	src/WebSocket.c	/^void uuid_unparse( uuid_t uu, char *out )$/;"	f
valid_ranges	src/utf-8.c	/^valid_ranges[] =$/;"	v	typeref:struct:__anon12
valid_strings	src/utf-8.c	/^tests valid_strings[] =$/;"	v
value	src/Log.h	/^	const char* value;$/;"	m	struct:__anon26
value	src/MQTTAsync.h	/^	const char* value; \/**< value string *\/$/;"	m	struct:__anon92
value	src/MQTTClient.h	/^	const char* value;$/;"	m	struct:__anon69
value	src/MQTTProperties.c	/^	enum MQTTPropertyCodes value;$/;"	m	struct:__anon73	typeref:enum:__anon73::MQTTPropertyCodes	file:
value	src/MQTTProperties.h	/^      MQTTLenString value; \/**< The value of a user property. *\/$/;"	m	struct:__anon49::__anon50::__anon51
value	src/MQTTProperties.h	/^  } value;$/;"	m	struct:__anon49	typeref:union:__anon49::__anon50
value	src/MQTTReasonCodes.c	/^	enum MQTTReasonCodes value;$/;"	m	struct:__anon52	typeref:enum:__anon52::MQTTReasonCodes	file:
value	src/samples/pubsub_opts.h	/^		char *value;$/;"	m	struct:pubsub_opts::__anon60
value	src/samples/pubsub_opts.h	/^	const char* value;$/;"	m	struct:__anon61
verbose	src/samples/pubsub_opts.h	/^	int verbose;$/;"	m	struct:pubsub_opts
verbose	test/sync_client_test.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test1.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test10.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test11.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test15.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test2.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test3.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test4.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test45.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test5.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test6.c	/^	int verbose;$/;"	m	struct:__anon111	file:
verbose	test/test8.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test9.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test95.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test_connect_destroy.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test_issue373.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test_mqtt4async.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test_mqtt4sync.c	/^	int verbose;$/;"	m	struct:Options	file:
verbose	test/test_sync_session_present.c	/^    int verbose;$/;"	m	struct:Options	file:
verbose	test/thread.c	/^	int verbose;$/;"	m	struct:Options	file:
verify	src/MQTTAsync.h	/^    int verify;$/;"	m	struct:__anon91
verify	src/MQTTClient.h	/^    int verify;$/;"	m	struct:__anon68
version	src/Clients.h	/^	const char* version;$/;"	m	struct:__anon20
version	src/MQTTClient.h	/^	int version;                        \/* the version number of this structure *\/$/;"	m	struct:MQTTResponse
version	src/MQTTPacket.h	/^	unsigned char version;	\/**< MQTT version number *\/$/;"	m	struct:__anon35
version	test/python/setup.py	/^       version = '1.0',$/;"	v
volatile	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
w	src/SHA1.h	/^		uint32_t w[16];$/;"	m	union:SHA_CTX_S::__anon62
waitForCompletion	test/test6.c	/^int waitForCompletion(START_TIME_TYPE start_time)$/;"	f
waitForNoPendingTokens	test/test45.c	/^void waitForNoPendingTokens(MQTTAsync c)$/;"	f
waitForNoPendingTokens	test/test9.c	/^void waitForNoPendingTokens(MQTTAsync c)$/;"	f
waitForNoPendingTokens	test/test95.c	/^void waitForNoPendingTokens(MQTTAsync c)$/;"	f
wait_message	test/test6.c	/^char* wait_message = NULL;$/;"	v
wait_message2	test/test6.c	/^char* wait_message2 = NULL;$/;"	v
websocket	src/Clients.h	/^	int websocket; \/**< socket has been upgraded to use web sockets *\/$/;"	m	struct:__anon18
websocket	src/MQTTAsync.c	/^	int websocket;$/;"	m	struct:MQTTAsync_struct	file:
websocket	src/MQTTClient.c	/^	int websocket;$/;"	m	struct:__anon28	file:
websocket_key	src/Clients.h	/^	char *websocket_key;$/;"	m	struct:__anon18
websockets	test/test3.c	/^	int websockets;$/;"	m	struct:Options	file:
websockets	test/test5.c	/^	int websockets;$/;"	m	struct:Options	file:
wildtopics	test/sync_client_test.c	/^char* wildtopics[] = {"TopicA\/+", "+\/C", "#", "\/#", "\/+", "+\/+", "TopicA\/#"};$/;"	v
will	src/Clients.h	/^	willMessages* will;             \/**< the MQTT will message, if any *\/$/;"	m	struct:__anon19
will	src/MQTTAsync.h	/^	MQTTAsync_willOptions* will;$/;"	m	struct:__anon93
will	src/MQTTClient.h	/^	MQTTClient_willOptions* will;$/;"	m	struct:__anon70
will	src/MQTTPacket.h	/^			bool will : 1;			\/**< will flag *\/$/;"	m	struct:__anon35::__anon36::__anon37
will	src/MQTTPacket.h	/^			bool will : 1;			\/**< will flag *\/$/;"	m	struct:__anon35::__anon36::__anon38
will	test/test3.c	/^	void* will;$/;"	m	struct:__anon128	file:
willMessages	src/Clients.h	/^} willMessages;$/;"	t	typeref:struct:__anon17
willMsg	src/MQTTPacket.h	/^        *willMsg;	\/**< will payload *\/$/;"	m	struct:__anon35
willProperties	src/MQTTAsync.h	/^	MQTTProperties *willProperties;$/;"	m	struct:__anon93
willProps	src/MQTTAsync.c	/^	MQTTProperties* willProps;$/;"	m	struct:MQTTAsync_struct	file:
willQoS	src/MQTTPacket.h	/^			unsigned int willQoS : 2;	\/**< will QoS value *\/$/;"	m	struct:__anon35::__anon36::__anon37
willQoS	src/MQTTPacket.h	/^			unsigned int willQoS : 2;	\/**< will QoS value *\/$/;"	m	struct:__anon35::__anon36::__anon38
willRetain	src/MQTTPacket.h	/^			bool willRetain : 1;		\/**< will retain setting *\/$/;"	m	struct:__anon35::__anon36::__anon37
willRetain	src/MQTTPacket.h	/^			bool willRetain : 1;		\/**< will retain setting *\/$/;"	m	struct:__anon35::__anon36::__anon38
willTopic	src/MQTTPacket.h	/^        *willTopic,	\/**< will topic *\/$/;"	m	struct:__anon35
willTopic	test/test9.c	/^char willTopic[100];$/;"	v
willTopic	test/test95.c	/^char willTopic[100];$/;"	v
will_message_test	test/sync_client_test.c	/^int will_message_test(void)$/;"	f
will_payload	src/samples/pubsub_opts.h	/^	char* will_payload;$/;"	m	struct:pubsub_opts
will_qos	src/samples/pubsub_opts.h	/^	int will_qos;$/;"	m	struct:pubsub_opts
will_retain	src/samples/pubsub_opts.h	/^	int will_retain;$/;"	m	struct:pubsub_opts
will_topic	src/samples/pubsub_opts.h	/^	char* will_topic;$/;"	m	struct:pubsub_opts
writeBytes	test/MQTTV311.py	/^def writeBytes(buffer):$/;"	f
writeBytes	test/MQTTV3112.py	/^def writeBytes(buffer):$/;"	f
writeBytes	test/MQTTV5.py	/^def writeBytes(buffer):$/;"	f
writeChar	src/MQTTPacket.c	/^void writeChar(char** pptr, char c)$/;"	f
writeData	src/MQTTPacket.c	/^void writeData(char** pptr, const void* data, int datalen)$/;"	f
writeInt	src/MQTTPacket.c	/^void writeInt(char** pptr, int anInt)$/;"	f
writeInt16	test/MQTTV311.py	/^def writeInt16(length):$/;"	f
writeInt16	test/MQTTV3112.py	/^def writeInt16(length):$/;"	f
writeInt16	test/MQTTV5.py	/^def writeInt16(length):$/;"	f
writeInt32	test/MQTTV5.py	/^def writeInt32(length):$/;"	f
writeInt4	src/MQTTPacket.c	/^void writeInt4(char** pptr, int anInt)$/;"	f
writeMQTTLenString	src/MQTTPacket.c	/^void writeMQTTLenString(char** pptr, MQTTLenString lenstring)$/;"	f
writeProperty	test/MQTTV5.py	/^  def writeProperty(self, identifier, type, value):$/;"	m	class:Properties
writeUTF	src/MQTTPacket.c	/^void writeUTF(char** pptr, const char* string)$/;"	f
writeUTF	test/MQTTV311.py	/^def writeUTF(data):$/;"	f
writeUTF	test/MQTTV3112.py	/^def writeUTF(data):$/;"	f
writeUTF	test/MQTTV5.py	/^def writeUTF(data):$/;"	f
write_pending	src/Socket.h	/^	List* write_pending; \/**< list of sockets for which a write is pending *\/$/;"	m	struct:__anon24
write_test_result	test/test1.c	/^void write_test_result(void)$/;"	f
write_test_result	test/test10.c	/^void write_test_result(void)$/;"	f
write_test_result	test/test11.c	/^void write_test_result(void)$/;"	f
write_test_result	test/test15.c	/^void write_test_result(void)$/;"	f
write_test_result	test/test2.c	/^void write_test_result(void)$/;"	f
write_test_result	test/test3.c	/^void write_test_result(void)$/;"	f
write_test_result	test/test4.c	/^void write_test_result(void)$/;"	f
write_test_result	test/test45.c	/^void write_test_result(void)$/;"	f
write_test_result	test/test5.c	/^void write_test_result(void)$/;"	f
write_test_result	test/test9.c	/^void write_test_result(void)$/;"	f
write_test_result	test/test95.c	/^void write_test_result(void)$/;"	f
write_test_result	test/test_connect_destroy.c	/^void write_test_result(void)$/;"	f
write_test_result	test/test_mqtt4async.c	/^void write_test_result(void)$/;"	f
write_test_result	test/test_mqtt4sync.c	/^void write_test_result(void)$/;"	f
write_test_result	test/test_sync_session_present.c	/^void write_test_result(void)$/;"	f
write_test_result	test/thread.c	/^void write_test_result(void)$/;"	f
writecomplete	src/Socket.c	/^static Socket_writeComplete* writecomplete = NULL;$/;"	v	file:
writes	src/SocketBuffer.c	/^static List writes;$/;"	v	file:
ws_frame	src/WebSocket.c	/^struct ws_frame$/;"	s	file:
wsbuf0	src/WebSocket.c	/^	char* wsbuf0;$/;"	m	struct:frameData	file:
wsbuf0len	src/WebSocket.c	/^	size_t wsbuf0len;$/;"	m	struct:frameData	file:
wset	src/Socket.c	/^static fd_set wset;$/;"	v	file:
wsrecv	test/mqttsas.py	/^    def wsrecv(self):$/;"	m	class:BufferedSockets
xml	test/test1.c	/^FILE* xml;$/;"	v
xml	test/test10.c	/^FILE* xml;$/;"	v
xml	test/test11.c	/^FILE* xml;$/;"	v
xml	test/test15.c	/^FILE* xml;$/;"	v
xml	test/test2.c	/^FILE* xml;$/;"	v
xml	test/test3.c	/^FILE* xml;$/;"	v
xml	test/test4.c	/^FILE* xml;$/;"	v
xml	test/test45.c	/^FILE* xml;$/;"	v
xml	test/test5.c	/^FILE* xml;$/;"	v
xml	test/test9.c	/^FILE* xml;$/;"	v
xml	test/test95.c	/^FILE* xml;$/;"	v
xml	test/test_connect_destroy.c	/^FILE* xml;$/;"	v
xml	test/test_mqtt4async.c	/^FILE* xml;$/;"	v
xml	test/test_mqtt4sync.c	/^FILE* xml;$/;"	v
xml	test/test_sync_session_present.c	/^FILE* xml;$/;"	v
xml	test/thread.c	/^FILE* xml;$/;"	v
zero_length_clientid_test	test/sync_client_test.c	/^int zero_length_clientid_test(void)$/;"	f
